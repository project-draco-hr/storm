{
  if (entry.isDirectory()) {
    File subDir=new File(outputDir,entry.getName());
    if (!subDir.mkdirs() && !subDir.isDirectory()) {
      throw new IOException("Mkdirs failed to create tar internal dir " + outputDir);
    }
    for (    TarArchiveEntry e : entry.getDirectoryEntries()) {
      unpackEntries(tis,e,subDir);
    }
    return;
  }
  File outputFile=new File(outputDir,entry.getName());
  if (!outputFile.getParentFile().exists()) {
    if (!outputFile.getParentFile().mkdirs()) {
      throw new IOException("Mkdirs failed to create tar internal dir " + outputDir);
    }
  }
  int count;
  byte data[]=new byte[2048];
  BufferedOutputStream outputStream=new BufferedOutputStream(new FileOutputStream(outputFile));
  while ((count=tis.read(data)) != -1) {
    outputStream.write(data,0,count);
  }
  outputStream.flush();
  outputStream.close();
}
