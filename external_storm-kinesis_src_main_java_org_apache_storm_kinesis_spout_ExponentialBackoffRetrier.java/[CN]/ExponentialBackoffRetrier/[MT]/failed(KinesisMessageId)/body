{
  LOG.debug("Handling failed message " + messageId);
  if (maxRetries == 0) {
    LOG.warn("maxRetries set to 0. Hence not queueing " + messageId);
    return false;
  }
  if (!failCounts.containsKey(messageId)) {
    failCounts.put(messageId,0L);
  }
  Long failCount=failCounts.get(messageId);
  failCounts.put(messageId,++failCount);
  if (failCount > maxRetries) {
    LOG.warn("maxRetries reached so dropping " + messageId);
    failCounts.remove(messageId);
    return false;
  }
  retryTimes.put(messageId,getRetryTime(failCount));
  retryMessageSet.add(messageId);
  LOG.debug("Scheduled " + messageId + " for retry at "+ retryTimes.get(messageId)+ " and retry attempt "+ failCount);
  return true;
}
