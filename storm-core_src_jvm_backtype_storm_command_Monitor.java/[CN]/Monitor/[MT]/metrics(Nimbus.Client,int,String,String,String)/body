{
  System.out.println("status\ttopologie\tslots\tcomponent\texecutors\texecutorsWithMetrics\ttime-diff ms\t" + stat + "\tthroughput (Kt/s)");
  MetricsState state=new MetricsState();
  long pollMs=poll * 1000;
  long now=System.currentTimeMillis();
  state.lastTime=now;
  long startTime=now;
  long cycle, sleepTime, wakeupTime;
  while (metrics(client,name,component,stat,now,state,"WAITING")) {
    now=System.currentTimeMillis();
    cycle=(now - startTime) / pollMs;
    wakeupTime=startTime + (pollMs * (cycle + 1));
    sleepTime=wakeupTime - now;
    if (sleepTime > 0) {
      Thread.sleep(sleepTime);
    }
    now=System.currentTimeMillis();
  }
  now=System.currentTimeMillis();
  cycle=(now - startTime) / pollMs;
  wakeupTime=startTime + (pollMs * (cycle + 1));
  sleepTime=wakeupTime - now;
  if (sleepTime > 0) {
    Thread.sleep(sleepTime);
  }
  now=System.currentTimeMillis();
  do {
    metrics(client,name,component,stat,now,state,"RUNNING");
    now=System.currentTimeMillis();
    cycle=(now - startTime) / pollMs;
    wakeupTime=startTime + (pollMs * (cycle + 1));
    sleepTime=wakeupTime - now;
    if (sleepTime > 0) {
      Thread.sleep(sleepTime);
    }
    now=System.currentTimeMillis();
  }
 while (true);
}
