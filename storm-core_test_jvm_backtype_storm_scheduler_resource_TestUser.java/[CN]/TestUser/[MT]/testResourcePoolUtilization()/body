{
  Double cpuGuarantee=400.0;
  Double memoryGuarantee=1000.0;
  Map<String,Double> resourceGuaranteeMap=new HashMap<String,Double>();
  resourceGuaranteeMap.put("cpu",cpuGuarantee);
  resourceGuaranteeMap.put("memory",memoryGuarantee);
  Config config=new Config();
  config.putAll(Utils.readDefaultConfig());
  config.put(Config.TOPOLOGY_COMPONENT_CPU_PCORE_PERCENT,100);
  config.put(Config.TOPOLOGY_COMPONENT_RESOURCES_OFFHEAP_MEMORY_MB,200);
  config.put(Config.TOPOLOGY_COMPONENT_RESOURCES_ONHEAP_MEMORY_MB,200);
  TopologyDetails topo1=TestUtilsForResourceAwareScheduler.getTopology("topo-1",config,1,1,2,1,Time.currentTimeSecs() - 24,9);
  User user1=new User("user1",resourceGuaranteeMap);
  user1.addTopologyToRunningQueue(topo1);
  Assert.assertEquals("check cpu resource guarantee",cpuGuarantee,user1.getCPUResourceGuaranteed(),0.001);
  Assert.assertEquals("check memory resource guarantee",memoryGuarantee,user1.getMemoryResourceGuaranteed(),0.001);
  Assert.assertEquals("check cpu resource pool utilization",((100.0 * 3.0) / cpuGuarantee),user1.getCPUResourcePoolUtilization(),0.001);
  Assert.assertEquals("check memory resource pool utilization",((200.0 + 200.0) * 3.0) / memoryGuarantee,user1.getMemoryResourcePoolUtilization(),0.001);
}
