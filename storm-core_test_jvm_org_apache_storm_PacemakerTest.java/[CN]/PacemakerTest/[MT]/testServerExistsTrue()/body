{
  String path="/exists_path";
  String dataString="pulse data";
  Pacemaker handler=new Pacemaker(new ConcurrentHashMap());
  HBPulse hbPulse=new HBPulse();
  hbPulse.set_id(path);
  hbPulse.set_details(Utils.javaSerialize(dataString));
  messageWithRandId(HBServerMessageType.SEND_PULSE,HBMessageData.pulse(hbPulse));
  handler.handleMessage(hbMessage,true);
  messageWithRandId(HBServerMessageType.EXISTS,HBMessageData.path(path));
  HBMessage badResponse=handler.handleMessage(hbMessage,false);
  HBMessage goodResponse=handler.handleMessage(hbMessage,true);
  Assert.assertEquals(mid,badResponse.get_message_id());
  Assert.assertEquals(HBServerMessageType.NOT_AUTHORIZED,badResponse.get_type());
  Assert.assertEquals(mid,goodResponse.get_message_id());
  Assert.assertEquals(HBServerMessageType.EXISTS_RESPONSE,goodResponse.get_type());
  Assert.assertTrue(goodResponse.get_data().get_boolval());
}
