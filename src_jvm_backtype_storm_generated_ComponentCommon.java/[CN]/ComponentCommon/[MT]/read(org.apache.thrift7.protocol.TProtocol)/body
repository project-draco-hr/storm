{
  org.apache.thrift7.protocol.TField field;
  iprot.readStructBegin();
  while (true) {
    field=iprot.readFieldBegin();
    if (field.type == org.apache.thrift7.protocol.TType.STOP) {
      break;
    }
switch (field.id) {
case 1:
      if (field.type == org.apache.thrift7.protocol.TType.MAP) {
{
          org.apache.thrift7.protocol.TMap _map8=iprot.readMapBegin();
          this.streams=new HashMap<Integer,StreamInfo>(2 * _map8.size);
          for (int _i9=0; _i9 < _map8.size; ++_i9) {
            int _key10;
            StreamInfo _val11;
            _key10=iprot.readI32();
            _val11=new StreamInfo();
            _val11.read(iprot);
            this.streams.put(_key10,_val11);
          }
          iprot.readMapEnd();
        }
      }
 else {
        org.apache.thrift7.protocol.TProtocolUtil.skip(iprot,field.type);
      }
    break;
case 2:
  if (field.type == org.apache.thrift7.protocol.TType.I32) {
    this.parallelism_hint=iprot.readI32();
    set_parallelism_hint_isSet(true);
  }
 else {
    org.apache.thrift7.protocol.TProtocolUtil.skip(iprot,field.type);
  }
break;
default :
org.apache.thrift7.protocol.TProtocolUtil.skip(iprot,field.type);
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
validate();
}
