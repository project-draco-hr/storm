{
  org.apache.thrift7.protocol.TField field;
  iprot.readStructBegin();
  while (true) {
    field=iprot.readFieldBegin();
    if (field.type == org.apache.thrift7.protocol.TType.STOP) {
      break;
    }
switch (field.id) {
case 1:
      if (field.type == org.apache.thrift7.protocol.TType.MAP) {
{
          org.apache.thrift7.protocol.TMap _map12=iprot.readMapBegin();
          this.inputs=new HashMap<GlobalStreamId,Grouping>(2 * _map12.size);
          for (int _i13=0; _i13 < _map12.size; ++_i13) {
            GlobalStreamId _key14;
            Grouping _val15;
            _key14=new GlobalStreamId();
            _key14.read(iprot);
            _val15=new Grouping();
            _val15.read(iprot);
            this.inputs.put(_key14,_val15);
          }
          iprot.readMapEnd();
        }
      }
 else {
        org.apache.thrift7.protocol.TProtocolUtil.skip(iprot,field.type);
      }
    break;
case 2:
  if (field.type == org.apache.thrift7.protocol.TType.MAP) {
{
      org.apache.thrift7.protocol.TMap _map16=iprot.readMapBegin();
      this.streams=new HashMap<String,StreamInfo>(2 * _map16.size);
      for (int _i17=0; _i17 < _map16.size; ++_i17) {
        String _key18;
        StreamInfo _val19;
        _key18=iprot.readString();
        _val19=new StreamInfo();
        _val19.read(iprot);
        this.streams.put(_key18,_val19);
      }
      iprot.readMapEnd();
    }
  }
 else {
    org.apache.thrift7.protocol.TProtocolUtil.skip(iprot,field.type);
  }
break;
case 3:
if (field.type == org.apache.thrift7.protocol.TType.I32) {
this.parallelism_hint=iprot.readI32();
set_parallelism_hint_isSet(true);
}
 else {
org.apache.thrift7.protocol.TProtocolUtil.skip(iprot,field.type);
}
break;
default :
org.apache.thrift7.protocol.TProtocolUtil.skip(iprot,field.type);
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
validate();
}
