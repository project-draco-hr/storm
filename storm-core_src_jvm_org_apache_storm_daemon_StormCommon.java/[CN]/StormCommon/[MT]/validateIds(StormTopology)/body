{
  List<String> componentIds=new ArrayList<String>();
  for (  StormTopology._Fields field : Thrift.getTopologyFields()) {
    if (ThriftTopologyUtils.isWorkerHook(field) == false) {
      Object value=topology.getFieldValue(field);
      if (value != null) {
        Map<String,Object> componentMap=(Map<String,Object>)value;
        componentIds.addAll(componentMap.keySet());
        for (        String id : componentMap.keySet()) {
          if (Utils.isSystemId(id)) {
            throw new InvalidTopologyException(id + " is not a valid component id.");
          }
        }
        for (        Object componentObj : componentMap.values()) {
          ComponentCommon common=getComponentCommon(componentObj);
          Set<String> streamIds=common.get_streams().keySet();
          for (          String id : streamIds) {
            if (Utils.isSystemId(id)) {
              throw new InvalidTopologyException(id + " is not a valid stream id.");
            }
          }
        }
      }
    }
  }
  List<String> offending=Utils.getRepeat(componentIds);
  if (offending.isEmpty() == false) {
    throw new InvalidTopologyException("Duplicate component ids: " + offending);
  }
}
