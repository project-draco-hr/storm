{
  validateIds(topology);
  for (  StormTopology._Fields field : Thrift.getSpoutFields()) {
    Map<String,Object> spoutComponents=(Map<String,Object>)topology.getFieldValue(field);
    if (spoutComponents != null) {
      for (      Object obj : spoutComponents.values()) {
        ComponentCommon common=getComponentCommon(obj);
        if (!isEmptyInputs(common)) {
          throw new InvalidTopologyException("May not declare inputs for a spout");
        }
      }
    }
  }
  Map<String,Object> componentMap=allComponents(topology);
  for (  Object componentObj : componentMap.values()) {
    Map conf=componentConf(componentObj);
    ComponentCommon common=getComponentCommon(componentObj);
    int parallelismHintNum=Thrift.getParallelismHint(common);
    Integer taskNum=Utils.getInt(conf.get(Config.TOPOLOGY_TASKS),0);
    if (taskNum > 0 && parallelismHintNum <= 0) {
      throw new InvalidTopologyException("Number of executors must be greater than 0 when number of tasks is greater than 0");
    }
  }
}
