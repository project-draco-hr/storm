{
  try {
    final SaslMessageToken fSaslTokenMessage=saslTokenMessage;
    byte[] retval=Subject.doAs(subject,new PrivilegedExceptionAction<byte[]>(){
      public byte[] run(){
        try {
          byte[] retval=saslClient.evaluateChallenge(fSaslTokenMessage.getSaslToken());
          return retval;
        }
 catch (        SaslException e) {
          LOG.error("saslResponse: Failed to respond to SASL server's token:",e);
          throw new RuntimeException(e);
        }
      }
    }
);
    return retval;
  }
 catch (  PrivilegedActionException e) {
    LOG.error("Failed to generate response for token: ",e);
    throw new RuntimeException(e);
  }
}
