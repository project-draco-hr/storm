{
  PositiveNumberValidator validator=new PositiveNumberValidator();
  Object[] passCases={null,1.0,0.01,1,2147483647,42};
  for (  Object value : passCases) {
    validator.validateField("test",value);
  }
  Object[] failCases={-1.0,-1,-0.01,0.0,0,"43","string"};
  for (  Object value : failCases) {
    try {
      validator.validateField("test",value);
      Assert.fail("Expected Exception not Thrown for value: " + value);
    }
 catch (    IllegalArgumentException Ex) {
    }
  }
  Object[] passCasesIncludeZero={null,1.0,0.01,0,2147483647,0.0};
  for (  Object value : passCasesIncludeZero) {
    validator.validateField("test",true,value);
  }
  Object[] failCasesIncludeZero={-1.0,-1,-0.01,"43","string"};
  for (  Object value : failCasesIncludeZero) {
    try {
      validator.validateField("test",true,value);
      Assert.fail("Expected Exception not Thrown for value: " + value);
    }
 catch (    IllegalArgumentException Ex) {
    }
  }
}
