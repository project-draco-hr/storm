{
  NoDuplicateInListValidator validator=new NoDuplicateInListValidator();
  Collection<Object> passCases=new LinkedList<Object>();
  Collection<Object> failCases=new LinkedList<Object>();
  Object[] passCase1={1000,0,-1000};
  Object[] passCase2={"one","two","three"};
  Object[] passCase3={false,true};
  Object[] passCase4={false,true,1000,0,-1000,"one","two","three"};
  Object[] passCase5={1000.0,0.0,-1000.0};
  passCases.add(Arrays.asList(passCase1));
  passCases.add(Arrays.asList(passCase2));
  passCases.add(Arrays.asList(passCase3));
  passCases.add(Arrays.asList(passCase4));
  passCases.add(Arrays.asList(passCase5));
  passCases.add(null);
  for (  Object value : passCases) {
    validator.validateField("test",value);
  }
  Object[] failCase1={1000,0,1000};
  Object[] failCase2={"one","one","two"};
  Object[] failCase3={5.0,5.0,6};
  failCases.add(Arrays.asList(failCase1));
  failCases.add(Arrays.asList(failCase2));
  failCases.add(Arrays.asList(failCase3));
  for (  Object value : failCases) {
    try {
      validator.validateField("test",value);
      Assert.fail("Expected Exception not Thrown for value: " + value);
    }
 catch (    IllegalArgumentException Ex) {
    }
  }
}
