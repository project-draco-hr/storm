{
  _collector=collector;
  Map stateConf=new HashMap(conf);
  _connections=new DynamicPartitionConnections(_spoutConfig);
  List<String> zkServers=_spoutConfig.zkServers;
  if (zkServers == null)   zkServers=(List<String>)conf.get(Config.STORM_ZOOKEEPER_SERVERS);
  Integer zkPort=_spoutConfig.zkPort;
  if (zkPort == null)   zkPort=((Number)conf.get(Config.STORM_ZOOKEEPER_PORT)).intValue();
  String zkRoot=_spoutConfig.zkRoot;
  stateConf.put(Config.TRANSACTIONAL_ZOOKEEPER_SERVERS,zkServers);
  stateConf.put(Config.TRANSACTIONAL_ZOOKEEPER_PORT,zkPort);
  stateConf.put(Config.TRANSACTIONAL_ZOOKEEPER_ROOT,zkRoot);
  Config componentConf=new Config();
  componentConf.registerSerialization(ZooMeta.class);
  _state=TransactionalState.newUserState(stateConf,_spoutConfig.id,componentConf);
  int totalTasks=context.getComponentTasks(context.getThisComponentId()).size();
  if (_spoutConfig.hosts instanceof KafkaConfig.StaticHosts) {
    _coordinator=new StaticCoordinator(_connections,_spoutConfig,context.getThisTaskIndex(),totalTasks,_state,_uuid);
  }
 else {
    _coordinator=new ZkCoordinator(_connections,conf,_spoutConfig,context.getThisTaskIndex(),totalTasks,_state,_uuid);
  }
}
