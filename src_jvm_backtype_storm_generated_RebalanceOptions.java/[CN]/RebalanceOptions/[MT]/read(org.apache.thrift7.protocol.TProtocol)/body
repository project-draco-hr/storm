{
  org.apache.thrift7.protocol.TField field;
  iprot.readStructBegin();
  while (true) {
    field=iprot.readFieldBegin();
    if (field.type == org.apache.thrift7.protocol.TType.STOP) {
      break;
    }
switch (field.id) {
case 1:
      if (field.type == org.apache.thrift7.protocol.TType.I32) {
        this.wait_secs=iprot.readI32();
        set_wait_secs_isSet(true);
      }
 else {
        org.apache.thrift7.protocol.TProtocolUtil.skip(iprot,field.type);
      }
    break;
case 2:
  if (field.type == org.apache.thrift7.protocol.TType.I32) {
    this.num_workers=iprot.readI32();
    set_num_workers_isSet(true);
  }
 else {
    org.apache.thrift7.protocol.TProtocolUtil.skip(iprot,field.type);
  }
break;
case 3:
if (field.type == org.apache.thrift7.protocol.TType.MAP) {
{
  org.apache.thrift7.protocol.TMap _map138=iprot.readMapBegin();
  this.num_executors=new HashMap<String,Integer>(2 * _map138.size);
  for (int _i139=0; _i139 < _map138.size; ++_i139) {
    String _key140;
    int _val141;
    _key140=iprot.readString();
    _val141=iprot.readI32();
    this.num_executors.put(_key140,_val141);
  }
  iprot.readMapEnd();
}
}
 else {
org.apache.thrift7.protocol.TProtocolUtil.skip(iprot,field.type);
}
break;
default :
org.apache.thrift7.protocol.TProtocolUtil.skip(iprot,field.type);
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
validate();
}
