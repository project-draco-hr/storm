{
  _tracked=new TimeCacheMap<Object,TrackingInfo>(Utils.getInt(config.get(Config.TOPOLOGY_MESSAGE_TIMEOUT_SECS)));
  _collector=collector;
  _delegate.prepare(config,context,new CoordinatedOutputCollector(collector));
  for (  String component : Utils.get(context.getThisTargets(),Constants.COORDINATED_STREAM_ID,new HashMap<String,Grouping>()).keySet()) {
    for (    Integer task : context.getComponentTasks(component)) {
      _countOutTasks.add(task);
    }
  }
  if (_sourceArgs != null) {
    if (_sourceArgs.singleCount) {
      _numSourceReports=1;
    }
 else {
      Iterator<GlobalStreamId> it=context.getThisSources().keySet().iterator();
      while (it.hasNext()) {
        String sourceComponent=it.next().get_componentId();
        if (_idSource == null || !sourceComponent.equals(_idSource.get_componentId())) {
          _numSourceReports=context.getComponentTasks(sourceComponent).size();
          break;
        }
      }
    }
  }
}
