{
  Object id=tup.getValue(0);
synchronized (_tracked) {
    TrackingInfo track=_tracked.get(id);
    if (track != null && track.receivedId && (_sourceArgs.isEmpty() || track.reportCount == _numSourceReports && track.expectedTupleCount == track.receivedTuples)) {
      if (_delegate instanceof FinishedCallback) {
        ((FinishedCallback)_delegate).finishedId(new FinishedTupleImpl(tup));
      }
      if (!_sourceArgs.isEmpty() && !tup.getSourceStreamId().equals(Constants.COORDINATED_STREAM_ID)) {
        throw new IllegalStateException("Coordination condition met on a non-coordinating tuple. Should be impossible");
      }
      Iterator<Integer> outTasks=_countOutTasks.iterator();
      while (outTasks.hasNext()) {
        int task=outTasks.next();
        int numTuples=get(track.taskEmittedTuples,task,0);
        _collector.emitDirect(task,Constants.COORDINATED_STREAM_ID,tup,new Values(id,numTuples));
      }
      _tracked.remove(id);
    }
  }
}
