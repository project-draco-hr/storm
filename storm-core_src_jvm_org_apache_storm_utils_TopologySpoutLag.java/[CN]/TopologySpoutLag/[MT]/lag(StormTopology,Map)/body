{
  List<Map<String,Object>> result=new ArrayList<>();
  Map<String,SpoutSpec> spouts=stormTopology.get_spouts();
  String className=null;
  for (  Map.Entry<String,SpoutSpec> spout : spouts.entrySet()) {
    try {
      SpoutSpec spoutSpec=spout.getValue();
      ComponentObject componentObject=spoutSpec.get_spout_object();
      className=getClassNameFromComponentObject(componentObject);
      logger.debug("spout classname: {}",className);
      if (className.endsWith("storm.kafka.spout.KafkaSpout")) {
        result.add(getLagResultForNewKafkaSpout(spout.getKey(),spoutSpec,topologyConf));
      }
 else       if (className.endsWith("storm.kafka.KafkaSpout")) {
        result.add(getLagResultForOldKafkaSpout(spout.getKey(),spoutSpec,topologyConf));
      }
    }
 catch (    Exception e) {
      logger.warn("Exception thrown while getting lag for spout id: " + spout.getKey() + " and spout class: "+ className);
      logger.warn("Exception message:" + e.getMessage(),e);
    }
  }
  return result;
}
