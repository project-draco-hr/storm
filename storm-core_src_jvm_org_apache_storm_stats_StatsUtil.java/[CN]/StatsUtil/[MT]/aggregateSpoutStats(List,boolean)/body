{
  Map ret=new HashMap();
  Map commonStats=preProcessStreamSummary(aggregateCommonStats(statsSeq),includeSys);
  List acked=new ArrayList();
  List failed=new ArrayList();
  List completeLatencies=new ArrayList();
  for (  Object o : statsSeq) {
    ExecutorStats stat=(ExecutorStats)o;
    acked.add(stat.get_specific().get_spout().get_acked());
    failed.add(stat.get_specific().get_spout().get_failed());
    completeLatencies.add(stat.get_specific().get_spout().get_complete_ms_avg());
  }
  mergeMaps(ret,commonStats);
  putKV(ret,ACKED,aggregateCounts(acked));
  putKV(ret,FAILED,aggregateCounts(failed));
  putKV(ret,COMP_LATENCIES,aggregateAverages(completeLatencies,acked));
  return ret;
}
