{
  Map<String,Object> ret=new HashMap<>();
  putKV(ret,EXECUTOR_ID,getByKey(beat,"exec-id"));
  putKV(ret,HOST,getByKey(beat,HOST));
  putKV(ret,PORT,getByKey(beat,PORT));
  putKV(ret,UPTIME,getByKey(beat,UPTIME));
  putKV(ret,NUM_EXECUTORS,1);
  putKV(ret,NUM_TASKS,getByKey(beat,NUM_TASKS));
  Map stat2win2sid2num=getMapByKey(beat,STATS);
  Map outputStats=new HashMap();
  Map win2sid2acked=windowSetConverter(getMapByKey(stat2win2sid2num,ACKED),TO_STRING);
  Map win2sid2failed=windowSetConverter(getMapByKey(stat2win2sid2num,FAILED),TO_STRING);
  Map win2sid2emitted=windowSetConverter(getMapByKey(stat2win2sid2num,EMITTED),TO_STRING);
  Map win2sid2transferred=windowSetConverter(getMapByKey(stat2win2sid2num,TRANSFERRED),TO_STRING);
  Map win2sid2compLat=windowSetConverter(getMapByKey(stat2win2sid2num,COMP_LATENCIES),TO_STRING);
  putKV(outputStats,ACKED,win2sid2acked.get(window));
  putKV(outputStats,FAILED,win2sid2failed.get(window));
  Map<String,Long> sid2emitted=(Map)win2sid2emitted.get(window);
  if (sid2emitted == null) {
    sid2emitted=new HashMap<>();
  }
  putKV(outputStats,EMITTED,filterSysStreams2Stat(sid2emitted,includeSys));
  Map<String,Long> sid2transferred=(Map)win2sid2transferred.get(window);
  if (sid2transferred == null) {
    sid2transferred=new HashMap<>();
  }
  putKV(outputStats,TRANSFERRED,filterSysStreams2Stat(sid2transferred,includeSys));
  outputStats=swapMapOrder(outputStats);
  Map sid2compLat=(Map)win2sid2compLat.get(window);
  Map sid2acked=(Map)win2sid2acked.get(window);
  mergeMaps(outputStats,aggSpoutStreamsLatAndCount(sid2compLat,sid2acked));
  putKV(ret,SID_TO_OUT_STATS,outputStats);
  return ret;
}
