{
  TopologyPageInfo ret=new TopologyPageInfo(topologyId);
  Integer numTasks=getByKeywordOr0(data,NUM_TASKS).intValue();
  Integer numWorkers=getByKeywordOr0(data,NUM_WORKERS).intValue();
  Integer numExecutors=getByKeywordOr0(data,NUM_EXECUTORS).intValue();
  Map spout2stats=getMapByKeyword(data,SPOUT_TO_STATS);
  Map bolt2stats=getMapByKeyword(data,BOLT_TO_STATS);
  Map win2emitted=getMapByKeyword(data,WIN_TO_EMITTED);
  Map win2transferred=getMapByKeyword(data,WIN_TO_TRANSFERRED);
  Map win2compLatency=getMapByKeyword(data,WIN_TO_COMP_LAT);
  Map win2acked=getMapByKeyword(data,WIN_TO_ACKED);
  Map win2failed=getMapByKeyword(data,WIN_TO_FAILED);
  Map<String,ComponentAggregateStats> spoutAggStats=new HashMap<>();
  for (  Object o : spout2stats.entrySet()) {
    Map.Entry e=(Map.Entry)o;
    String id=(String)e.getKey();
    Map v=(Map)e.getValue();
    putRawKV(v,TYPE,KW_SPOUT);
    spoutAggStats.put(id,thriftifySpoutAggStats(v));
  }
  Map<String,ComponentAggregateStats> boltAggStats=new HashMap<>();
  for (  Object o : bolt2stats.entrySet()) {
    Map.Entry e=(Map.Entry)o;
    String id=(String)e.getKey();
    Map v=(Map)e.getValue();
    putRawKV(v,TYPE,KW_BOLT);
    boltAggStats.put(id,thriftifyBoltAggStats(v));
  }
  TopologyStats topologyStats=new TopologyStats();
  topologyStats.set_window_to_acked(win2acked);
  topologyStats.set_window_to_emitted(win2emitted);
  topologyStats.set_window_to_failed(win2failed);
  topologyStats.set_window_to_transferred(win2transferred);
  topologyStats.set_window_to_complete_latencies_ms(win2compLatency);
  ret.set_num_tasks(numTasks);
  ret.set_num_workers(numWorkers);
  ret.set_num_executors(numExecutors);
  ret.set_id_to_spout_agg_stats(spoutAggStats);
  ret.set_id_to_bolt_agg_stats(boltAggStats);
  ret.set_topology_stats(topologyStats);
  return ret;
}
