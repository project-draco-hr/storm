{
  Map ret=new HashMap();
  Map accIn=getMapByKey(accBoltStats,CID_SID_TO_IN_STATS);
  Map accOut=getMapByKey(accBoltStats,SID_TO_OUT_STATS);
  Map boltIn=getMapByKey(boltStats,CID_SID_TO_IN_STATS);
  Map boltOut=getMapByKey(boltStats,SID_TO_OUT_STATS);
  int numExecutors=getByKeywordOr0(accBoltStats,NUM_EXECUTORS).intValue();
  putKV(ret,NUM_EXECUTORS,numExecutors + 1);
  putKV(ret,NUM_TASKS,sumOr0(getByKeywordOr0(accBoltStats,NUM_TASKS),getByKeywordOr0(boltStats,NUM_TASKS)));
  putKV(ret,SID_TO_OUT_STATS,fullMergeWithSum(accOut,boltOut));
  putKV(ret,CID_SID_TO_IN_STATS,fullMergeWithSum(accIn,boltIn));
  long executed=sumStreamsLong(boltIn,EXECUTED);
  putKV(ret,EXECUTED,executed);
  Map executorStats=new HashMap();
  putKV(executorStats,EXECUTOR_ID,getByKey(boltStats,EXECUTOR_ID));
  putKV(executorStats,UPTIME,getByKey(boltStats,UPTIME));
  putKV(executorStats,HOST,getByKey(boltStats,HOST));
  putKV(executorStats,PORT,getByKey(boltStats,PORT));
  putKV(executorStats,CAPACITY,getByKey(boltStats,CAPACITY));
  putKV(executorStats,EMITTED,sumStreamsLong(boltOut,EMITTED));
  putKV(executorStats,TRANSFERRED,sumStreamsLong(boltOut,TRANSFERRED));
  putKV(executorStats,ACKED,sumStreamsLong(boltIn,ACKED));
  putKV(executorStats,FAILED,sumStreamsLong(boltIn,FAILED));
  putKV(executorStats,EXECUTED,executed);
  if (executed > 0) {
    putKV(executorStats,EXEC_LATENCY,sumStreamsDouble(boltIn,EXEC_LAT_TOTAL) / executed);
    putKV(executorStats,PROC_LATENCY,sumStreamsDouble(boltIn,PROC_LAT_TOTAL) / executed);
  }
 else {
    putKV(executorStats,EXEC_LATENCY,null);
    putKV(executorStats,PROC_LATENCY,null);
  }
  List executorStatsList=((List)getByKey(accBoltStats,EXECUTOR_STATS));
  executorStatsList.add(executorStats);
  putKV(ret,EXECUTOR_STATS,executorStatsList);
  return ret;
}
