{
  List<Get> gets=new ArrayList<Get>();
  for (  List<Object> key : keys) {
    byte[] hbaseKey=this.options.mapMapper.rowKey(key);
    String qualifier=this.options.mapMapper.qualifier(key);
    LOG.info("Partition: {}, GET: {}",this.partitionNum,new String(hbaseKey));
    Get get=new Get(hbaseKey);
    get.addColumn(this.options.columnFamily.getBytes(),qualifier.getBytes());
    gets.add(get);
  }
  List<T> retval=new ArrayList<T>();
  try {
    Result[] results=this.table.get(gets);
    for (int i=0; i < keys.size(); i++) {
      String qualifier=this.options.mapMapper.qualifier(keys.get(i));
      Result result=results[i];
      byte[] value=result.getValue(this.options.columnFamily.getBytes(),qualifier.getBytes());
      if (value != null) {
        retval.add(this.serializer.deserialize(value));
      }
 else {
        retval.add(null);
      }
    }
  }
 catch (  IOException e) {
    throw new FailedException("IOException while reading from HBase.",e);
  }
  return retval;
}
