{
  _type.assertFull();
  String stormRoot=ConfigUtils.supervisorStormDistRoot(_conf,_topologyId);
  String workerRoot=ConfigUtils.workerRoot(_conf,_workerId);
  @SuppressWarnings("unchecked") Map<String,Map<String,Object>> blobstoreMap=(Map<String,Map<String,Object>>)_topoConf.get(Config.TOPOLOGY_BLOBSTORE_MAP);
  List<String> blobFileNames=new ArrayList<>();
  if (blobstoreMap != null) {
    for (    Map.Entry<String,Map<String,Object>> entry : blobstoreMap.entrySet()) {
      String key=entry.getKey();
      Map<String,Object> blobInfo=entry.getValue();
      String ret=null;
      if (blobInfo != null && blobInfo.containsKey("localname")) {
        ret=(String)blobInfo.get("localname");
      }
 else {
        ret=key;
      }
      blobFileNames.add(ret);
    }
  }
  List<String> resourceFileNames=new ArrayList<>();
  resourceFileNames.add(ConfigUtils.RESOURCES_SUBDIR);
  resourceFileNames.addAll(blobFileNames);
  LOG.info("Creating symlinks for worker-id: {} storm-id: {} for files({}): {}",_workerId,_topologyId,resourceFileNames.size(),resourceFileNames);
  _ops.createSymlink(new File(workerRoot,ConfigUtils.RESOURCES_SUBDIR),new File(stormRoot,ConfigUtils.RESOURCES_SUBDIR));
  for (  String fileName : blobFileNames) {
    _ops.createSymlink(new File(workerRoot,fileName),new File(stormRoot,fileName));
  }
}
