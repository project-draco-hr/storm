{
  TTupleProtocol iprot=(TTupleProtocol)prot;
  struct.component_id=iprot.readString();
  struct.set_component_id_isSet(true);
  struct.component_type=org.apache.storm.generated.ComponentType.findByValue(iprot.readI32());
  struct.set_component_type_isSet(true);
  BitSet incoming=iprot.readBitSet(14);
  if (incoming.get(0)) {
    struct.topology_id=iprot.readString();
    struct.set_topology_id_isSet(true);
  }
  if (incoming.get(1)) {
    struct.topology_name=iprot.readString();
    struct.set_topology_name_isSet(true);
  }
  if (incoming.get(2)) {
    struct.num_executors=iprot.readI32();
    struct.set_num_executors_isSet(true);
  }
  if (incoming.get(3)) {
    struct.num_tasks=iprot.readI32();
    struct.set_num_tasks_isSet(true);
  }
  if (incoming.get(4)) {
{
      org.apache.thrift.protocol.TMap _map516=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.STRUCT,iprot.readI32());
      struct.window_to_stats=new HashMap<String,ComponentAggregateStats>(2 * _map516.size);
      String _key517;
      ComponentAggregateStats _val518;
      for (int _i519=0; _i519 < _map516.size; ++_i519) {
        _key517=iprot.readString();
        _val518=new ComponentAggregateStats();
        _val518.read(iprot);
        struct.window_to_stats.put(_key517,_val518);
      }
    }
    struct.set_window_to_stats_isSet(true);
  }
  if (incoming.get(5)) {
{
      org.apache.thrift.protocol.TMap _map520=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRUCT,org.apache.thrift.protocol.TType.STRUCT,iprot.readI32());
      struct.gsid_to_input_stats=new HashMap<GlobalStreamId,ComponentAggregateStats>(2 * _map520.size);
      GlobalStreamId _key521;
      ComponentAggregateStats _val522;
      for (int _i523=0; _i523 < _map520.size; ++_i523) {
        _key521=new GlobalStreamId();
        _key521.read(iprot);
        _val522=new ComponentAggregateStats();
        _val522.read(iprot);
        struct.gsid_to_input_stats.put(_key521,_val522);
      }
    }
    struct.set_gsid_to_input_stats_isSet(true);
  }
  if (incoming.get(6)) {
{
      org.apache.thrift.protocol.TMap _map524=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.STRUCT,iprot.readI32());
      struct.sid_to_output_stats=new HashMap<String,ComponentAggregateStats>(2 * _map524.size);
      String _key525;
      ComponentAggregateStats _val526;
      for (int _i527=0; _i527 < _map524.size; ++_i527) {
        _key525=iprot.readString();
        _val526=new ComponentAggregateStats();
        _val526.read(iprot);
        struct.sid_to_output_stats.put(_key525,_val526);
      }
    }
    struct.set_sid_to_output_stats_isSet(true);
  }
  if (incoming.get(7)) {
{
      org.apache.thrift.protocol.TList _list528=new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT,iprot.readI32());
      struct.exec_stats=new ArrayList<ExecutorAggregateStats>(_list528.size);
      ExecutorAggregateStats _elem529;
      for (int _i530=0; _i530 < _list528.size; ++_i530) {
        _elem529=new ExecutorAggregateStats();
        _elem529.read(iprot);
        struct.exec_stats.add(_elem529);
      }
    }
    struct.set_exec_stats_isSet(true);
  }
  if (incoming.get(8)) {
{
      org.apache.thrift.protocol.TList _list531=new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT,iprot.readI32());
      struct.errors=new ArrayList<ErrorInfo>(_list531.size);
      ErrorInfo _elem532;
      for (int _i533=0; _i533 < _list531.size; ++_i533) {
        _elem532=new ErrorInfo();
        _elem532.read(iprot);
        struct.errors.add(_elem532);
      }
    }
    struct.set_errors_isSet(true);
  }
  if (incoming.get(9)) {
    struct.eventlog_host=iprot.readString();
    struct.set_eventlog_host_isSet(true);
  }
  if (incoming.get(10)) {
    struct.eventlog_port=iprot.readI32();
    struct.set_eventlog_port_isSet(true);
  }
  if (incoming.get(11)) {
    struct.debug_options=new DebugOptions();
    struct.debug_options.read(iprot);
    struct.set_debug_options_isSet(true);
  }
  if (incoming.get(12)) {
    struct.topology_status=iprot.readString();
    struct.set_topology_status_isSet(true);
  }
  if (incoming.get(13)) {
{
      org.apache.thrift.protocol.TMap _map534=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.DOUBLE,iprot.readI32());
      struct.resources_map=new HashMap<String,Double>(2 * _map534.size);
      String _key535;
      double _val536;
      for (int _i537=0; _i537 < _map534.size; ++_i537) {
        _key535=iprot.readString();
        _val536=iprot.readDouble();
        struct.resources_map.put(_key535,_val536);
      }
    }
    struct.set_resources_map_isSet(true);
  }
}
