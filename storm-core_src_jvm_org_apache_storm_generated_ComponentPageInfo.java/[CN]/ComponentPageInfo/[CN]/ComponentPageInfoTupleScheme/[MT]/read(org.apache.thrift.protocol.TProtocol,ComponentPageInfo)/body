{
  TTupleProtocol iprot=(TTupleProtocol)prot;
  struct.component_id=iprot.readString();
  struct.set_component_id_isSet(true);
  struct.component_type=org.apache.storm.generated.ComponentType.findByValue(iprot.readI32());
  struct.set_component_type_isSet(true);
  BitSet incoming=iprot.readBitSet(13);
  if (incoming.get(0)) {
    struct.topology_id=iprot.readString();
    struct.set_topology_id_isSet(true);
  }
  if (incoming.get(1)) {
    struct.topology_name=iprot.readString();
    struct.set_topology_name_isSet(true);
  }
  if (incoming.get(2)) {
    struct.num_executors=iprot.readI32();
    struct.set_num_executors_isSet(true);
  }
  if (incoming.get(3)) {
    struct.num_tasks=iprot.readI32();
    struct.set_num_tasks_isSet(true);
  }
  if (incoming.get(4)) {
{
      org.apache.thrift.protocol.TMap _map500=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.STRUCT,iprot.readI32());
      struct.window_to_stats=new HashMap<String,ComponentAggregateStats>(2 * _map500.size);
      String _key501;
      ComponentAggregateStats _val502;
      for (int _i503=0; _i503 < _map500.size; ++_i503) {
        _key501=iprot.readString();
        _val502=new ComponentAggregateStats();
        _val502.read(iprot);
        struct.window_to_stats.put(_key501,_val502);
      }
    }
    struct.set_window_to_stats_isSet(true);
  }
  if (incoming.get(5)) {
{
      org.apache.thrift.protocol.TMap _map504=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRUCT,org.apache.thrift.protocol.TType.STRUCT,iprot.readI32());
      struct.gsid_to_input_stats=new HashMap<GlobalStreamId,ComponentAggregateStats>(2 * _map504.size);
      GlobalStreamId _key505;
      ComponentAggregateStats _val506;
      for (int _i507=0; _i507 < _map504.size; ++_i507) {
        _key505=new GlobalStreamId();
        _key505.read(iprot);
        _val506=new ComponentAggregateStats();
        _val506.read(iprot);
        struct.gsid_to_input_stats.put(_key505,_val506);
      }
    }
    struct.set_gsid_to_input_stats_isSet(true);
  }
  if (incoming.get(6)) {
{
      org.apache.thrift.protocol.TMap _map508=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.STRUCT,iprot.readI32());
      struct.sid_to_output_stats=new HashMap<String,ComponentAggregateStats>(2 * _map508.size);
      String _key509;
      ComponentAggregateStats _val510;
      for (int _i511=0; _i511 < _map508.size; ++_i511) {
        _key509=iprot.readString();
        _val510=new ComponentAggregateStats();
        _val510.read(iprot);
        struct.sid_to_output_stats.put(_key509,_val510);
      }
    }
    struct.set_sid_to_output_stats_isSet(true);
  }
  if (incoming.get(7)) {
{
      org.apache.thrift.protocol.TList _list512=new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT,iprot.readI32());
      struct.exec_stats=new ArrayList<ExecutorAggregateStats>(_list512.size);
      ExecutorAggregateStats _elem513;
      for (int _i514=0; _i514 < _list512.size; ++_i514) {
        _elem513=new ExecutorAggregateStats();
        _elem513.read(iprot);
        struct.exec_stats.add(_elem513);
      }
    }
    struct.set_exec_stats_isSet(true);
  }
  if (incoming.get(8)) {
{
      org.apache.thrift.protocol.TList _list515=new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT,iprot.readI32());
      struct.errors=new ArrayList<ErrorInfo>(_list515.size);
      ErrorInfo _elem516;
      for (int _i517=0; _i517 < _list515.size; ++_i517) {
        _elem516=new ErrorInfo();
        _elem516.read(iprot);
        struct.errors.add(_elem516);
      }
    }
    struct.set_errors_isSet(true);
  }
  if (incoming.get(9)) {
    struct.eventlog_host=iprot.readString();
    struct.set_eventlog_host_isSet(true);
  }
  if (incoming.get(10)) {
    struct.eventlog_port=iprot.readI32();
    struct.set_eventlog_port_isSet(true);
  }
  if (incoming.get(11)) {
    struct.debug_options=new DebugOptions();
    struct.debug_options.read(iprot);
    struct.set_debug_options_isSet(true);
  }
  if (incoming.get(12)) {
    struct.topology_status=iprot.readString();
    struct.set_topology_status_isSet(true);
  }
}
