{
  org.apache.thrift.protocol.TField schemeField;
  iprot.readStructBegin();
  while (true) {
    schemeField=iprot.readFieldBegin();
    if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
      break;
    }
switch (schemeField.id) {
case 1:
      if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
{
          org.apache.thrift.protocol.TList _list108=iprot.readListBegin();
          struct.supervisors=new ArrayList<SupervisorSummary>(_list108.size);
          SupervisorSummary _elem109;
          for (int _i110=0; _i110 < _list108.size; ++_i110) {
            _elem109=new SupervisorSummary();
            _elem109.read(iprot);
            struct.supervisors.add(_elem109);
          }
          iprot.readListEnd();
        }
        struct.set_supervisors_isSet(true);
      }
 else {
        org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
      }
    break;
case 2:
  if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
    struct.nimbus_uptime_secs=iprot.readI32();
    struct.set_nimbus_uptime_secs_isSet(true);
  }
 else {
    org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
  }
break;
case 3:
if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
{
  org.apache.thrift.protocol.TList _list111=iprot.readListBegin();
  struct.topologies=new ArrayList<TopologySummary>(_list111.size);
  TopologySummary _elem112;
  for (int _i113=0; _i113 < _list111.size; ++_i113) {
    _elem112=new TopologySummary();
    _elem112.read(iprot);
    struct.topologies.add(_elem112);
  }
  iprot.readListEnd();
}
struct.set_topologies_isSet(true);
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
break;
case 4:
if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
{
org.apache.thrift.protocol.TList _list114=iprot.readListBegin();
struct.nimbuses=new ArrayList<NimbusSummary>(_list114.size);
NimbusSummary _elem115;
for (int _i116=0; _i116 < _list114.size; ++_i116) {
_elem115=new NimbusSummary();
_elem115.read(iprot);
struct.nimbuses.add(_elem115);
}
iprot.readListEnd();
}
struct.set_nimbuses_isSet(true);
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
break;
default :
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
struct.validate();
}
