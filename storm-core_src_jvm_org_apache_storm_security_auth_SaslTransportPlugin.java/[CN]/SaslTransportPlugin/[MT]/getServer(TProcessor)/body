{
  int port=type.getPort(storm_conf);
  TTransportFactory serverTransportFactory=getServerTransportFactory();
  TServerSocket serverTransport=new TServerSocket(port);
  int numWorkerThreads=type.getNumThreads(storm_conf);
  Integer queueSize=type.getQueueSize(storm_conf);
  TThreadPoolServer.Args server_args=new TThreadPoolServer.Args(serverTransport).processor(new TUGIWrapProcessor(processor)).minWorkerThreads(numWorkerThreads).maxWorkerThreads(numWorkerThreads).protocolFactory(new TBinaryProtocol.Factory(false,true));
  if (serverTransportFactory != null) {
    server_args.transportFactory(serverTransportFactory);
  }
  BlockingQueue workQueue=new SynchronousQueue();
  if (queueSize != null) {
    workQueue=new ArrayBlockingQueue(queueSize);
  }
  ThreadPoolExecutor executorService=new ExtendedThreadPoolExecutor(numWorkerThreads,numWorkerThreads,60,TimeUnit.SECONDS,workQueue);
  server_args.executorService(executorService);
  return new TThreadPoolServer(server_args);
}
