{
  String tmproot=ConfigUtils.supervisorTmpDir(conf) + Utils.FILE_PATH_SEPARATOR + Utils.uuid();
  String stormroot=ConfigUtils.supervisorStormDistRoot(conf,stormId);
  ClientBlobStore blobStore=Utils.getClientBlobStoreForSupervisor(conf);
  if (Utils.isOnWindows()) {
    if (Utils.getBoolean(conf.get(Config.SUPERVISOR_RUN_WORKER_AS_USER),false)) {
      throw new RuntimeException("ERROR: Windows doesn't implement setting the correct permissions");
    }
  }
 else {
    Utils.restrictPermissions(tmproot);
  }
  FileUtils.forceMkdir(new File(tmproot));
  String stormJarKey=ConfigUtils.masterStormJarKey(stormId);
  String stormCodeKey=ConfigUtils.masterStormCodeKey(stormId);
  String stormConfKey=ConfigUtils.masterStormConfKey(stormId);
  String jarPath=ConfigUtils.supervisorStormJarPath(tmproot);
  String codePath=ConfigUtils.supervisorStormCodePath(tmproot);
  String confPath=ConfigUtils.supervisorStormConfPath(tmproot);
  Utils.downloadResourcesAsSupervisor(stormJarKey,jarPath,blobStore);
  Utils.downloadResourcesAsSupervisor(stormCodeKey,codePath,blobStore);
  Utils.downloadResourcesAsSupervisor(stormConfKey,confPath,blobStore);
  blobStore.shutdown();
  Utils.extractDirFromJar(jarPath,ConfigUtils.RESOURCES_SUBDIR,tmproot);
  downloadBlobsForTopology(conf,confPath,localizer,tmproot);
  if (IsDownloadBlobsForTopologySucceed(confPath,tmproot)) {
    LOG.info("Successfully downloaded blob resources for storm-id {}",stormId);
    FileUtils.forceMkdir(new File(stormroot));
    Files.move(new File(tmproot).toPath(),new File(stormroot).toPath(),StandardCopyOption.ATOMIC_MOVE);
    SupervisorUtils.setupStormCodeDir(conf,ConfigUtils.readSupervisorStormConf(conf,stormId),stormroot);
  }
 else {
    LOG.info("Failed to download blob resources for storm-id ",stormId);
    Utils.forceDelete(tmproot);
  }
}
