{
  queue=new LinkedBlockingQueue<Status>(1000);
  _collector=collector;
  StatusListener listener=new StatusListener(){
    @Override public void onStatus(    Status status){
      queue.offer(status);
    }
    @Override public void onDeletionNotice(    StatusDeletionNotice sdn){
    }
    @Override public void onTrackLimitationNotice(    int i){
    }
    @Override public void onScrubGeo(    long l,    long l1){
    }
    @Override public void onException(    Exception ex){
    }
    @Override public void onStallWarning(    StallWarning arg0){
    }
  }
;
  _twitterStream=new TwitterStreamFactory(new ConfigurationBuilder().setJSONStoreEnabled(true).build()).getInstance();
  _twitterStream.addListener(listener);
  _twitterStream.setOAuthConsumer(consumerKey,consumerSecret);
  AccessToken token=new AccessToken(accessToken,accessTokenSecret);
  _twitterStream.setOAuthAccessToken(token);
  if (keyWords.length == 0) {
    _twitterStream.sample();
  }
 else {
    FilterQuery query=new FilterQuery().track(keyWords);
    _twitterStream.filter(query);
  }
}
