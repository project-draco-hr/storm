{
  TTupleProtocol iprot=(TTupleProtocol)prot;
  struct.id=iprot.readString();
  struct.set_id_isSet(true);
  BitSet incoming=iprot.readBitSet(14);
  if (incoming.get(0)) {
    struct.name=iprot.readString();
    struct.set_name_isSet(true);
  }
  if (incoming.get(1)) {
    struct.uptime_secs=iprot.readI32();
    struct.set_uptime_secs_isSet(true);
  }
  if (incoming.get(2)) {
    struct.status=iprot.readString();
    struct.set_status_isSet(true);
  }
  if (incoming.get(3)) {
    struct.num_tasks=iprot.readI32();
    struct.set_num_tasks_isSet(true);
  }
  if (incoming.get(4)) {
    struct.num_workers=iprot.readI32();
    struct.set_num_workers_isSet(true);
  }
  if (incoming.get(5)) {
    struct.num_executors=iprot.readI32();
    struct.set_num_executors_isSet(true);
  }
  if (incoming.get(6)) {
    struct.topology_conf=iprot.readString();
    struct.set_topology_conf_isSet(true);
  }
  if (incoming.get(7)) {
{
      org.apache.thrift.protocol.TMap _map396=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.STRUCT,iprot.readI32());
      struct.id_to_spout_agg_stats=new HashMap<String,ComponentAggregateStats>(2 * _map396.size);
      String _key397;
      ComponentAggregateStats _val398;
      for (int _i399=0; _i399 < _map396.size; ++_i399) {
        _key397=iprot.readString();
        _val398=new ComponentAggregateStats();
        _val398.read(iprot);
        struct.id_to_spout_agg_stats.put(_key397,_val398);
      }
    }
    struct.set_id_to_spout_agg_stats_isSet(true);
  }
  if (incoming.get(8)) {
{
      org.apache.thrift.protocol.TMap _map400=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.STRUCT,iprot.readI32());
      struct.id_to_bolt_agg_stats=new HashMap<String,ComponentAggregateStats>(2 * _map400.size);
      String _key401;
      ComponentAggregateStats _val402;
      for (int _i403=0; _i403 < _map400.size; ++_i403) {
        _key401=iprot.readString();
        _val402=new ComponentAggregateStats();
        _val402.read(iprot);
        struct.id_to_bolt_agg_stats.put(_key401,_val402);
      }
    }
    struct.set_id_to_bolt_agg_stats_isSet(true);
  }
  if (incoming.get(9)) {
    struct.sched_status=iprot.readString();
    struct.set_sched_status_isSet(true);
  }
  if (incoming.get(10)) {
    struct.topology_stats=new TopologyStats();
    struct.topology_stats.read(iprot);
    struct.set_topology_stats_isSet(true);
  }
  if (incoming.get(11)) {
    struct.owner=iprot.readString();
    struct.set_owner_isSet(true);
  }
  if (incoming.get(12)) {
    struct.debug_options=new DebugOptions();
    struct.debug_options.read(iprot);
    struct.set_debug_options_isSet(true);
  }
  if (incoming.get(13)) {
    struct.replication_count=iprot.readI32();
    struct.set_replication_count_isSet(true);
  }
}
