{
  if (!getClass().equals(other.getClass())) {
    return getClass().getName().compareTo(other.getClass().getName());
  }
  int lastComparison=0;
  lastComparison=Boolean.valueOf(is_set_host()).compareTo(other.is_set_host());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (is_set_host()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.host,other.host);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(is_set_uptime_secs()).compareTo(other.is_set_uptime_secs());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (is_set_uptime_secs()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.uptime_secs,other.uptime_secs);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(is_set_num_workers()).compareTo(other.is_set_num_workers());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (is_set_num_workers()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.num_workers,other.num_workers);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(is_set_num_used_workers()).compareTo(other.is_set_num_used_workers());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (is_set_num_used_workers()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.num_used_workers,other.num_used_workers);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(is_set_supervisor_id()).compareTo(other.is_set_supervisor_id());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (is_set_supervisor_id()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.supervisor_id,other.supervisor_id);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(is_set_version()).compareTo(other.is_set_version());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (is_set_version()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.version,other.version);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(is_set_total_resources()).compareTo(other.is_set_total_resources());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (is_set_total_resources()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.total_resources,other.total_resources);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(is_set_used_mem()).compareTo(other.is_set_used_mem());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (is_set_used_mem()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.used_mem,other.used_mem);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(is_set_used_cpu()).compareTo(other.is_set_used_cpu());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (is_set_used_cpu()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.used_cpu,other.used_cpu);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  return 0;
}
