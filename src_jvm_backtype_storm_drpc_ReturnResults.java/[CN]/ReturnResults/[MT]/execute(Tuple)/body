{
  String result=(String)input.getValue(0);
  String returnInfo=(String)input.getValue(1);
  if (returnInfo != null) {
    Map retMap=(Map)JSONValue.parse(returnInfo);
    final String host=(String)retMap.get("host");
    final int port=(int)((Long)retMap.get("port")).longValue();
    String id=(String)retMap.get("id");
    DistributedRPC.Iface client;
    if (local) {
      client=(DistributedRPC.Iface)ServiceRegistry.getService(host);
    }
 else {
      List server=new ArrayList(){
{
          add(host);
          add(port);
        }
      }
;
      if (!_clients.containsKey(server)) {
        _clients.put(server,new DRPCClient(host,port));
      }
      client=_clients.get(server);
    }
    try {
      client.result(id,result);
      _collector.ack(input);
    }
 catch (    TException e) {
      LOG.error("Failed to return results to DRPC server",e);
      _collector.fail(input);
    }
  }
}
