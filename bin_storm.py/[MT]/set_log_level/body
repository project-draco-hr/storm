def set_log_level(*args):
    "\n    Dynamically change topology log levels\n\n    Syntax: [storm set_log_level -l [logger name]=[log level][:optional timeout] -r [logger name]\n    where log level is one of:\n        ALL, TRACE, DEBUG, INFO, WARN, ERROR, FATAL, OFF\n    and timeout is integer seconds.\n\n    e.g.\n        ./bin/storm set_log_level -l ROOT=DEBUG:30\n\n        Set the root logger's level to DEBUG for 30 seconds\n\n        ./bin/storm set_log_level -l com.myapp=WARN\n\n        Set the com.myapp logger's level to WARN for 30 seconds\n\n        ./bin/storm set_log_level -l com.myapp=WARN -l com.myOtherLogger=ERROR:123\n\n        Set the com.myapp logger's level to WARN indifinitely, and com.myOtherLogger\n        to ERROR for 123 seconds\n\n        ./bin/storm set_log_level -r com.myOtherLogger\n\n        Clears settings, resetting back to the original level\n    "
    exec_storm_class('org.apache.storm.command.set_log_level', args=args, jvmtype='-client', extrajars=[USER_CONF_DIR, STORM_BIN_DIR])
