def jar(jarfile, klass, *args):
    'Syntax: [storm jar topology-jar-path class ...]\n\n    Runs the main method of class with the specified arguments.\n    The storm jars and configs in ~/.storm are put on the classpath.\n    The process is configured so that StormSubmitter\n    (http://storm.apache.org/releases/current/javadocs/org/apache/storm/StormSubmitter.html)\n    will upload the jar at topology-jar-path when the topology is submitted.\n    '
    transform_class = confvalue('client.jartransformer.class', [CLUSTER_CONF_DIR])
    if ((transform_class != None) and (transform_class != 'null')):
        tmpjar = os.path.join(tempfile.gettempdir(), (uuid.uuid1().hex + '.jar'))
        exec_storm_class('org.apache.storm.daemon.ClientJarTransformerRunner', args=[transform_class, jarfile, tmpjar], fork=True, daemon=False)
        topology_runner_exit_code = exec_storm_class(klass, jvmtype='-client', extrajars=[tmpjar, USER_CONF_DIR, STORM_BIN_DIR], args=args, daemon=False, fork=True, jvmopts=(JAR_JVM_OPTS + [('-Dstorm.jar=' + tmpjar)]))
        os.remove(tmpjar)
        sys.exit(topology_runner_exit_code)
    else:
        exec_storm_class(klass, jvmtype='-client', extrajars=[jarfile, USER_CONF_DIR, STORM_BIN_DIR], args=args, daemon=False, jvmopts=(JAR_JVM_OPTS + [('-Dstorm.jar=' + jarfile)]))
