{
  List<Object> list=new ArrayList<Object>();
  boolean present_id=true && (is_set_id());
  list.add(present_id);
  if (present_id)   list.add(id);
  boolean present_name=true && (is_set_name());
  list.add(present_name);
  if (present_name)   list.add(name);
  boolean present_uptime_secs=true && (is_set_uptime_secs());
  list.add(present_uptime_secs);
  if (present_uptime_secs)   list.add(uptime_secs);
  boolean present_status=true && (is_set_status());
  list.add(present_status);
  if (present_status)   list.add(status);
  boolean present_num_tasks=true && (is_set_num_tasks());
  list.add(present_num_tasks);
  if (present_num_tasks)   list.add(num_tasks);
  boolean present_num_workers=true && (is_set_num_workers());
  list.add(present_num_workers);
  if (present_num_workers)   list.add(num_workers);
  boolean present_num_executors=true && (is_set_num_executors());
  list.add(present_num_executors);
  if (present_num_executors)   list.add(num_executors);
  boolean present_topology_conf=true && (is_set_topology_conf());
  list.add(present_topology_conf);
  if (present_topology_conf)   list.add(topology_conf);
  boolean present_id_to_spout_agg_stats=true && (is_set_id_to_spout_agg_stats());
  list.add(present_id_to_spout_agg_stats);
  if (present_id_to_spout_agg_stats)   list.add(id_to_spout_agg_stats);
  boolean present_id_to_bolt_agg_stats=true && (is_set_id_to_bolt_agg_stats());
  list.add(present_id_to_bolt_agg_stats);
  if (present_id_to_bolt_agg_stats)   list.add(id_to_bolt_agg_stats);
  boolean present_sched_status=true && (is_set_sched_status());
  list.add(present_sched_status);
  if (present_sched_status)   list.add(sched_status);
  boolean present_topology_stats=true && (is_set_topology_stats());
  list.add(present_topology_stats);
  if (present_topology_stats)   list.add(topology_stats);
  boolean present_owner=true && (is_set_owner());
  list.add(present_owner);
  if (present_owner)   list.add(owner);
  boolean present_debug_options=true && (is_set_debug_options());
  list.add(present_debug_options);
  if (present_debug_options)   list.add(debug_options);
  boolean present_replication_count=true && (is_set_replication_count());
  list.add(present_replication_count);
  if (present_replication_count)   list.add(replication_count);
  boolean present_workers=true && (is_set_workers());
  list.add(present_workers);
  if (present_workers)   list.add(workers);
  boolean present_requested_memonheap=true && (is_set_requested_memonheap());
  list.add(present_requested_memonheap);
  if (present_requested_memonheap)   list.add(requested_memonheap);
  boolean present_requested_memoffheap=true && (is_set_requested_memoffheap());
  list.add(present_requested_memoffheap);
  if (present_requested_memoffheap)   list.add(requested_memoffheap);
  boolean present_requested_cpu=true && (is_set_requested_cpu());
  list.add(present_requested_cpu);
  if (present_requested_cpu)   list.add(requested_cpu);
  boolean present_assigned_memonheap=true && (is_set_assigned_memonheap());
  list.add(present_assigned_memonheap);
  if (present_assigned_memonheap)   list.add(assigned_memonheap);
  boolean present_assigned_memoffheap=true && (is_set_assigned_memoffheap());
  list.add(present_assigned_memoffheap);
  if (present_assigned_memoffheap)   list.add(assigned_memoffheap);
  boolean present_assigned_cpu=true && (is_set_assigned_cpu());
  list.add(present_assigned_cpu);
  if (present_assigned_cpu)   list.add(assigned_cpu);
  return list.hashCode();
}
