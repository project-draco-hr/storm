{
  List<Fields> fullInputFields=new ArrayList<>();
  List<Stream> streams=new ArrayList<>();
  List<Fields> fullGroupFields=new ArrayList<>();
  for (int i=0; i < groupedStreams.size(); i++) {
    GroupedStream gs=groupedStreams.get(i);
    Fields groupFields=gs.getGroupFields();
    fullGroupFields.add(groupFields);
    streams.add(gs.toStream().partitionBy(groupFields));
    fullInputFields.add(TridentUtils.fieldsUnion(groupFields,inputFields.get(i)));
  }
  return multiReduce(fullInputFields,streams,new GroupedMultiReducerExecutor(function,fullGroupFields,inputFields),outputFields);
}
