{
  TTupleProtocol iprot=(TTupleProtocol)prot;
  struct.time_secs=iprot.readI64();
  struct.set_time_secs_isSet(true);
  struct.hostname=iprot.readString();
  struct.set_hostname_isSet(true);
  BitSet incoming=iprot.readBitSet(7);
  if (incoming.get(0)) {
    struct.assignment_id=iprot.readString();
    struct.set_assignment_id_isSet(true);
  }
  if (incoming.get(1)) {
{
      org.apache.thrift.protocol.TList _list526=new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I64,iprot.readI32());
      struct.used_ports=new ArrayList<Long>(_list526.size);
      long _elem527;
      for (int _i528=0; _i528 < _list526.size; ++_i528) {
        _elem527=iprot.readI64();
        struct.used_ports.add(_elem527);
      }
    }
    struct.set_used_ports_isSet(true);
  }
  if (incoming.get(2)) {
{
      org.apache.thrift.protocol.TList _list529=new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I64,iprot.readI32());
      struct.meta=new ArrayList<Long>(_list529.size);
      long _elem530;
      for (int _i531=0; _i531 < _list529.size; ++_i531) {
        _elem530=iprot.readI64();
        struct.meta.add(_elem530);
      }
    }
    struct.set_meta_isSet(true);
  }
  if (incoming.get(3)) {
{
      org.apache.thrift.protocol.TMap _map532=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.STRING,iprot.readI32());
      struct.scheduler_meta=new HashMap<String,String>(2 * _map532.size);
      String _key533;
      String _val534;
      for (int _i535=0; _i535 < _map532.size; ++_i535) {
        _key533=iprot.readString();
        _val534=iprot.readString();
        struct.scheduler_meta.put(_key533,_val534);
      }
    }
    struct.set_scheduler_meta_isSet(true);
  }
  if (incoming.get(4)) {
    struct.uptime_secs=iprot.readI64();
    struct.set_uptime_secs_isSet(true);
  }
  if (incoming.get(5)) {
    struct.version=iprot.readString();
    struct.set_version_isSet(true);
  }
  if (incoming.get(6)) {
{
      org.apache.thrift.protocol.TMap _map536=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.DOUBLE,iprot.readI32());
      struct.resources_map=new HashMap<String,Double>(2 * _map536.size);
      String _key537;
      double _val538;
      for (int _i539=0; _i539 < _map536.size; ++_i539) {
        _key537=iprot.readString();
        _val538=iprot.readDouble();
        struct.resources_map.put(_key537,_val538);
      }
    }
    struct.set_resources_map_isSet(true);
  }
}
