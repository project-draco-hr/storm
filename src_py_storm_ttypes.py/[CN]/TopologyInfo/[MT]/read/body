def read(self, iprot):
    if ((iprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and isinstance(iprot.trans, TTransport.CReadableTransport) and (self.thrift_spec is not None) and (fastbinary is not None)):
        fastbinary.decode_binary(self, iprot.trans, (self.__class__, self.thrift_spec))
        return
    iprot.readStructBegin()
    while True:
        (fname, ftype, fid) = iprot.readFieldBegin()
        if (ftype == TType.STOP):
            break
        if (fid == 1):
            if (ftype == TType.STRING):
                self.id = iprot.readString().decode('utf-8')
            else:
                iprot.skip(ftype)
        elif (fid == 2):
            if (ftype == TType.STRING):
                self.name = iprot.readString().decode('utf-8')
            else:
                iprot.skip(ftype)
        elif (fid == 3):
            if (ftype == TType.I32):
                self.uptime_secs = iprot.readI32()
            else:
                iprot.skip(ftype)
        elif (fid == 4):
            if (ftype == TType.LIST):
                self.tasks = []
                (_etype227, _size224) = iprot.readListBegin()
                for _i228 in xrange(_size224):
                    _elem229 = TaskSummary()
                    _elem229.read(iprot)
                    self.tasks.append(_elem229)
                iprot.readListEnd()
            else:
                iprot.skip(ftype)
        elif (fid == 5):
            if (ftype == TType.STRING):
                self.status = iprot.readString().decode('utf-8')
            else:
                iprot.skip(ftype)
        elif (fid == 6):
            if (ftype == TType.MAP):
                self.errors = {}
                (_ktype231, _vtype232, _size230) = iprot.readMapBegin()
                for _i234 in xrange(_size230):
                    _key235 = iprot.readString().decode('utf-8')
                    _val236 = []
                    (_etype240, _size237) = iprot.readListBegin()
                    for _i241 in xrange(_size237):
                        _elem242 = ErrorInfo()
                        _elem242.read(iprot)
                        _val236.append(_elem242)
                    iprot.readListEnd()
                    self.errors[_key235] = _val236
                iprot.readMapEnd()
            else:
                iprot.skip(ftype)
        else:
            iprot.skip(ftype)
        iprot.readFieldEnd()
    iprot.readStructEnd()
