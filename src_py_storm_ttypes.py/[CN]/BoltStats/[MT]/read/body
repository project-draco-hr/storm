def read(self, iprot):
    if ((iprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and isinstance(iprot.trans, TTransport.CReadableTransport) and (self.thrift_spec is not None) and (fastbinary is not None)):
        fastbinary.decode_binary(self, iprot.trans, (self.__class__, self.thrift_spec))
        return
    iprot.readStructBegin()
    while True:
        (fname, ftype, fid) = iprot.readFieldBegin()
        if (ftype == TType.STOP):
            break
        if (fid == 1):
            if (ftype == TType.MAP):
                self.acked = {}
                (_ktype74, _vtype75, _size73) = iprot.readMapBegin()
                for _i77 in xrange(_size73):
                    _key78 = iprot.readString().decode('utf-8')
                    _val79 = {}
                    (_ktype81, _vtype82, _size80) = iprot.readMapBegin()
                    for _i84 in xrange(_size80):
                        _key85 = GlobalStreamId()
                        _key85.read(iprot)
                        _val86 = iprot.readI64()
                        _val79[_key85] = _val86
                    iprot.readMapEnd()
                    self.acked[_key78] = _val79
                iprot.readMapEnd()
            else:
                iprot.skip(ftype)
        elif (fid == 2):
            if (ftype == TType.MAP):
                self.failed = {}
                (_ktype88, _vtype89, _size87) = iprot.readMapBegin()
                for _i91 in xrange(_size87):
                    _key92 = iprot.readString().decode('utf-8')
                    _val93 = {}
                    (_ktype95, _vtype96, _size94) = iprot.readMapBegin()
                    for _i98 in xrange(_size94):
                        _key99 = GlobalStreamId()
                        _key99.read(iprot)
                        _val100 = iprot.readI64()
                        _val93[_key99] = _val100
                    iprot.readMapEnd()
                    self.failed[_key92] = _val93
                iprot.readMapEnd()
            else:
                iprot.skip(ftype)
        elif (fid == 3):
            if (ftype == TType.MAP):
                self.process_ms_avg = {}
                (_ktype102, _vtype103, _size101) = iprot.readMapBegin()
                for _i105 in xrange(_size101):
                    _key106 = iprot.readString().decode('utf-8')
                    _val107 = {}
                    (_ktype109, _vtype110, _size108) = iprot.readMapBegin()
                    for _i112 in xrange(_size108):
                        _key113 = GlobalStreamId()
                        _key113.read(iprot)
                        _val114 = iprot.readDouble()
                        _val107[_key113] = _val114
                    iprot.readMapEnd()
                    self.process_ms_avg[_key106] = _val107
                iprot.readMapEnd()
            else:
                iprot.skip(ftype)
        else:
            iprot.skip(ftype)
        iprot.readFieldEnd()
    iprot.readStructEnd()
