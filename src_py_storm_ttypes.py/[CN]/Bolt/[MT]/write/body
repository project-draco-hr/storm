def write(self, oprot):
    if ((oprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and (self.thrift_spec is not None) and (fastbinary is not None)):
        oprot.trans.write(fastbinary.encode_binary(self, (self.__class__, self.thrift_spec)))
        return
    oprot.writeStructBegin('Bolt')
    if (self.inputs is not None):
        oprot.writeFieldBegin('inputs', TType.MAP, 1)
        oprot.writeMapBegin(TType.STRUCT, TType.STRUCT, len(self.inputs))
        for (kiter37, viter38) in self.inputs.items():
            kiter37.write(oprot)
            viter38.write(oprot)
        oprot.writeMapEnd()
        oprot.writeFieldEnd()
    if (self.bolt_object is not None):
        oprot.writeFieldBegin('bolt_object', TType.STRUCT, 2)
        self.bolt_object.write(oprot)
        oprot.writeFieldEnd()
    if (self.common is not None):
        oprot.writeFieldBegin('common', TType.STRUCT, 3)
        self.common.write(oprot)
        oprot.writeFieldEnd()
    oprot.writeFieldStop()
    oprot.writeStructEnd()
