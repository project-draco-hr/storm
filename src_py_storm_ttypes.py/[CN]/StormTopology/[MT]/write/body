def write(self, oprot):
    if ((oprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and (self.thrift_spec is not None) and (fastbinary is not None)):
        oprot.trans.write(fastbinary.encode_binary(self, (self.__class__, self.thrift_spec)))
        return
    oprot.writeStructBegin('StormTopology')
    if (self.spouts is not None):
        oprot.writeFieldBegin('spouts', TType.MAP, 1)
        oprot.writeMapBegin(TType.STRING, TType.STRUCT, len(self.spouts))
        for (kiter60, viter61) in self.spouts.items():
            oprot.writeString(kiter60.encode('utf-8'))
            viter61.write(oprot)
        oprot.writeMapEnd()
        oprot.writeFieldEnd()
    if (self.bolts is not None):
        oprot.writeFieldBegin('bolts', TType.MAP, 2)
        oprot.writeMapBegin(TType.STRING, TType.STRUCT, len(self.bolts))
        for (kiter62, viter63) in self.bolts.items():
            oprot.writeString(kiter62.encode('utf-8'))
            viter63.write(oprot)
        oprot.writeMapEnd()
        oprot.writeFieldEnd()
    if (self.state_spouts is not None):
        oprot.writeFieldBegin('state_spouts', TType.MAP, 3)
        oprot.writeMapBegin(TType.STRING, TType.STRUCT, len(self.state_spouts))
        for (kiter64, viter65) in self.state_spouts.items():
            oprot.writeString(kiter64.encode('utf-8'))
            viter65.write(oprot)
        oprot.writeMapEnd()
        oprot.writeFieldEnd()
    oprot.writeFieldStop()
    oprot.writeStructEnd()
