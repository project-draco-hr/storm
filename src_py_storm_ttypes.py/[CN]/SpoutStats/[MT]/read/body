def read(self, iprot):
    if ((iprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and isinstance(iprot.trans, TTransport.CReadableTransport) and (self.thrift_spec is not None) and (fastbinary is not None)):
        fastbinary.decode_binary(self, iprot.trans, (self.__class__, self.thrift_spec))
        return
    iprot.readStructBegin()
    while True:
        (fname, ftype, fid) = iprot.readFieldBegin()
        if (ftype == TType.STOP):
            break
        if (fid == 1):
            if (ftype == TType.MAP):
                self.acked = {}
                (_ktype160, _vtype161, _size159) = iprot.readMapBegin()
                for _i163 in xrange(_size159):
                    _key164 = iprot.readString().decode('utf-8')
                    _val165 = {}
                    (_ktype167, _vtype168, _size166) = iprot.readMapBegin()
                    for _i170 in xrange(_size166):
                        _key171 = iprot.readString().decode('utf-8')
                        _val172 = iprot.readI64()
                        _val165[_key171] = _val172
                    iprot.readMapEnd()
                    self.acked[_key164] = _val165
                iprot.readMapEnd()
            else:
                iprot.skip(ftype)
        elif (fid == 2):
            if (ftype == TType.MAP):
                self.failed = {}
                (_ktype174, _vtype175, _size173) = iprot.readMapBegin()
                for _i177 in xrange(_size173):
                    _key178 = iprot.readString().decode('utf-8')
                    _val179 = {}
                    (_ktype181, _vtype182, _size180) = iprot.readMapBegin()
                    for _i184 in xrange(_size180):
                        _key185 = iprot.readString().decode('utf-8')
                        _val186 = iprot.readI64()
                        _val179[_key185] = _val186
                    iprot.readMapEnd()
                    self.failed[_key178] = _val179
                iprot.readMapEnd()
            else:
                iprot.skip(ftype)
        elif (fid == 3):
            if (ftype == TType.MAP):
                self.complete_ms_avg = {}
                (_ktype188, _vtype189, _size187) = iprot.readMapBegin()
                for _i191 in xrange(_size187):
                    _key192 = iprot.readString().decode('utf-8')
                    _val193 = {}
                    (_ktype195, _vtype196, _size194) = iprot.readMapBegin()
                    for _i198 in xrange(_size194):
                        _key199 = iprot.readString().decode('utf-8')
                        _val200 = iprot.readDouble()
                        _val193[_key199] = _val200
                    iprot.readMapEnd()
                    self.complete_ms_avg[_key192] = _val193
                iprot.readMapEnd()
            else:
                iprot.skip(ftype)
        else:
            iprot.skip(ftype)
        iprot.readFieldEnd()
    iprot.readStructEnd()
