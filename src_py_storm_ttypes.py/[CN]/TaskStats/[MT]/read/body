def read(self, iprot):
    if ((iprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and isinstance(iprot.trans, TTransport.CReadableTransport) and (self.thrift_spec is not None) and (fastbinary is not None)):
        fastbinary.decode_binary(self, iprot.trans, (self.__class__, self.thrift_spec))
        return
    iprot.readStructBegin()
    while True:
        (fname, ftype, fid) = iprot.readFieldBegin()
        if (ftype == TType.STOP):
            break
        if (fid == 1):
            if (ftype == TType.MAP):
                self.emitted = {}
                (_ktype214, _vtype215, _size213) = iprot.readMapBegin()
                for _i217 in xrange(_size213):
                    _key218 = iprot.readString().decode('utf-8')
                    _val219 = {}
                    (_ktype221, _vtype222, _size220) = iprot.readMapBegin()
                    for _i224 in xrange(_size220):
                        _key225 = iprot.readString().decode('utf-8')
                        _val226 = iprot.readI64()
                        _val219[_key225] = _val226
                    iprot.readMapEnd()
                    self.emitted[_key218] = _val219
                iprot.readMapEnd()
            else:
                iprot.skip(ftype)
        elif (fid == 2):
            if (ftype == TType.MAP):
                self.transferred = {}
                (_ktype228, _vtype229, _size227) = iprot.readMapBegin()
                for _i231 in xrange(_size227):
                    _key232 = iprot.readString().decode('utf-8')
                    _val233 = {}
                    (_ktype235, _vtype236, _size234) = iprot.readMapBegin()
                    for _i238 in xrange(_size234):
                        _key239 = iprot.readString().decode('utf-8')
                        _val240 = iprot.readI64()
                        _val233[_key239] = _val240
                    iprot.readMapEnd()
                    self.transferred[_key232] = _val233
                iprot.readMapEnd()
            else:
                iprot.skip(ftype)
        elif (fid == 3):
            if (ftype == TType.STRUCT):
                self.specific = TaskSpecificStats()
                self.specific.read(iprot)
            else:
                iprot.skip(ftype)
        else:
            iprot.skip(ftype)
        iprot.readFieldEnd()
    iprot.readStructEnd()
