{
  String topic=null;
  try {
    List<Future<RecordMetadata>> futures=new ArrayList<>(tuples.size());
    for (    TridentTuple tuple : tuples) {
      topic=topicSelector.getTopic(tuple);
      if (topic != null) {
        Future<RecordMetadata> result=producer.send(new ProducerRecord(topic,mapper.getKeyFromTuple(tuple),mapper.getMessageFromTuple(tuple)));
        futures.add(result);
      }
 else {
        LOG.warn("skipping key = " + mapper.getKeyFromTuple(tuple) + ", topic selector returned null.");
      }
    }
    for (int i=0; i < futures.size(); i++) {
      Future<RecordMetadata> future=futures.get(i);
      try {
        future.get();
      }
 catch (      ExecutionException e) {
        String errorMsg="Could not retrieve result for message with key = " + mapper.getKeyFromTuple(tuples.get(i)) + " from topic = "+ topic;
        LOG.error(errorMsg,e);
        throw new FailedException(errorMsg,e);
      }
    }
  }
 catch (  Exception ex) {
    String errorMsg="Could not send messages " + tuples + " to topic = "+ topic;
    LOG.warn(errorMsg,ex);
    throw new FailedException(errorMsg,ex);
  }
}
