{
  struct.validate();
  oprot.writeStructBegin(STRUCT_DESC);
  if (struct.window_to_emitted != null) {
    if (struct.is_set_window_to_emitted()) {
      oprot.writeFieldBegin(WINDOW_TO_EMITTED_FIELD_DESC);
{
        oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.I64,struct.window_to_emitted.size()));
        for (        Map.Entry<String,Long> _iter398 : struct.window_to_emitted.entrySet()) {
          oprot.writeString(_iter398.getKey());
          oprot.writeI64(_iter398.getValue());
        }
        oprot.writeMapEnd();
      }
      oprot.writeFieldEnd();
    }
  }
  if (struct.window_to_transferred != null) {
    if (struct.is_set_window_to_transferred()) {
      oprot.writeFieldBegin(WINDOW_TO_TRANSFERRED_FIELD_DESC);
{
        oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.I64,struct.window_to_transferred.size()));
        for (        Map.Entry<String,Long> _iter399 : struct.window_to_transferred.entrySet()) {
          oprot.writeString(_iter399.getKey());
          oprot.writeI64(_iter399.getValue());
        }
        oprot.writeMapEnd();
      }
      oprot.writeFieldEnd();
    }
  }
  if (struct.window_to_complete_latencies_ms != null) {
    if (struct.is_set_window_to_complete_latencies_ms()) {
      oprot.writeFieldBegin(WINDOW_TO_COMPLETE_LATENCIES_MS_FIELD_DESC);
{
        oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.DOUBLE,struct.window_to_complete_latencies_ms.size()));
        for (        Map.Entry<String,Double> _iter400 : struct.window_to_complete_latencies_ms.entrySet()) {
          oprot.writeString(_iter400.getKey());
          oprot.writeDouble(_iter400.getValue());
        }
        oprot.writeMapEnd();
      }
      oprot.writeFieldEnd();
    }
  }
  if (struct.window_to_acked != null) {
    if (struct.is_set_window_to_acked()) {
      oprot.writeFieldBegin(WINDOW_TO_ACKED_FIELD_DESC);
{
        oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.I64,struct.window_to_acked.size()));
        for (        Map.Entry<String,Long> _iter401 : struct.window_to_acked.entrySet()) {
          oprot.writeString(_iter401.getKey());
          oprot.writeI64(_iter401.getValue());
        }
        oprot.writeMapEnd();
      }
      oprot.writeFieldEnd();
    }
  }
  if (struct.window_to_failed != null) {
    if (struct.is_set_window_to_failed()) {
      oprot.writeFieldBegin(WINDOW_TO_FAILED_FIELD_DESC);
{
        oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.I64,struct.window_to_failed.size()));
        for (        Map.Entry<String,Long> _iter402 : struct.window_to_failed.entrySet()) {
          oprot.writeString(_iter402.getKey());
          oprot.writeI64(_iter402.getValue());
        }
        oprot.writeMapEnd();
      }
      oprot.writeFieldEnd();
    }
  }
  oprot.writeFieldStop();
  oprot.writeStructEnd();
}
