{
  TTupleProtocol iprot=(TTupleProtocol)prot;
  BitSet incoming=iprot.readBitSet(5);
  if (incoming.get(0)) {
{
      org.apache.thrift.protocol.TMap _map408=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.I64,iprot.readI32());
      struct.window_to_emitted=new HashMap<String,Long>(2 * _map408.size);
      String _key409;
      long _val410;
      for (int _i411=0; _i411 < _map408.size; ++_i411) {
        _key409=iprot.readString();
        _val410=iprot.readI64();
        struct.window_to_emitted.put(_key409,_val410);
      }
    }
    struct.set_window_to_emitted_isSet(true);
  }
  if (incoming.get(1)) {
{
      org.apache.thrift.protocol.TMap _map412=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.I64,iprot.readI32());
      struct.window_to_transferred=new HashMap<String,Long>(2 * _map412.size);
      String _key413;
      long _val414;
      for (int _i415=0; _i415 < _map412.size; ++_i415) {
        _key413=iprot.readString();
        _val414=iprot.readI64();
        struct.window_to_transferred.put(_key413,_val414);
      }
    }
    struct.set_window_to_transferred_isSet(true);
  }
  if (incoming.get(2)) {
{
      org.apache.thrift.protocol.TMap _map416=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.DOUBLE,iprot.readI32());
      struct.window_to_complete_latencies_ms=new HashMap<String,Double>(2 * _map416.size);
      String _key417;
      double _val418;
      for (int _i419=0; _i419 < _map416.size; ++_i419) {
        _key417=iprot.readString();
        _val418=iprot.readDouble();
        struct.window_to_complete_latencies_ms.put(_key417,_val418);
      }
    }
    struct.set_window_to_complete_latencies_ms_isSet(true);
  }
  if (incoming.get(3)) {
{
      org.apache.thrift.protocol.TMap _map420=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.I64,iprot.readI32());
      struct.window_to_acked=new HashMap<String,Long>(2 * _map420.size);
      String _key421;
      long _val422;
      for (int _i423=0; _i423 < _map420.size; ++_i423) {
        _key421=iprot.readString();
        _val422=iprot.readI64();
        struct.window_to_acked.put(_key421,_val422);
      }
    }
    struct.set_window_to_acked_isSet(true);
  }
  if (incoming.get(4)) {
{
      org.apache.thrift.protocol.TMap _map424=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.I64,iprot.readI32());
      struct.window_to_failed=new HashMap<String,Long>(2 * _map424.size);
      String _key425;
      long _val426;
      for (int _i427=0; _i427 < _map424.size; ++_i427) {
        _key425=iprot.readString();
        _val426=iprot.readI64();
        struct.window_to_failed.put(_key425,_val426);
      }
    }
    struct.set_window_to_failed_isSet(true);
  }
}
