{
  org.apache.thrift.protocol.TField schemeField;
  iprot.readStructBegin();
  while (true) {
    schemeField=iprot.readFieldBegin();
    if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
      break;
    }
switch (schemeField.id) {
case 2:
      if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
{
          org.apache.thrift.protocol.TMap _map774=iprot.readMapBegin();
          struct.named_logger_level=new HashMap<String,LogLevel>(2 * _map774.size);
          String _key775;
          LogLevel _val776;
          for (int _i777=0; _i777 < _map774.size; ++_i777) {
            _key775=iprot.readString();
            _val776=new LogLevel();
            _val776.read(iprot);
            struct.named_logger_level.put(_key775,_val776);
          }
          iprot.readMapEnd();
        }
        struct.set_named_logger_level_isSet(true);
      }
 else {
        org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
      }
    break;
default :
  org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
struct.validate();
}
