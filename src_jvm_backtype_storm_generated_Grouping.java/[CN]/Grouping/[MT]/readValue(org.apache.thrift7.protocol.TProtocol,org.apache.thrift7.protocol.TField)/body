{
  _Fields setField=_Fields.findByThriftId(field.id);
  if (setField != null) {
switch (setField) {
case FIELDS:
      if (field.type == FIELDS_FIELD_DESC.type) {
        List<String> fields;
{
          org.apache.thrift7.protocol.TList _list4=iprot.readListBegin();
          fields=new ArrayList<String>(_list4.size);
          for (int _i5=0; _i5 < _list4.size; ++_i5) {
            String _elem6;
            _elem6=iprot.readString();
            fields.add(_elem6);
          }
          iprot.readListEnd();
        }
        return fields;
      }
 else {
        org.apache.thrift7.protocol.TProtocolUtil.skip(iprot,field.type);
        return null;
      }
case SHUFFLE:
    if (field.type == SHUFFLE_FIELD_DESC.type) {
      NullStruct shuffle;
      shuffle=new NullStruct();
      shuffle.read(iprot);
      return shuffle;
    }
 else {
      org.apache.thrift7.protocol.TProtocolUtil.skip(iprot,field.type);
      return null;
    }
case ALL:
  if (field.type == ALL_FIELD_DESC.type) {
    NullStruct all;
    all=new NullStruct();
    all.read(iprot);
    return all;
  }
 else {
    org.apache.thrift7.protocol.TProtocolUtil.skip(iprot,field.type);
    return null;
  }
case NONE:
if (field.type == NONE_FIELD_DESC.type) {
  NullStruct none;
  none=new NullStruct();
  none.read(iprot);
  return none;
}
 else {
  org.apache.thrift7.protocol.TProtocolUtil.skip(iprot,field.type);
  return null;
}
case DIRECT:
if (field.type == DIRECT_FIELD_DESC.type) {
NullStruct direct;
direct=new NullStruct();
direct.read(iprot);
return direct;
}
 else {
org.apache.thrift7.protocol.TProtocolUtil.skip(iprot,field.type);
return null;
}
case CUSTOM_OBJECT:
if (field.type == CUSTOM_OBJECT_FIELD_DESC.type) {
JavaObject custom_object;
custom_object=new JavaObject();
custom_object.read(iprot);
return custom_object;
}
 else {
org.apache.thrift7.protocol.TProtocolUtil.skip(iprot,field.type);
return null;
}
case CUSTOM_SERIALIZED:
if (field.type == CUSTOM_SERIALIZED_FIELD_DESC.type) {
ByteBuffer custom_serialized;
custom_serialized=iprot.readBinary();
return custom_serialized;
}
 else {
org.apache.thrift7.protocol.TProtocolUtil.skip(iprot,field.type);
return null;
}
default :
throw new IllegalStateException("setField wasn't null, but didn't match any of the case statements!");
}
}
 else {
org.apache.thrift7.protocol.TProtocolUtil.skip(iprot,field.type);
return null;
}
}
