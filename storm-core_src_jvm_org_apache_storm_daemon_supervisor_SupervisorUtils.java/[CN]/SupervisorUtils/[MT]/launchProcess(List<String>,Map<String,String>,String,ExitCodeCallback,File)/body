{
  ProcessBuilder builder=new ProcessBuilder(command);
  Map<String,String> procEnv=builder.environment();
  if (dir != null) {
    builder.directory(dir);
  }
  builder.redirectErrorStream(true);
  if (environment != null) {
    procEnv.putAll(environment);
  }
  final Process process=builder.start();
  if (logPrefix != null || exitCodeCallback != null) {
    Utils.asyncLoop(new Callable<Object>(){
      public Object call(){
        if (logPrefix != null) {
          Utils.readAndLogStream(logPrefix,process.getInputStream());
        }
        if (exitCodeCallback != null) {
          try {
            process.waitFor();
            exitCodeCallback.call(process.exitValue());
          }
 catch (          InterruptedException ie) {
            LOG.info("{} interrupted",logPrefix);
            exitCodeCallback.call(-1);
          }
        }
        return null;
      }
    }
);
  }
  return process;
}
