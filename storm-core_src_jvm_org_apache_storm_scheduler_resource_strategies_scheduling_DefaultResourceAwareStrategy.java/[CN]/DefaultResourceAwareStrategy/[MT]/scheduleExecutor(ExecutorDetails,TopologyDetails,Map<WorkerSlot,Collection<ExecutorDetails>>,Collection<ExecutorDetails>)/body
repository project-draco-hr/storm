{
  WorkerSlot targetSlot=this.findWorkerForExec(exec,td,schedulerAssignmentMap);
  if (targetSlot != null) {
    RAS_Node targetNode=this.idToNode(targetSlot.getNodeId());
    if (!schedulerAssignmentMap.containsKey(targetSlot)) {
      schedulerAssignmentMap.put(targetSlot,new LinkedList<ExecutorDetails>());
    }
    schedulerAssignmentMap.get(targetSlot).add(exec);
    targetNode.consumeResourcesforTask(exec,td);
    scheduledTasks.add(exec);
    LOG.debug("TASK {} assigned to Node: {} avail [ mem: {} cpu: {} ] total [ mem: {} cpu: {} ] on slot: {} on Rack: {}",exec,targetNode.getHostname(),targetNode.getAvailableMemoryResources(),targetNode.getAvailableCpuResources(),targetNode.getTotalMemoryResources(),targetNode.getTotalCpuResources(),targetSlot,nodeToRack(targetNode));
  }
 else {
    LOG.error("Not Enough Resources to schedule Task {}",exec);
  }
}
