{
  org.apache.thrift7.protocol.TField field;
  iprot.readStructBegin();
  while (true) {
    field=iprot.readFieldBegin();
    if (field.type == org.apache.thrift7.protocol.TType.STOP) {
      break;
    }
switch (field.id) {
case 1:
      if (field.type == org.apache.thrift7.protocol.TType.MAP) {
{
          org.apache.thrift7.protocol.TMap _map13=iprot.readMapBegin();
          this.inputs=new HashMap<GlobalStreamId,Grouping>(2 * _map13.size);
          for (int _i14=0; _i14 < _map13.size; ++_i14) {
            GlobalStreamId _key15;
            Grouping _val16;
            _key15=new GlobalStreamId();
            _key15.read(iprot);
            _val16=new Grouping();
            _val16.read(iprot);
            this.inputs.put(_key15,_val16);
          }
          iprot.readMapEnd();
        }
      }
 else {
        org.apache.thrift7.protocol.TProtocolUtil.skip(iprot,field.type);
      }
    break;
case 2:
  if (field.type == org.apache.thrift7.protocol.TType.STRUCT) {
    this.bolt_object=new ComponentObject();
    this.bolt_object.read(iprot);
  }
 else {
    org.apache.thrift7.protocol.TProtocolUtil.skip(iprot,field.type);
  }
break;
case 3:
if (field.type == org.apache.thrift7.protocol.TType.STRUCT) {
this.common=new ComponentCommon();
this.common.read(iprot);
}
 else {
org.apache.thrift7.protocol.TProtocolUtil.skip(iprot,field.type);
}
break;
default :
org.apache.thrift7.protocol.TProtocolUtil.skip(iprot,field.type);
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
validate();
}
