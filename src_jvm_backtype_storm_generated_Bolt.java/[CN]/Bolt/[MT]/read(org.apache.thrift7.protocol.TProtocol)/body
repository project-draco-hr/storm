{
  org.apache.thrift7.protocol.TField field;
  iprot.readStructBegin();
  while (true) {
    field=iprot.readFieldBegin();
    if (field.type == org.apache.thrift7.protocol.TType.STOP) {
      break;
    }
switch (field.id) {
case 1:
      if (field.type == org.apache.thrift7.protocol.TType.MAP) {
{
          org.apache.thrift7.protocol.TMap _map17=iprot.readMapBegin();
          this.inputs=new HashMap<GlobalStreamId,Grouping>(2 * _map17.size);
          for (int _i18=0; _i18 < _map17.size; ++_i18) {
            GlobalStreamId _key19;
            Grouping _val20;
            _key19=new GlobalStreamId();
            _key19.read(iprot);
            _val20=new Grouping();
            _val20.read(iprot);
            this.inputs.put(_key19,_val20);
          }
          iprot.readMapEnd();
        }
      }
 else {
        org.apache.thrift7.protocol.TProtocolUtil.skip(iprot,field.type);
      }
    break;
case 2:
  if (field.type == org.apache.thrift7.protocol.TType.STRUCT) {
    this.bolt_object=new ComponentObject();
    this.bolt_object.read(iprot);
  }
 else {
    org.apache.thrift7.protocol.TProtocolUtil.skip(iprot,field.type);
  }
break;
case 3:
if (field.type == org.apache.thrift7.protocol.TType.STRUCT) {
this.common=new ComponentCommon();
this.common.read(iprot);
}
 else {
org.apache.thrift7.protocol.TProtocolUtil.skip(iprot,field.type);
}
break;
default :
org.apache.thrift7.protocol.TProtocolUtil.skip(iprot,field.type);
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
validate();
}
