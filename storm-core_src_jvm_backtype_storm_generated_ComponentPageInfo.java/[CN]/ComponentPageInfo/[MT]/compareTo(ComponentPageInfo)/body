{
  if (!getClass().equals(other.getClass())) {
    return getClass().getName().compareTo(other.getClass().getName());
  }
  int lastComparison=0;
  lastComparison=Boolean.valueOf(is_set_component_id()).compareTo(other.is_set_component_id());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (is_set_component_id()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.component_id,other.component_id);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(is_set_component_type()).compareTo(other.is_set_component_type());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (is_set_component_type()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.component_type,other.component_type);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(is_set_topology_id()).compareTo(other.is_set_topology_id());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (is_set_topology_id()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.topology_id,other.topology_id);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(is_set_topology_name()).compareTo(other.is_set_topology_name());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (is_set_topology_name()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.topology_name,other.topology_name);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(is_set_num_executors()).compareTo(other.is_set_num_executors());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (is_set_num_executors()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.num_executors,other.num_executors);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(is_set_num_tasks()).compareTo(other.is_set_num_tasks());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (is_set_num_tasks()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.num_tasks,other.num_tasks);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(is_set_window_to_stats()).compareTo(other.is_set_window_to_stats());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (is_set_window_to_stats()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.window_to_stats,other.window_to_stats);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(is_set_gsid_to_input_stats()).compareTo(other.is_set_gsid_to_input_stats());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (is_set_gsid_to_input_stats()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.gsid_to_input_stats,other.gsid_to_input_stats);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(is_set_sid_to_output_stats()).compareTo(other.is_set_sid_to_output_stats());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (is_set_sid_to_output_stats()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.sid_to_output_stats,other.sid_to_output_stats);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(is_set_exec_stats()).compareTo(other.is_set_exec_stats());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (is_set_exec_stats()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.exec_stats,other.exec_stats);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(is_set_errors()).compareTo(other.is_set_errors());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (is_set_errors()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.errors,other.errors);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(is_set_eventlog_host()).compareTo(other.is_set_eventlog_host());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (is_set_eventlog_host()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.eventlog_host,other.eventlog_host);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(is_set_eventlog_port()).compareTo(other.is_set_eventlog_port());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (is_set_eventlog_port()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.eventlog_port,other.eventlog_port);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(is_set_debug_options()).compareTo(other.is_set_debug_options());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (is_set_debug_options()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.debug_options,other.debug_options);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(is_set_topology_status()).compareTo(other.is_set_topology_status());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (is_set_topology_status()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.topology_status,other.topology_status);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  return 0;
}
