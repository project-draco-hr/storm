{
  TTupleProtocol iprot=(TTupleProtocol)prot;
  struct.component_id=iprot.readString();
  struct.set_component_id_isSet(true);
  struct.component_type=backtype.storm.generated.ComponentType.findByValue(iprot.readI32());
  struct.set_component_type_isSet(true);
  BitSet incoming=iprot.readBitSet(13);
  if (incoming.get(0)) {
    struct.topology_id=iprot.readString();
    struct.set_topology_id_isSet(true);
  }
  if (incoming.get(1)) {
    struct.topology_name=iprot.readString();
    struct.set_topology_name_isSet(true);
  }
  if (incoming.get(2)) {
    struct.num_executors=iprot.readI32();
    struct.set_num_executors_isSet(true);
  }
  if (incoming.get(3)) {
    struct.num_tasks=iprot.readI32();
    struct.set_num_tasks_isSet(true);
  }
  if (incoming.get(4)) {
{
      org.apache.thrift.protocol.TMap _map432=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.STRUCT,iprot.readI32());
      struct.window_to_stats=new HashMap<String,ComponentAggregateStats>(2 * _map432.size);
      String _key433;
      ComponentAggregateStats _val434;
      for (int _i435=0; _i435 < _map432.size; ++_i435) {
        _key433=iprot.readString();
        _val434=new ComponentAggregateStats();
        _val434.read(iprot);
        struct.window_to_stats.put(_key433,_val434);
      }
    }
    struct.set_window_to_stats_isSet(true);
  }
  if (incoming.get(5)) {
{
      org.apache.thrift.protocol.TMap _map436=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRUCT,org.apache.thrift.protocol.TType.STRUCT,iprot.readI32());
      struct.gsid_to_input_stats=new HashMap<GlobalStreamId,ComponentAggregateStats>(2 * _map436.size);
      GlobalStreamId _key437;
      ComponentAggregateStats _val438;
      for (int _i439=0; _i439 < _map436.size; ++_i439) {
        _key437=new GlobalStreamId();
        _key437.read(iprot);
        _val438=new ComponentAggregateStats();
        _val438.read(iprot);
        struct.gsid_to_input_stats.put(_key437,_val438);
      }
    }
    struct.set_gsid_to_input_stats_isSet(true);
  }
  if (incoming.get(6)) {
{
      org.apache.thrift.protocol.TMap _map440=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.STRUCT,iprot.readI32());
      struct.sid_to_output_stats=new HashMap<String,ComponentAggregateStats>(2 * _map440.size);
      String _key441;
      ComponentAggregateStats _val442;
      for (int _i443=0; _i443 < _map440.size; ++_i443) {
        _key441=iprot.readString();
        _val442=new ComponentAggregateStats();
        _val442.read(iprot);
        struct.sid_to_output_stats.put(_key441,_val442);
      }
    }
    struct.set_sid_to_output_stats_isSet(true);
  }
  if (incoming.get(7)) {
{
      org.apache.thrift.protocol.TList _list444=new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT,iprot.readI32());
      struct.exec_stats=new ArrayList<ExecutorAggregateStats>(_list444.size);
      ExecutorAggregateStats _elem445;
      for (int _i446=0; _i446 < _list444.size; ++_i446) {
        _elem445=new ExecutorAggregateStats();
        _elem445.read(iprot);
        struct.exec_stats.add(_elem445);
      }
    }
    struct.set_exec_stats_isSet(true);
  }
  if (incoming.get(8)) {
{
      org.apache.thrift.protocol.TList _list447=new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT,iprot.readI32());
      struct.errors=new ArrayList<ErrorInfo>(_list447.size);
      ErrorInfo _elem448;
      for (int _i449=0; _i449 < _list447.size; ++_i449) {
        _elem448=new ErrorInfo();
        _elem448.read(iprot);
        struct.errors.add(_elem448);
      }
    }
    struct.set_errors_isSet(true);
  }
  if (incoming.get(9)) {
    struct.eventlog_host=iprot.readString();
    struct.set_eventlog_host_isSet(true);
  }
  if (incoming.get(10)) {
    struct.eventlog_port=iprot.readI32();
    struct.set_eventlog_port_isSet(true);
  }
  if (incoming.get(11)) {
    struct.debug_options=new DebugOptions();
    struct.debug_options.read(iprot);
    struct.set_debug_options_isSet(true);
  }
  if (incoming.get(12)) {
    struct.topology_status=iprot.readString();
    struct.set_topology_status_isSet(true);
  }
}
