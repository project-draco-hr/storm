{
  Map<String,Number> ret=new HashMap<String,Number>();
  Number onHeapDefault=(Number)defaultConfig.get(Config.TOPOLOGY_COMPONENT_RESOURCES_ONHEAP_MEMORY_MB);
  Number offHeapDefault=(Number)defaultConfig.get(Config.TOPOLOGY_COMPONENT_RESOURCES_OFFHEAP_MEMORY_MB);
  Number cpuLoadDefault=(Number)defaultConfig.get(Config.TOPOLOGY_COMPONENT_CPU_PCORE_PERCENT);
  if (res == null) {
    ret.put(Config.TOPOLOGY_COMPONENT_RESOURCES_ONHEAP_MEMORY_MB,onHeapDefault);
    ret.put(Config.TOPOLOGY_COMPONENT_RESOURCES_OFFHEAP_MEMORY_MB,offHeapDefault);
    ret.put(Config.TOPOLOGY_COMPONENT_CPU_PCORE_PERCENT,cpuLoadDefault);
    return ret;
  }
  Number onHeap=res.get(Config.TOPOLOGY_COMPONENT_RESOURCES_ONHEAP_MEMORY_MB);
  Number offHeap=res.get(Config.TOPOLOGY_COMPONENT_RESOURCES_OFFHEAP_MEMORY_MB);
  Number cpuLoad=res.get(Config.TOPOLOGY_COMPONENT_CPU_PCORE_PERCENT);
  if (onHeap == null) {
    onHeap=onHeapDefault;
  }
 else {
    onHeap=Math.max(onHeap.doubleValue(),onHeapDefault.doubleValue());
  }
  if (offHeap == null) {
    offHeap=offHeapDefault;
  }
 else {
    offHeap=Math.max(offHeap.doubleValue(),offHeapDefault.doubleValue());
  }
  if (cpuLoad == null) {
    cpuLoad=cpuLoadDefault;
  }
 else {
    cpuLoad=Math.max(cpuLoad.doubleValue(),cpuLoadDefault.doubleValue());
  }
  ret.put(Config.TOPOLOGY_COMPONENT_RESOURCES_ONHEAP_MEMORY_MB,onHeap);
  ret.put(Config.TOPOLOGY_COMPONENT_RESOURCES_OFFHEAP_MEMORY_MB,offHeap);
  ret.put(Config.TOPOLOGY_COMPONENT_CPU_PCORE_PERCENT,cpuLoad);
  return ret;
}
