{
  TTupleProtocol iprot=(TTupleProtocol)prot;
  struct.time_secs=iprot.readI64();
  struct.set_time_secs_isSet(true);
  struct.hostname=iprot.readString();
  struct.set_hostname_isSet(true);
  BitSet incoming=iprot.readBitSet(7);
  if (incoming.get(0)) {
    struct.assignment_id=iprot.readString();
    struct.set_assignment_id_isSet(true);
  }
  if (incoming.get(1)) {
{
      org.apache.thrift.protocol.TList _list510=new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I64,iprot.readI32());
      struct.used_ports=new ArrayList<Long>(_list510.size);
      long _elem511;
      for (int _i512=0; _i512 < _list510.size; ++_i512) {
        _elem511=iprot.readI64();
        struct.used_ports.add(_elem511);
      }
    }
    struct.set_used_ports_isSet(true);
  }
  if (incoming.get(2)) {
{
      org.apache.thrift.protocol.TList _list513=new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I64,iprot.readI32());
      struct.meta=new ArrayList<Long>(_list513.size);
      long _elem514;
      for (int _i515=0; _i515 < _list513.size; ++_i515) {
        _elem514=iprot.readI64();
        struct.meta.add(_elem514);
      }
    }
    struct.set_meta_isSet(true);
  }
  if (incoming.get(3)) {
{
      org.apache.thrift.protocol.TMap _map516=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.STRING,iprot.readI32());
      struct.scheduler_meta=new HashMap<String,String>(2 * _map516.size);
      String _key517;
      String _val518;
      for (int _i519=0; _i519 < _map516.size; ++_i519) {
        _key517=iprot.readString();
        _val518=iprot.readString();
        struct.scheduler_meta.put(_key517,_val518);
      }
    }
    struct.set_scheduler_meta_isSet(true);
  }
  if (incoming.get(4)) {
    struct.uptime_secs=iprot.readI64();
    struct.set_uptime_secs_isSet(true);
  }
  if (incoming.get(5)) {
    struct.version=iprot.readString();
    struct.set_version_isSet(true);
  }
  if (incoming.get(6)) {
{
      org.apache.thrift.protocol.TMap _map520=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.DOUBLE,iprot.readI32());
      struct.resources_map=new HashMap<String,Double>(2 * _map520.size);
      String _key521;
      double _val522;
      for (int _i523=0; _i523 < _map520.size; ++_i523) {
        _key521=iprot.readString();
        _val522=iprot.readDouble();
        struct.resources_map.put(_key521,_val522);
      }
    }
    struct.set_resources_map_isSet(true);
  }
}
