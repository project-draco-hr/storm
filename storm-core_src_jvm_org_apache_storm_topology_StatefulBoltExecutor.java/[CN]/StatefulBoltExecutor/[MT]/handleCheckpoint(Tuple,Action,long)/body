{
  LOG.debug("handleCheckPoint with tuple {}, action {}, txid {}",checkpointTuple,action,txid);
  if (action == PREPARE) {
    if (boltInitialized) {
      bolt.prePrepare(txid);
      state.prepareCommit(txid);
      preparedTuples.addAll(executedTuples);
      executedTuples.clear();
    }
 else {
      LOG.debug("Failing checkpointTuple, PREPARE received when bolt state is not initialized.");
      collector.fail(checkpointTuple);
      return;
    }
  }
 else   if (action == COMMIT) {
    bolt.preCommit(txid);
    state.commit(txid);
    ack(preparedTuples);
  }
 else   if (action == ROLLBACK) {
    bolt.preRollback();
    state.rollback();
    fail(preparedTuples);
    fail(executedTuples);
  }
 else   if (action == INITSTATE) {
    if (!boltInitialized) {
      bolt.initState((T)state);
      boltInitialized=true;
      LOG.debug("{} pending tuples to process",pendingTuples.size());
      for (      Tuple tuple : pendingTuples) {
        doExecute(tuple);
      }
      pendingTuples.clear();
    }
 else {
      LOG.debug("Bolt state is already initialized, ignoring tuple {}, action {}, txid {}",checkpointTuple,action,txid);
    }
  }
  collector.emit(CheckpointSpout.CHECKPOINT_STREAM_ID,checkpointTuple,new Values(txid,action));
  collector.ack(checkpointTuple);
}
