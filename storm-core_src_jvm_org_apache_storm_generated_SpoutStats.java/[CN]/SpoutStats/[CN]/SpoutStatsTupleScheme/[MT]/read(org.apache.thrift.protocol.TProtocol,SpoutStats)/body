{
  TTupleProtocol iprot=(TTupleProtocol)prot;
{
    org.apache.thrift.protocol.TMap _map268=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.MAP,iprot.readI32());
    struct.acked=new HashMap<String,Map<String,Long>>(2 * _map268.size);
    String _key269;
    Map<String,Long> _val270;
    for (int _i271=0; _i271 < _map268.size; ++_i271) {
      _key269=iprot.readString();
{
        org.apache.thrift.protocol.TMap _map272=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.I64,iprot.readI32());
        _val270=new HashMap<String,Long>(2 * _map272.size);
        String _key273;
        long _val274;
        for (int _i275=0; _i275 < _map272.size; ++_i275) {
          _key273=iprot.readString();
          _val274=iprot.readI64();
          _val270.put(_key273,_val274);
        }
      }
      struct.acked.put(_key269,_val270);
    }
  }
  struct.set_acked_isSet(true);
{
    org.apache.thrift.protocol.TMap _map276=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.MAP,iprot.readI32());
    struct.failed=new HashMap<String,Map<String,Long>>(2 * _map276.size);
    String _key277;
    Map<String,Long> _val278;
    for (int _i279=0; _i279 < _map276.size; ++_i279) {
      _key277=iprot.readString();
{
        org.apache.thrift.protocol.TMap _map280=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.I64,iprot.readI32());
        _val278=new HashMap<String,Long>(2 * _map280.size);
        String _key281;
        long _val282;
        for (int _i283=0; _i283 < _map280.size; ++_i283) {
          _key281=iprot.readString();
          _val282=iprot.readI64();
          _val278.put(_key281,_val282);
        }
      }
      struct.failed.put(_key277,_val278);
    }
  }
  struct.set_failed_isSet(true);
{
    org.apache.thrift.protocol.TMap _map284=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.MAP,iprot.readI32());
    struct.complete_ms_avg=new HashMap<String,Map<String,Double>>(2 * _map284.size);
    String _key285;
    Map<String,Double> _val286;
    for (int _i287=0; _i287 < _map284.size; ++_i287) {
      _key285=iprot.readString();
{
        org.apache.thrift.protocol.TMap _map288=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.DOUBLE,iprot.readI32());
        _val286=new HashMap<String,Double>(2 * _map288.size);
        String _key289;
        double _val290;
        for (int _i291=0; _i291 < _map288.size; ++_i291) {
          _key289=iprot.readString();
          _val290=iprot.readDouble();
          _val286.put(_key289,_val290);
        }
      }
      struct.complete_ms_avg.put(_key285,_val286);
    }
  }
  struct.set_complete_ms_avg_isSet(true);
}
