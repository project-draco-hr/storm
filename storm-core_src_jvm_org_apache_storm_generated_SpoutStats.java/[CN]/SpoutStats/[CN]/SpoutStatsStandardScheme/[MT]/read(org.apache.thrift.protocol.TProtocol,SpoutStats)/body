{
  org.apache.thrift.protocol.TField schemeField;
  iprot.readStructBegin();
  while (true) {
    schemeField=iprot.readFieldBegin();
    if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
      break;
    }
switch (schemeField.id) {
case 1:
      if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
{
          org.apache.thrift.protocol.TMap _map232=iprot.readMapBegin();
          struct.acked=new HashMap<String,Map<String,Long>>(2 * _map232.size);
          String _key233;
          Map<String,Long> _val234;
          for (int _i235=0; _i235 < _map232.size; ++_i235) {
            _key233=iprot.readString();
{
              org.apache.thrift.protocol.TMap _map236=iprot.readMapBegin();
              _val234=new HashMap<String,Long>(2 * _map236.size);
              String _key237;
              long _val238;
              for (int _i239=0; _i239 < _map236.size; ++_i239) {
                _key237=iprot.readString();
                _val238=iprot.readI64();
                _val234.put(_key237,_val238);
              }
              iprot.readMapEnd();
            }
            struct.acked.put(_key233,_val234);
          }
          iprot.readMapEnd();
        }
        struct.set_acked_isSet(true);
      }
 else {
        org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
      }
    break;
case 2:
  if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
{
      org.apache.thrift.protocol.TMap _map240=iprot.readMapBegin();
      struct.failed=new HashMap<String,Map<String,Long>>(2 * _map240.size);
      String _key241;
      Map<String,Long> _val242;
      for (int _i243=0; _i243 < _map240.size; ++_i243) {
        _key241=iprot.readString();
{
          org.apache.thrift.protocol.TMap _map244=iprot.readMapBegin();
          _val242=new HashMap<String,Long>(2 * _map244.size);
          String _key245;
          long _val246;
          for (int _i247=0; _i247 < _map244.size; ++_i247) {
            _key245=iprot.readString();
            _val246=iprot.readI64();
            _val242.put(_key245,_val246);
          }
          iprot.readMapEnd();
        }
        struct.failed.put(_key241,_val242);
      }
      iprot.readMapEnd();
    }
    struct.set_failed_isSet(true);
  }
 else {
    org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
  }
break;
case 3:
if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
{
  org.apache.thrift.protocol.TMap _map248=iprot.readMapBegin();
  struct.complete_ms_avg=new HashMap<String,Map<String,Double>>(2 * _map248.size);
  String _key249;
  Map<String,Double> _val250;
  for (int _i251=0; _i251 < _map248.size; ++_i251) {
    _key249=iprot.readString();
{
      org.apache.thrift.protocol.TMap _map252=iprot.readMapBegin();
      _val250=new HashMap<String,Double>(2 * _map252.size);
      String _key253;
      double _val254;
      for (int _i255=0; _i255 < _map252.size; ++_i255) {
        _key253=iprot.readString();
        _val254=iprot.readDouble();
        _val250.put(_key253,_val254);
      }
      iprot.readMapEnd();
    }
    struct.complete_ms_avg.put(_key249,_val250);
  }
  iprot.readMapEnd();
}
struct.set_complete_ms_avg_isSet(true);
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
break;
default :
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
struct.validate();
}
