{
  if (closing) {
    int numMessages=iteratorSize(msgs);
    LOG.warn("discarding {} messages because the Netty client to {} is being closed",numMessages,dstAddressPrefixedName);
    return;
  }
  if (!hasMessages(msgs)) {
    return;
  }
  Channel channel=channelRef.get();
  if (!connectionEstablished(channel)) {
    closeChannelAndReconnect(channel);
    handleMessagesWhenConnectionIsUnavailable(msgs);
    return;
  }
  while (msgs.hasNext()) {
    TaskMessage message=msgs.next();
    if (messageBatch == null) {
      messageBatch=new MessageBatch(messageBatchSize);
    }
    messageBatch.add(message);
    if (messageBatch.isFull()) {
      MessageBatch toBeFlushed=messageBatch;
      flushMessages(channel,toBeFlushed);
      messageBatch=null;
    }
  }
  if (containsMessages(messageBatch)) {
    if (connectionEstablished(channel) && channel.isWritable()) {
      pauseBackgroundFlushing();
      MessageBatch toBeFlushed=messageBatch;
      messageBatch=null;
      flushMessages(channel,toBeFlushed);
    }
 else {
      resumeBackgroundFlushing();
      nextBackgroundFlushTimeMs.set(nowMillis() + flushCheckIntervalMs);
    }
  }
}
