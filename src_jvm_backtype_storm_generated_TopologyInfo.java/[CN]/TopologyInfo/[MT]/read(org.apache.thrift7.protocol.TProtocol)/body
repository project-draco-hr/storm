{
  org.apache.thrift7.protocol.TField field;
  iprot.readStructBegin();
  while (true) {
    field=iprot.readFieldBegin();
    if (field.type == org.apache.thrift7.protocol.TType.STOP) {
      break;
    }
switch (field.id) {
case 1:
      if (field.type == org.apache.thrift7.protocol.TType.STRING) {
        this.id=iprot.readString();
      }
 else {
        org.apache.thrift7.protocol.TProtocolUtil.skip(iprot,field.type);
      }
    break;
case 2:
  if (field.type == org.apache.thrift7.protocol.TType.STRING) {
    this.name=iprot.readString();
  }
 else {
    org.apache.thrift7.protocol.TProtocolUtil.skip(iprot,field.type);
  }
break;
case 3:
if (field.type == org.apache.thrift7.protocol.TType.I32) {
this.uptime_secs=iprot.readI32();
set_uptime_secs_isSet(true);
}
 else {
org.apache.thrift7.protocol.TProtocolUtil.skip(iprot,field.type);
}
break;
case 4:
if (field.type == org.apache.thrift7.protocol.TType.LIST) {
{
org.apache.thrift7.protocol.TList _list125=iprot.readListBegin();
this.tasks=new ArrayList<ExecutorSummary>(_list125.size);
for (int _i126=0; _i126 < _list125.size; ++_i126) {
ExecutorSummary _elem127;
_elem127=new ExecutorSummary();
_elem127.read(iprot);
this.tasks.add(_elem127);
}
iprot.readListEnd();
}
}
 else {
org.apache.thrift7.protocol.TProtocolUtil.skip(iprot,field.type);
}
break;
case 5:
if (field.type == org.apache.thrift7.protocol.TType.STRING) {
this.status=iprot.readString();
}
 else {
org.apache.thrift7.protocol.TProtocolUtil.skip(iprot,field.type);
}
break;
case 6:
if (field.type == org.apache.thrift7.protocol.TType.MAP) {
{
org.apache.thrift7.protocol.TMap _map128=iprot.readMapBegin();
this.errors=new HashMap<String,List<ErrorInfo>>(2 * _map128.size);
for (int _i129=0; _i129 < _map128.size; ++_i129) {
String _key130;
List<ErrorInfo> _val131;
_key130=iprot.readString();
{
org.apache.thrift7.protocol.TList _list132=iprot.readListBegin();
_val131=new ArrayList<ErrorInfo>(_list132.size);
for (int _i133=0; _i133 < _list132.size; ++_i133) {
ErrorInfo _elem134;
_elem134=new ErrorInfo();
_elem134.read(iprot);
_val131.add(_elem134);
}
iprot.readListEnd();
}
this.errors.put(_key130,_val131);
}
iprot.readMapEnd();
}
}
 else {
org.apache.thrift7.protocol.TProtocolUtil.skip(iprot,field.type);
}
break;
default :
org.apache.thrift7.protocol.TProtocolUtil.skip(iprot,field.type);
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
validate();
}
