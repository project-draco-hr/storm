{
  int batchSize=100;
  FixedBatchSpout spout=new FixedBatchSpout(batchSize);
  spout.setCycle(true);
  TridentTopology topology=new TridentTopology();
  Stream stream=topology.newStream("hiveTridentspout1",spout);
  String[] partNames={"city","state"};
  String[] colNames={"id","name","phone","street"};
  Fields hiveFields=new Fields("id","name","phone","street","city","state");
  DelimitedRecordHiveMapper mapper=new DelimitedRecordHiveMapper().withColumnFields(new Fields(colNames)).withPartitionFields(new Fields(partNames));
  HiveOptions hiveOptions;
  if (keytab != null && principal != null) {
    hiveOptions=new HiveOptions(metaStoreURI,dbName,tblName,mapper).withTxnsPerBatch(10).withBatchSize(batchSize).withIdleTimeout(10).withCallTimeout(30000).withKerberosKeytab((String)keytab).withKerberosPrincipal((String)principal);
  }
 else {
    hiveOptions=new HiveOptions(metaStoreURI,dbName,tblName,mapper).withTxnsPerBatch(10).withBatchSize(batchSize).withCallTimeout(30000).withIdleTimeout(10);
  }
  StateFactory factory=new HiveStateFactory().withOptions(hiveOptions);
  TridentState state=stream.partitionPersist(factory,hiveFields,new HiveUpdater(),new Fields());
  return topology.build();
}
