{
switch (setField) {
case FIELDS:
    if (value instanceof List) {
      break;
    }
  throw new ClassCastException("Was expecting value of type List<String> for field 'fields', but got " + value.getClass().getSimpleName());
case SHUFFLE:
if (value instanceof NullStruct) {
  break;
}
throw new ClassCastException("Was expecting value of type NullStruct for field 'shuffle', but got " + value.getClass().getSimpleName());
case ALL:
if (value instanceof NullStruct) {
break;
}
throw new ClassCastException("Was expecting value of type NullStruct for field 'all', but got " + value.getClass().getSimpleName());
case NONE:
if (value instanceof NullStruct) {
break;
}
throw new ClassCastException("Was expecting value of type NullStruct for field 'none', but got " + value.getClass().getSimpleName());
case DIRECT:
if (value instanceof NullStruct) {
break;
}
throw new ClassCastException("Was expecting value of type NullStruct for field 'direct', but got " + value.getClass().getSimpleName());
case CUSTOM_OBJECT:
if (value instanceof JavaObject) {
break;
}
throw new ClassCastException("Was expecting value of type JavaObject for field 'custom_object', but got " + value.getClass().getSimpleName());
case CUSTOM_SERIALIZED:
if (value instanceof ByteBuffer) {
break;
}
throw new ClassCastException("Was expecting value of type ByteBuffer for field 'custom_serialized', but got " + value.getClass().getSimpleName());
case LOCAL_OR_SHUFFLE:
if (value instanceof NullStruct) {
break;
}
throw new ClassCastException("Was expecting value of type NullStruct for field 'local_or_shuffle', but got " + value.getClass().getSimpleName());
default :
throw new IllegalArgumentException("Unknown field id " + setField);
}
}
