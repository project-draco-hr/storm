{
  Fields fields=new Fields("word","count");
  FixedBatchSpout spout=new FixedBatchSpout(fields,4,new Values("storm",1),new Values("trident",1),new Values("needs",1),new Values("javadoc",1));
  spout.setCycle(true);
  JedisPoolConfig poolConfig=new JedisPoolConfig.Builder().setHost(redisHost).setPort(redisPort).build();
  RedisStoreMapper storeMapper=new WordCountStoreMapper();
  RedisLookupMapper lookupMapper=new WordCountLookupMapper();
  RedisState.Factory factory=new RedisState.Factory(poolConfig);
  TridentTopology topology=new TridentTopology();
  Stream stream=topology.newStream("spout1",spout);
  stream.partitionPersist(factory,fields,new RedisStateUpdater(storeMapper,86400000),new Fields());
  TridentState state=topology.newStaticState(factory);
  stream=stream.stateQuery(state,new Fields("word"),new RedisStateQuerier(lookupMapper),new Fields("columnName","columnValue"));
  stream.each(new Fields("word","columnValue"),new PrintFunction(),new Fields());
  return topology.build();
}
