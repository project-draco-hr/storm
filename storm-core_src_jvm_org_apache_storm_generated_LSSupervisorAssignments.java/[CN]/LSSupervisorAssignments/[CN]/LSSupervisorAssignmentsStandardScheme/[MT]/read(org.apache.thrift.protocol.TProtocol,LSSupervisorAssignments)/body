{
  org.apache.thrift.protocol.TField schemeField;
  iprot.readStructBegin();
  while (true) {
    schemeField=iprot.readFieldBegin();
    if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
      break;
    }
switch (schemeField.id) {
case 1:
      if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
{
          org.apache.thrift.protocol.TMap _map732=iprot.readMapBegin();
          struct.assignments=new HashMap<Integer,LocalAssignment>(2 * _map732.size);
          int _key733;
          LocalAssignment _val734;
          for (int _i735=0; _i735 < _map732.size; ++_i735) {
            _key733=iprot.readI32();
            _val734=new LocalAssignment();
            _val734.read(iprot);
            struct.assignments.put(_key733,_val734);
          }
          iprot.readMapEnd();
        }
        struct.set_assignments_isSet(true);
      }
 else {
        org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
      }
    break;
default :
  org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
struct.validate();
}
