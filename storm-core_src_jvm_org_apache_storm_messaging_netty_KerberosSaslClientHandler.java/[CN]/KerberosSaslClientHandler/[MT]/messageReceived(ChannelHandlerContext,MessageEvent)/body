{
  LOG.debug("send/recv time (ms): {}",(System.currentTimeMillis() - start_time));
  Channel channel=ctx.getChannel();
  KerberosSaslNettyClient saslNettyClient=KerberosSaslNettyClientState.getKerberosSaslNettyClient.get(channel);
  if (saslNettyClient == null) {
    throw new Exception("saslNettyClient was unexpectedly null for channel:" + channel);
  }
  if (event.getMessage() instanceof ControlMessage) {
    ControlMessage msg=(ControlMessage)event.getMessage();
    if (msg == ControlMessage.SASL_COMPLETE_REQUEST) {
      LOG.debug("Server has sent us the SaslComplete message. Allowing normal work to proceed.");
      if (!saslNettyClient.isComplete()) {
        String message="Server returned a Sasl-complete message, but as far as we can tell, we are not authenticated yet.";
        LOG.error(message);
        throw new Exception(message);
      }
      ctx.getPipeline().remove(this);
      this.client.channelReady();
      Channels.fireMessageReceived(ctx,msg);
    }
 else {
      LOG.warn("Unexpected control message: {}",msg);
    }
    return;
  }
 else   if (event.getMessage() instanceof SaslMessageToken) {
    SaslMessageToken saslTokenMessage=(SaslMessageToken)event.getMessage();
    LOG.debug("Responding to server's token of length: {}",saslTokenMessage.getSaslToken().length);
    byte[] responseToServer=saslNettyClient.saslResponse(saslTokenMessage);
    if (responseToServer == null) {
      LOG.debug("Response to server is null: authentication should now be complete.");
      if (!saslNettyClient.isComplete()) {
        LOG.warn("Generated a null response, but authentication is not complete.");
        throw new Exception("Our reponse to the server is null, but as far as we can tell, we are not authenticated yet.");
      }
      this.client.channelReady();
      return;
    }
 else {
      LOG.debug("Response to server token has length: {}",responseToServer.length);
    }
    SaslMessageToken saslResponse=new SaslMessageToken(responseToServer);
    channel.write(saslResponse);
  }
 else {
    LOG.error("Unexpected message from server: {}",event.getMessage());
  }
}
