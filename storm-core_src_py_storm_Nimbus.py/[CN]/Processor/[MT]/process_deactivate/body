def process_deactivate(self, seqid, iprot, oprot):
    args = deactivate_args()
    args.read(iprot)
    iprot.readMessageEnd()
    result = deactivate_result()
    try:
        self._handler.deactivate(args.name)
    except NotAliveException as e:
        result.e = e
    except AuthorizationException as aze:
        result.aze = aze
    oprot.writeMessageBegin('deactivate', TMessageType.REPLY, seqid)
    result.write(oprot)
    oprot.writeMessageEnd()
    oprot.trans.flush()
