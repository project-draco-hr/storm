{
  INimbus iNimbus=new TestUtilsForResourceAwareScheduler.INimbusTest();
  Map<String,Number> resourceMap=new HashMap<String,Number>();
  resourceMap.put(Config.SUPERVISOR_CPU_CAPACITY,100.0);
  resourceMap.put(Config.SUPERVISOR_MEMORY_CAPACITY_MB,1000.0);
  Map<String,SupervisorDetails> supMap=TestUtilsForResourceAwareScheduler.genSupervisors(8,4,resourceMap);
  Config config=new Config();
  config.putAll(Utils.readDefaultConfig());
  config.put(Config.RESOURCE_AWARE_SCHEDULER_EVICTION_STRATEGY,org.apache.storm.scheduler.resource.strategies.eviction.DefaultEvictionStrategy.class.getName());
  config.put(Config.RESOURCE_AWARE_SCHEDULER_PRIORITY_STRATEGY,org.apache.storm.scheduler.resource.strategies.priority.DefaultSchedulingPriorityStrategy.class.getName());
  config.put(Config.TOPOLOGY_SCHEDULER_STRATEGY,org.apache.storm.scheduler.resource.strategies.scheduling.DefaultResourceAwareStrategy.class.getName());
  config.put(Config.TOPOLOGY_COMPONENT_CPU_PCORE_PERCENT,100.0);
  config.put(Config.TOPOLOGY_COMPONENT_RESOURCES_OFFHEAP_MEMORY_MB,500);
  config.put(Config.TOPOLOGY_COMPONENT_RESOURCES_ONHEAP_MEMORY_MB,500);
  Cluster cluster=new Cluster(iNimbus,supMap,new HashMap<String,SchedulerAssignmentImpl>(),config);
  config.put(Config.TOPOLOGY_SUBMITTER_USER,"jerry");
  TopologyDetails topo1=TestUtilsForResourceAwareScheduler.getTopology("topo-1",config,8,0,2,0,currentTime - 2,10);
  TopologyDetails topo2=TestUtilsForResourceAwareScheduler.getTopology("topo-2",config,2,0,2,0,currentTime - 2,20);
  TopologyDetails topo3=TestUtilsForResourceAwareScheduler.getTopology("topo-3",config,1,2,1,1,currentTime - 2,20);
  Map<String,TopologyDetails> topoMap=new HashMap<String,TopologyDetails>();
  topoMap.put(topo1.getId(),topo1);
  topoMap.put(topo2.getId(),topo2);
  topoMap.put(topo3.getId(),topo3);
  Topologies topologies=new Topologies(topoMap);
  ResourceAwareScheduler rs=new ResourceAwareScheduler();
  rs.prepare(config);
  rs.schedule(topologies,cluster);
  Assert.assertTrue("Topo-2 scheduled?",cluster.getAssignmentById(topo2.getId()) != null);
  Assert.assertEquals("Topo-2 all executors scheduled?",4,cluster.getAssignmentById(topo2.getId()).getExecutorToSlot().size());
  Assert.assertTrue("Topo-3 scheduled?",cluster.getAssignmentById(topo3.getId()) != null);
  Assert.assertEquals("Topo-3 all executors scheduled?",3,cluster.getAssignmentById(topo3.getId()).getExecutorToSlot().size());
}
