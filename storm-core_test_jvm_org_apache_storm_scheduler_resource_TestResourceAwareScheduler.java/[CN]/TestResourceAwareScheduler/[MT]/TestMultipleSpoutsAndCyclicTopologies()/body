{
  TopologyBuilder builder=new TopologyBuilder();
  SpoutDeclarer s1=builder.setSpout("spout-1",new TestUtilsForResourceAwareScheduler.TestSpout(),5);
  SpoutDeclarer s2=builder.setSpout("spout-2",new TestUtilsForResourceAwareScheduler.TestSpout(),5);
  BoltDeclarer b1=builder.setBolt("bolt-1",new TestUtilsForResourceAwareScheduler.TestBolt(),5).shuffleGrouping("spout-1").shuffleGrouping("bolt-3");
  BoltDeclarer b2=builder.setBolt("bolt-2",new TestUtilsForResourceAwareScheduler.TestBolt(),5).shuffleGrouping("bolt-1");
  BoltDeclarer b3=builder.setBolt("bolt-3",new TestUtilsForResourceAwareScheduler.TestBolt(),5).shuffleGrouping("bolt-2").shuffleGrouping("spout-2");
  INimbus iNimbus=new TestUtilsForResourceAwareScheduler.INimbusTest();
  Map<String,Number> resourceMap=new HashMap<String,Number>();
  resourceMap.put(Config.SUPERVISOR_CPU_CAPACITY,100.0);
  resourceMap.put(Config.SUPERVISOR_MEMORY_CAPACITY_MB,1000.0);
  Map<String,SupervisorDetails> supMap=TestUtilsForResourceAwareScheduler.genSupervisors(25,1,resourceMap);
  Config config=new Config();
  config.putAll(Utils.readDefaultConfig());
  config.put(Config.RESOURCE_AWARE_SCHEDULER_EVICTION_STRATEGY,org.apache.storm.scheduler.resource.strategies.eviction.DefaultEvictionStrategy.class.getName());
  config.put(Config.RESOURCE_AWARE_SCHEDULER_PRIORITY_STRATEGY,org.apache.storm.scheduler.resource.strategies.priority.DefaultSchedulingPriorityStrategy.class.getName());
  config.put(Config.TOPOLOGY_SCHEDULER_STRATEGY,org.apache.storm.scheduler.resource.strategies.scheduling.DefaultResourceAwareStrategy.class.getName());
  config.put(Config.TOPOLOGY_COMPONENT_CPU_PCORE_PERCENT,100.0);
  config.put(Config.TOPOLOGY_COMPONENT_RESOURCES_OFFHEAP_MEMORY_MB,500);
  config.put(Config.TOPOLOGY_COMPONENT_RESOURCES_ONHEAP_MEMORY_MB,500);
  config.put(Config.TOPOLOGY_WORKER_MAX_HEAP_SIZE_MB,Double.MAX_VALUE);
  StormTopology stormTopology=builder.createTopology();
  TopologyDetails topo=new TopologyDetails("topo-1",config,stormTopology,0,TestUtilsForResourceAwareScheduler.genExecsAndComps(stormTopology,5,5),0);
  Cluster cluster=new Cluster(iNimbus,supMap,new HashMap<String,SchedulerAssignmentImpl>(),config);
  config.put(Config.TOPOLOGY_SUBMITTER_USER,"jerry");
  Map<String,TopologyDetails> topoMap=new HashMap<String,TopologyDetails>();
  topoMap.put(topo.getId(),topo);
  Topologies topologies=new Topologies(topoMap);
  ResourceAwareScheduler rs=new ResourceAwareScheduler();
  rs.prepare(config);
  rs.schedule(topologies,cluster);
  Assert.assertTrue("Topo scheduled?",cluster.getAssignmentById(topo.getId()) != null);
  Assert.assertEquals("Topo all executors scheduled?",25,cluster.getAssignmentById(topo.getId()).getExecutorToSlot().size());
}
