{
  org.apache.thrift.protocol.TField schemeField;
  iprot.readStructBegin();
  while (true) {
    schemeField=iprot.readFieldBegin();
    if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
      break;
    }
switch (schemeField.id) {
case 1:
      if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
{
          org.apache.thrift.protocol.TList _list438=iprot.readListBegin();
          struct.supervisor_summaries=new ArrayList<SupervisorSummary>(_list438.size);
          SupervisorSummary _elem439;
          for (int _i440=0; _i440 < _list438.size; ++_i440) {
            _elem439=new SupervisorSummary();
            _elem439.read(iprot);
            struct.supervisor_summaries.add(_elem439);
          }
          iprot.readListEnd();
        }
        struct.set_supervisor_summaries_isSet(true);
      }
 else {
        org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
      }
    break;
case 2:
  if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
{
      org.apache.thrift.protocol.TList _list441=iprot.readListBegin();
      struct.worker_summaries=new ArrayList<WorkerSummary>(_list441.size);
      WorkerSummary _elem442;
      for (int _i443=0; _i443 < _list441.size; ++_i443) {
        _elem442=new WorkerSummary();
        _elem442.read(iprot);
        struct.worker_summaries.add(_elem442);
      }
      iprot.readListEnd();
    }
    struct.set_worker_summaries_isSet(true);
  }
 else {
    org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
  }
break;
default :
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
struct.validate();
}
