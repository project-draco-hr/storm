{
switch (field) {
case SUPERVISOR_ID:
    if (value == null) {
      unset_supervisor_id();
    }
 else {
      set_supervisor_id((String)value);
    }
  break;
case HOST:
if (value == null) {
  unset_host();
}
 else {
  set_host((String)value);
}
break;
case PORT:
if (value == null) {
unset_port();
}
 else {
set_port((Integer)value);
}
break;
case TOPOLOGY_ID:
if (value == null) {
unset_topology_id();
}
 else {
set_topology_id((String)value);
}
break;
case TOPOLOGY_NAME:
if (value == null) {
unset_topology_name();
}
 else {
set_topology_name((String)value);
}
break;
case NUM_EXECUTORS:
if (value == null) {
unset_num_executors();
}
 else {
set_num_executors((Integer)value);
}
break;
case COMPONENT_TO_NUM_TASKS:
if (value == null) {
unset_component_to_num_tasks();
}
 else {
set_component_to_num_tasks((Map<String,Long>)value);
}
break;
case TIME_SECS:
if (value == null) {
unset_time_secs();
}
 else {
set_time_secs((Integer)value);
}
break;
case UPTIME_SECS:
if (value == null) {
unset_uptime_secs();
}
 else {
set_uptime_secs((Integer)value);
}
break;
case REQUESTED_MEMONHEAP:
if (value == null) {
unset_requested_memonheap();
}
 else {
set_requested_memonheap((Double)value);
}
break;
case REQUESTED_MEMOFFHEAP:
if (value == null) {
unset_requested_memoffheap();
}
 else {
set_requested_memoffheap((Double)value);
}
break;
case REQUESTED_CPU:
if (value == null) {
unset_requested_cpu();
}
 else {
set_requested_cpu((Double)value);
}
break;
case ASSIGNED_MEMONHEAP:
if (value == null) {
unset_assigned_memonheap();
}
 else {
set_assigned_memonheap((Double)value);
}
break;
case ASSIGNED_MEMOFFHEAP:
if (value == null) {
unset_assigned_memoffheap();
}
 else {
set_assigned_memoffheap((Double)value);
}
break;
case ASSIGNED_CPU:
if (value == null) {
unset_assigned_cpu();
}
 else {
set_assigned_cpu((Double)value);
}
break;
}
}
