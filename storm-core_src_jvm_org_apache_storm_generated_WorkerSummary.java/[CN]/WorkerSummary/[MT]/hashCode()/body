{
  List<Object> list=new ArrayList<Object>();
  boolean present_supervisor_id=true && (is_set_supervisor_id());
  list.add(present_supervisor_id);
  if (present_supervisor_id)   list.add(supervisor_id);
  boolean present_host=true && (is_set_host());
  list.add(present_host);
  if (present_host)   list.add(host);
  boolean present_port=true && (is_set_port());
  list.add(present_port);
  if (present_port)   list.add(port);
  boolean present_topology_id=true && (is_set_topology_id());
  list.add(present_topology_id);
  if (present_topology_id)   list.add(topology_id);
  boolean present_topology_name=true && (is_set_topology_name());
  list.add(present_topology_name);
  if (present_topology_name)   list.add(topology_name);
  boolean present_num_executors=true && (is_set_num_executors());
  list.add(present_num_executors);
  if (present_num_executors)   list.add(num_executors);
  boolean present_component_to_num_tasks=true && (is_set_component_to_num_tasks());
  list.add(present_component_to_num_tasks);
  if (present_component_to_num_tasks)   list.add(component_to_num_tasks);
  boolean present_time_secs=true && (is_set_time_secs());
  list.add(present_time_secs);
  if (present_time_secs)   list.add(time_secs);
  boolean present_uptime_secs=true && (is_set_uptime_secs());
  list.add(present_uptime_secs);
  if (present_uptime_secs)   list.add(uptime_secs);
  boolean present_requested_memonheap=true && (is_set_requested_memonheap());
  list.add(present_requested_memonheap);
  if (present_requested_memonheap)   list.add(requested_memonheap);
  boolean present_requested_memoffheap=true && (is_set_requested_memoffheap());
  list.add(present_requested_memoffheap);
  if (present_requested_memoffheap)   list.add(requested_memoffheap);
  boolean present_requested_cpu=true && (is_set_requested_cpu());
  list.add(present_requested_cpu);
  if (present_requested_cpu)   list.add(requested_cpu);
  boolean present_assigned_memonheap=true && (is_set_assigned_memonheap());
  list.add(present_assigned_memonheap);
  if (present_assigned_memonheap)   list.add(assigned_memonheap);
  boolean present_assigned_memoffheap=true && (is_set_assigned_memoffheap());
  list.add(present_assigned_memoffheap);
  if (present_assigned_memoffheap)   list.add(assigned_memoffheap);
  boolean present_assigned_cpu=true && (is_set_assigned_cpu());
  list.add(present_assigned_cpu);
  if (present_assigned_cpu)   list.add(assigned_cpu);
  return list.hashCode();
}
