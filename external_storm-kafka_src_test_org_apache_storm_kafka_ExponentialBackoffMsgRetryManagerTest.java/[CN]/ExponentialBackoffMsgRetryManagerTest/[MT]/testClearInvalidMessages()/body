{
  ExponentialBackoffMsgRetryManager manager=buildExponentialBackoffMsgRetryManager(0,0d,0,Integer.MAX_VALUE);
  manager.failed(TEST_OFFSET);
  manager.failed(TEST_OFFSET2);
  manager.failed(TEST_OFFSET3);
  assertTrue("message should be ready for retry",manager.shouldReEmitMsg(TEST_OFFSET));
  assertTrue("message should be ready for retry",manager.shouldReEmitMsg(TEST_OFFSET2));
  assertTrue("message should be ready for retry",manager.shouldReEmitMsg(TEST_OFFSET3));
  manager.clearOffsetsBefore(TEST_NEW_OFFSET);
  Long next=manager.nextFailedMessageToRetry();
  assertEquals("expect test offset next available for retry",TEST_OFFSET3,next);
  manager.acked(TEST_OFFSET3);
  next=manager.nextFailedMessageToRetry();
  assertNull("expect no message ready after acked",next);
}
