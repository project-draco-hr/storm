{
  WindowManager<Tuple> manager=new WindowManager<>(lifecycleListener);
  Duration windowLengthDuration=null;
  Count windowLengthCount=null;
  Duration slidingIntervalDuration=null;
  Count slidingIntervalCount=null;
  if (stormConf.containsKey(Config.TOPOLOGY_BOLTS_WINDOW_LENGTH_COUNT)) {
    windowLengthCount=new Count(((Number)stormConf.get(Config.TOPOLOGY_BOLTS_WINDOW_LENGTH_COUNT)).intValue());
  }
 else   if (stormConf.containsKey(Config.TOPOLOGY_BOLTS_WINDOW_LENGTH_DURATION_MS)) {
    windowLengthDuration=new Duration(((Number)stormConf.get(Config.TOPOLOGY_BOLTS_WINDOW_LENGTH_DURATION_MS)).intValue(),TimeUnit.MILLISECONDS);
  }
  if (stormConf.containsKey(Config.TOPOLOGY_BOLTS_SLIDING_INTERVAL_COUNT)) {
    slidingIntervalCount=new Count(((Number)stormConf.get(Config.TOPOLOGY_BOLTS_SLIDING_INTERVAL_COUNT)).intValue());
  }
 else   if (stormConf.containsKey(Config.TOPOLOGY_BOLTS_SLIDING_INTERVAL_DURATION_MS)) {
    slidingIntervalDuration=new Duration(((Number)stormConf.get(Config.TOPOLOGY_BOLTS_SLIDING_INTERVAL_DURATION_MS)).intValue(),TimeUnit.MILLISECONDS);
  }
 else {
    slidingIntervalCount=new Count(1);
  }
  validate(stormConf,windowLengthCount,windowLengthDuration,slidingIntervalCount,slidingIntervalDuration);
  if (windowLengthCount != null) {
    manager.setWindowLength(windowLengthCount);
  }
 else {
    manager.setWindowLength(windowLengthDuration);
  }
  if (slidingIntervalCount != null) {
    manager.setSlidingInterval(slidingIntervalCount);
  }
 else {
    manager.setSlidingInterval(slidingIntervalDuration);
  }
  return manager;
}
