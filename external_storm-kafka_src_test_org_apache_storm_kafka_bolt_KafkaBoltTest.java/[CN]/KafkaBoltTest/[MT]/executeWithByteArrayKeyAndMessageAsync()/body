{
  boolean async=true;
  boolean fireAndForget=false;
  String keyString="test-key";
  String messageString="test-message";
  byte[] key=keyString.getBytes();
  byte[] message=messageString.getBytes();
  final Tuple tuple=generateTestTuple(key,message);
  final ByteBufferMessageSet mockMsg=mockSingleMessage(key,message);
  simpleConsumer.close();
  simpleConsumer=mockSimpleConsumer(mockMsg);
  KafkaProducer<?,?> producer=mock(KafkaProducer.class);
  when(producer.send(any(ProducerRecord.class),any(Callback.class))).thenAnswer(new Answer<Future>(){
    @Override public Future answer(    InvocationOnMock invocationOnMock) throws Throwable {
      Callback cb=(Callback)invocationOnMock.getArguments()[1];
      cb.onCompletion(null,null);
      return mock(Future.class);
    }
  }
);
  bolt=generateDefaultSerializerBolt(async,fireAndForget,producer);
  bolt.execute(tuple);
  verify(collector).ack(tuple);
  verifyMessage(keyString,messageString);
}
