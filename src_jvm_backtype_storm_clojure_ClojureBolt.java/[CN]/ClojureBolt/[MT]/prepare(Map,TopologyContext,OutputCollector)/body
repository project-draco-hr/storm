{
  try {
    clojure.lang.Compiler.eval(RT.readString("(require '" + _namespace + ")"));
  }
 catch (  Exception e) {
  }
  IFn hof=(IFn)RT.var(_namespace,_fnName).deref();
  try {
    IFn preparer=(IFn)hof.applyTo(RT.seq(_params));
    List<Object> args=new ArrayList<Object>(){
{
        add(stormConf);
        add(context);
        add(collector);
      }
    }
;
    _bolt=(IBolt)preparer.applyTo(RT.seq(args));
    try {
      _bolt.prepare(stormConf,context,collector);
    }
 catch (    AbstractMethodError ame) {
    }
  }
 catch (  Exception e) {
    throw new RuntimeException(e);
  }
}
