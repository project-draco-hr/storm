{
  IFn hof=Utils.loadClojureFn(_namespace,_fnName);
  try {
    IFn preparer=(IFn)hof.applyTo(RT.seq(_params));
    final Map<Keyword,Object> collectorMap=new PersistentArrayMap(new Object[]{Keyword.intern(Symbol.create("output-collector")),collector,Keyword.intern(Symbol.create("context")),context});
    List<Object> args=new ArrayList<Object>(){
{
        add(stormConf);
        add(context);
        add(collectorMap);
      }
    }
;
    _bolt=(IBolt)preparer.applyTo(RT.seq(args));
    try {
      _bolt.prepare(stormConf,context,collector);
    }
 catch (    AbstractMethodError ame) {
    }
  }
 catch (  Exception e) {
    throw new RuntimeException(e);
  }
}
