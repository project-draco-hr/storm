{
  boolean skipMissing=(Boolean)conf.get(Config.TOPOLOGY_SKIP_MISSING_SERIALIZATIONS);
  Map<Object,String> customSerializations=(Map<Object,String>)conf.get(Config.TOPOLOGY_SERIALIZATIONS);
  if (customSerializations == null)   customSerializations=new HashMap<Object,String>();
  for (  Object tokenObj : customSerializations.keySet()) {
    String serializationClassName=customSerializations.get(tokenObj);
    int token=toToken(tokenObj);
    if (token <= SERIALIZATION_TOKEN_BOUNDARY) {
      throw new RuntimeException("Illegal token " + token + " for "+ serializationClassName);
    }
    try {
      LOG.info("Loading custom serialization " + serializationClassName + " for token "+ token);
      Class serClass=Class.forName(serializationClassName);
      _serializations.put(token,(ISerialization)serClass.newInstance());
    }
 catch (    ClassNotFoundException e) {
      if (skipMissing) {
        LOG.info("Could not find serialization for " + serializationClassName + ". Skipping...");
      }
 else {
        throw new RuntimeException(e);
      }
    }
catch (    InstantiationException e) {
      throw new RuntimeException(e);
    }
catch (    IllegalAccessException e) {
      throw new RuntimeException(e);
    }
  }
}
