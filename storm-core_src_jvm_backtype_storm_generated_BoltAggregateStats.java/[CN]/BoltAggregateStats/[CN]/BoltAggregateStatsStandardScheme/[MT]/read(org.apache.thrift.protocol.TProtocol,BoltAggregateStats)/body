{
  org.apache.thrift.protocol.TField schemeField;
  iprot.readStructBegin();
  while (true) {
    schemeField=iprot.readFieldBegin();
    if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
      break;
    }
switch (schemeField.id) {
case 513:
      if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
        struct.execute_latency_ms=iprot.readDouble();
        struct.set_execute_latency_ms_isSet(true);
      }
 else {
        org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
      }
    break;
case 514:
  if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
    struct.process_latency_ms=iprot.readDouble();
    struct.set_process_latency_ms_isSet(true);
  }
 else {
    org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
  }
break;
case 515:
if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
struct.executed=iprot.readI64();
struct.set_executed_isSet(true);
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
break;
case 516:
if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
struct.capacity=iprot.readDouble();
struct.set_capacity_isSet(true);
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
break;
default :
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
struct.validate();
}
