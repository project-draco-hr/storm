{
  org.apache.thrift.protocol.TField schemeField;
  iprot.readStructBegin();
  while (true) {
    schemeField=iprot.readFieldBegin();
    if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
      break;
    }
switch (schemeField.id) {
case 1:
      if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
{
          org.apache.thrift.protocol.TMap _map704=iprot.readMapBegin();
          struct.serialized_parts=new HashMap<String,ThriftSerializedObject>(2 * _map704.size);
          String _key705;
          ThriftSerializedObject _val706;
          for (int _i707=0; _i707 < _map704.size; ++_i707) {
            _key705=iprot.readString();
            _val706=new ThriftSerializedObject();
            _val706.read(iprot);
            struct.serialized_parts.put(_key705,_val706);
          }
          iprot.readMapEnd();
        }
        struct.set_serialized_parts_isSet(true);
      }
 else {
        org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
      }
    break;
default :
  org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
struct.validate();
}
