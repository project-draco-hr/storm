{
  EvictionPolicy<Integer> evictionPolicy=new TimeEvictionPolicy<Integer>(new Duration(100,TimeUnit.MILLISECONDS).value);
  windowManager.setEvictionPolicy(evictionPolicy);
  TriggerPolicy<Integer> triggerPolicy=new TimeTriggerPolicy<Integer>(new Duration(1,TimeUnit.DAYS).value,windowManager);
  triggerPolicy.start();
  windowManager.setTriggerPolicy(triggerPolicy);
  long now=System.currentTimeMillis();
  for (  int i : seq(1,10)) {
    windowManager.add(i);
  }
  evictionPolicy.setContext(new DefaultEvictionContext(now + 60));
  windowManager.onTrigger();
  assertEquals(seq(1,10),listener.onActivationEvents);
  assertTrue(listener.onActivationExpiredEvents.isEmpty());
  listener.clear();
  evictionPolicy.setContext(new DefaultEvictionContext(now + 120));
  windowManager.onTrigger();
  assertEquals(seq(1,10),listener.onExpiryEvents);
  assertTrue(listener.onActivationEvents.isEmpty());
  listener.clear();
  evictionPolicy.setContext(new DefaultEvictionContext(now + 180));
  windowManager.onTrigger();
  assertTrue(listener.onActivationExpiredEvents.isEmpty());
  assertTrue(listener.onActivationEvents.isEmpty());
}
