{
  EvictionPolicy<Integer> evictionPolicy=new WatermarkTimeEvictionPolicy<>(20);
  windowManager.setEvictionPolicy(evictionPolicy);
  TriggerPolicy<Integer> triggerPolicy=new WatermarkTimeTriggerPolicy<Integer>(10,windowManager,evictionPolicy,windowManager);
  triggerPolicy.start();
  windowManager.setTriggerPolicy(triggerPolicy);
  windowManager.add(1,603);
  windowManager.add(2,605);
  windowManager.add(3,607);
  windowManager.add(new WaterMarkEvent<Integer>(609));
  assertEquals(Collections.emptyList(),listener.allOnActivationEvents);
  windowManager.add(4,618);
  windowManager.add(5,626);
  windowManager.add(6,636);
  windowManager.add(new WaterMarkEvent<Integer>(631));
  assertEquals(3,listener.allOnActivationEvents.size());
  assertEquals(seq(1,3),listener.allOnActivationEvents.get(0));
  assertEquals(seq(1,4),listener.allOnActivationEvents.get(1));
  assertEquals(seq(4,5),listener.allOnActivationEvents.get(2));
  assertEquals(Collections.emptyList(),listener.allOnActivationExpiredEvents.get(0));
  assertEquals(Collections.emptyList(),listener.allOnActivationExpiredEvents.get(1));
  assertEquals(seq(1,3),listener.allOnActivationExpiredEvents.get(2));
  assertEquals(seq(1,3),listener.allOnActivationNewEvents.get(0));
  assertEquals(seq(4,4),listener.allOnActivationNewEvents.get(1));
  assertEquals(seq(5,5),listener.allOnActivationNewEvents.get(2));
  assertEquals(seq(1,3),listener.allOnExpiryEvents.get(0));
  windowManager.add(7,825);
  windowManager.add(8,826);
  windowManager.add(9,827);
  windowManager.add(10,839);
  listener.clear();
  windowManager.add(new WaterMarkEvent<Integer>(834));
  assertEquals(3,listener.allOnActivationEvents.size());
  assertEquals(seq(5,6),listener.allOnActivationEvents.get(0));
  assertEquals(seq(6,6),listener.allOnActivationEvents.get(1));
  assertEquals(seq(7,9),listener.allOnActivationEvents.get(2));
  assertEquals(seq(4,4),listener.allOnActivationExpiredEvents.get(0));
  assertEquals(seq(5,5),listener.allOnActivationExpiredEvents.get(1));
  assertEquals(Collections.emptyList(),listener.allOnActivationExpiredEvents.get(2));
  assertEquals(seq(6,6),listener.allOnActivationNewEvents.get(0));
  assertEquals(Collections.emptyList(),listener.allOnActivationNewEvents.get(1));
  assertEquals(seq(7,9),listener.allOnActivationNewEvents.get(2));
  assertEquals(seq(4,4),listener.allOnExpiryEvents.get(0));
  assertEquals(seq(5,5),listener.allOnExpiryEvents.get(1));
  assertEquals(seq(6,6),listener.allOnExpiryEvents.get(2));
}
