{
  EvictionPolicy<Integer> evictionPolicy=new WatermarkCountEvictionPolicy<>(3);
  windowManager.setEvictionPolicy(evictionPolicy);
  TriggerPolicy<Integer> triggerPolicy=new WatermarkTimeTriggerPolicy<Integer>(10,windowManager,evictionPolicy,windowManager);
  triggerPolicy.start();
  windowManager.setTriggerPolicy(triggerPolicy);
  windowManager.add(1,603);
  windowManager.add(2,605);
  windowManager.add(3,607);
  windowManager.add(4,618);
  windowManager.add(5,626);
  windowManager.add(6,636);
  windowManager.add(new WaterMarkEvent<Integer>(631));
  assertEquals(3,listener.allOnActivationEvents.size());
  assertEquals(seq(1,3),listener.allOnActivationEvents.get(0));
  assertEquals(seq(2,4),listener.allOnActivationEvents.get(1));
  assertEquals(seq(3,5),listener.allOnActivationEvents.get(2));
  windowManager.add(7,665);
  windowManager.add(8,666);
  windowManager.add(9,667);
  windowManager.add(10,679);
  listener.clear();
  windowManager.add(new WaterMarkEvent<Integer>(674));
  assertEquals(4,listener.allOnActivationEvents.size());
  assertEquals(seq(4,6),listener.allOnActivationEvents.get(0));
  assertEquals(seq(4,6),listener.allOnActivationEvents.get(1));
  assertEquals(seq(4,6),listener.allOnActivationEvents.get(2));
  assertEquals(seq(7,9),listener.allOnActivationEvents.get(3));
}
