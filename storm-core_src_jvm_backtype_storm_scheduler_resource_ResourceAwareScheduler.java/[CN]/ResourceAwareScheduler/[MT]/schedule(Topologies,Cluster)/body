{
  LOG.debug("\n\n\nRerunning ResourceAwareScheduler...");
  this.initialize(topologies,cluster);
  LOG.info("Cluster scheduling:\n{}",ResourceUtils.printScheduling(cluster,topologies));
  LOG.info("Nodes:\n{}",this.nodes);
  for (  User user : this.getUserMap().values()) {
    LOG.info(user.getDetailedInfo());
  }
  ISchedulingPriorityStrategy schedulingPrioritystrategy=null;
  while (true) {
    if (schedulingPrioritystrategy == null) {
      try {
        schedulingPrioritystrategy=(ISchedulingPriorityStrategy)Utils.newInstance((String)this.conf.get(Config.RESOURCE_AWARE_SCHEDULER_PRIORITY_STRATEGY));
      }
 catch (      RuntimeException e) {
        LOG.error("failed to create instance of priority strategy: {} with error: {}! No topologies will be scheduled.",this.conf.get(Config.RESOURCE_AWARE_SCHEDULER_PRIORITY_STRATEGY),e.getMessage());
        break;
      }
    }
    TopologyDetails td=null;
    try {
      schedulingPrioritystrategy.prepare(this.topologies,this.cluster,this.userMap,this.nodes);
      td=schedulingPrioritystrategy.getNextTopologyToSchedule();
    }
 catch (    Exception e) {
      LOG.error("Exception thrown when running priority strategy {}. No topologies will be scheduled! Error: {} StackTrace: {}",schedulingPrioritystrategy.getClass().getName(),e.getMessage(),Arrays.toString(e.getStackTrace()));
      break;
    }
    if (td == null) {
      break;
    }
    scheduleTopology(td);
  }
}
