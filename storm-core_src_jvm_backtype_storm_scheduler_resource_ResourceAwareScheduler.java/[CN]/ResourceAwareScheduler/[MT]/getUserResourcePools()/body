{
  Map<String,Map<String,Number>> raw=(Map<String,Map<String,Number>>)this.conf.get(Config.RESOURCE_AWARE_SCHEDULER_USER_POOLS);
  Map<String,Map<String,Double>> ret=(Map<String,Map<String,Double>>)this.conf.get(Config.RESOURCE_AWARE_SCHEDULER_USER_POOLS);
  if (raw == null) {
    ret=new HashMap<String,Map<String,Double>>();
  }
 else {
    for (    Map.Entry<String,Map<String,Number>> UserPoolEntry : raw.entrySet()) {
      String user=UserPoolEntry.getKey();
      ret.put(user,new HashMap<String,Double>());
      for (      Map.Entry<String,Number> resourceEntry : UserPoolEntry.getValue().entrySet()) {
        ret.get(user).put(resourceEntry.getKey(),resourceEntry.getValue().doubleValue());
      }
    }
  }
  Map fromFile=Utils.findAndReadConfigFile("user-resource-pools.yaml",false);
  Map<String,Map<String,Number>> tmp=(Map<String,Map<String,Number>>)fromFile.get(Config.RESOURCE_AWARE_SCHEDULER_USER_POOLS);
  if (tmp != null) {
    for (    Map.Entry<String,Map<String,Number>> UserPoolEntry : tmp.entrySet()) {
      String user=UserPoolEntry.getKey();
      ret.put(user,new HashMap<String,Double>());
      for (      Map.Entry<String,Number> resourceEntry : UserPoolEntry.getValue().entrySet()) {
        ret.get(user).put(resourceEntry.getKey(),resourceEntry.getValue().doubleValue());
      }
    }
  }
  return ret;
}
