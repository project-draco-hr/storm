{
  Properties properties=new Properties();
  if (args.length > 1) {
    properties.load(new FileReader(args[1]));
  }
 else {
    properties.load(EventCount.class.getClassLoader().getResourceAsStream("Config.properties"));
  }
  String username=properties.getProperty("eventhubspout.username");
  String password=properties.getProperty("eventhubspout.password");
  String namespaceName=properties.getProperty("eventhubspout.namespace");
  String entityPath=properties.getProperty("eventhubspout.entitypath");
  String targetFqnAddress=properties.getProperty("eventhubspout.targetfqnaddress");
  String zkEndpointAddress=properties.getProperty("zookeeper.connectionstring");
  int partitionCount=Integer.parseInt(properties.getProperty("eventhubspout.partitions.count"));
  int checkpointIntervalInSeconds=Integer.parseInt(properties.getProperty("eventhubspout.checkpoint.interval"));
  int receiverCredits=Integer.parseInt(properties.getProperty("eventhub.receiver.credits"));
  String maxPendingMsgsPerPartitionStr=properties.getProperty("eventhubspout.max.pending.messages.per.partition");
  if (maxPendingMsgsPerPartitionStr == null) {
    maxPendingMsgsPerPartitionStr="1024";
  }
  int maxPendingMsgsPerPartition=Integer.parseInt(maxPendingMsgsPerPartitionStr);
  String enqueueTimeDiffStr=properties.getProperty("eventhub.receiver.filter.timediff");
  if (enqueueTimeDiffStr == null) {
    enqueueTimeDiffStr="0";
  }
  int enqueueTimeDiff=Integer.parseInt(enqueueTimeDiffStr);
  long enqueueTimeFilter=0;
  if (enqueueTimeDiff != 0) {
    enqueueTimeFilter=System.currentTimeMillis() - enqueueTimeDiff * 1000;
  }
  String consumerGroupName=properties.getProperty("eventhubspout.consumer.group.name");
  System.out.println("Eventhub spout config: ");
  System.out.println("  partition count: " + partitionCount);
  System.out.println("  checkpoint interval: " + checkpointIntervalInSeconds);
  System.out.println("  receiver credits: " + receiverCredits);
  spoutConfig=new EventHubSpoutConfig(username,password,namespaceName,entityPath,partitionCount,zkEndpointAddress,checkpointIntervalInSeconds,receiverCredits,maxPendingMsgsPerPartition,enqueueTimeFilter);
  if (targetFqnAddress != null) {
    spoutConfig.setTargetAddress(targetFqnAddress);
  }
  spoutConfig.setConsumerGroupName(consumerGroupName);
  numWorkers=spoutConfig.getPartitionCount();
  if (args.length > 0) {
    spoutConfig.setTopologyName(args[0]);
  }
}
