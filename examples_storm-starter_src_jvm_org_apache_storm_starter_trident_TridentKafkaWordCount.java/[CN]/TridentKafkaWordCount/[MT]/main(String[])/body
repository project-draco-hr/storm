{
  String zkUrl="localhost:2181";
  String brokerUrl="localhost:9092";
  if (args.length > 3 || (args.length == 1 && args[0].matches("^-h|--help$"))) {
    System.out.println("Usage: TridentKafkaWordCount [kafka zookeeper url] [kafka broker url] [topology name]");
    System.out.println("   E.g TridentKafkaWordCount [" + zkUrl + "]"+ " ["+ brokerUrl+ "] [wordcount]");
    System.exit(1);
  }
 else   if (args.length == 1) {
    zkUrl=args[0];
  }
 else {
    zkUrl=args[0];
    brokerUrl=args[1];
  }
  System.out.println("Using Kafka zookeeper url: " + zkUrl + " broker url: "+ brokerUrl);
  TridentKafkaWordCount wordCount=new TridentKafkaWordCount(zkUrl,brokerUrl);
  if (args.length == 3) {
    Config conf=new Config();
    conf.setMaxSpoutPending(20);
    conf.setNumWorkers(1);
    StormSubmitter.submitTopology(args[2] + "-consumer",conf,wordCount.buildConsumerTopology(null));
    StormSubmitter.submitTopology(args[2] + "-producer",conf,wordCount.buildProducerTopology(wordCount.getProducerConfig()));
  }
 else {
    LocalDRPC drpc=new LocalDRPC();
    LocalCluster cluster=new LocalCluster();
    cluster.submitTopology("wordCounter",wordCount.getConsumerConfig(),wordCount.buildConsumerTopology(drpc));
    Config conf=new Config();
    conf.setMaxSpoutPending(20);
    cluster.submitTopology("kafkaBolt",conf,wordCount.buildProducerTopology(wordCount.getProducerConfig()));
    for (int i=0; i < 60; i++) {
      System.out.println("DRPC RESULT: " + drpc.execute("words","the and apple snow jumped"));
      Thread.sleep(1000);
    }
    cluster.killTopology("kafkaBolt");
    cluster.killTopology("wordCounter");
    cluster.shutdown();
  }
}
