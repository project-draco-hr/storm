{
  State state;
  try {
    String provider=null;
    if (stormConf.containsKey(Config.TOPOLOGY_STATE_PROVIDER)) {
      provider=(String)stormConf.get(Config.TOPOLOGY_STATE_PROVIDER);
    }
 else {
      provider=DEFAULT_PROVIDER;
    }
    Class<?> klazz=Class.forName(provider);
    Object object=klazz.newInstance();
    if (object instanceof StateProvider) {
      state=((StateProvider)object).newState(namespace,stormConf,context);
    }
 else {
      String msg="Invalid state provider '" + provider + "'. Should implement backtype.storm.state.StateProvider";
      LOG.error(msg);
      throw new RuntimeException(msg);
    }
  }
 catch (  Exception ex) {
    LOG.error("Got exception while loading the state provider",ex);
    throw new RuntimeException(ex);
  }
  return state;
}
