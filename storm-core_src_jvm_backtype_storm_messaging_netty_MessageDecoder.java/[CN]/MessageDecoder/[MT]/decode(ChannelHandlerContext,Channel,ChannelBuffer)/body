{
  long available=buf.readableBytes();
  if (available < 2) {
    return null;
  }
  List<Object> ret=new ArrayList<Object>();
  while (available >= 2) {
    buf.markReaderIndex();
    short code=buf.readShort();
    available-=2;
    ControlMessage ctrl_msg=ControlMessage.mkMessage(code);
    if (ctrl_msg != null) {
      if (ctrl_msg == ControlMessage.EOB_MESSAGE) {
        continue;
      }
 else {
        return ctrl_msg;
      }
    }
    short task=code;
    if (available < 4) {
      buf.resetReaderIndex();
      break;
    }
    int length=buf.readInt();
    available-=4;
    if (length <= 0) {
      ret.add(new TaskMessage(task,null));
      break;
    }
    if (available < length) {
      buf.resetReaderIndex();
      break;
    }
    available-=length;
    ChannelBuffer payload=buf.readBytes(length);
    ret.add(new TaskMessage(task,payload.array()));
  }
  if (ret.size() == 0) {
    return null;
  }
 else {
    return ret;
  }
}
