{
  long offset;
  if (lastMeta != null) {
    String lastInstanceId=null;
    Map lastTopoMeta=(Map)lastMeta.get("topology");
    if (lastTopoMeta != null) {
      lastInstanceId=(String)lastTopoMeta.get("id");
    }
    if (config.forceFromStart && !topologyInstanceId.equals(lastInstanceId)) {
      offset=consumer.getOffsetsBefore(config.topic,partition.partition,config.startOffsetTime,1)[0];
    }
 else {
      offset=(Long)lastMeta.get("nextOffset");
    }
  }
 else {
    long startTime=-1;
    if (config.forceFromStart)     startTime=config.startOffsetTime;
    offset=consumer.getOffsetsBefore(config.topic,partition.partition,startTime,1)[0];
  }
  ByteBufferMessageSet msgs;
  try {
    long start=System.nanoTime();
    msgs=consumer.fetch(new FetchRequest(config.topic,partition.partition,offset,config.fetchSizeBytes));
    long end=System.nanoTime();
    long millis=(end - start) / 1000000;
    meanMetric.update(millis);
    maxMetric.update(millis);
  }
 catch (  Exception e) {
    if (e instanceof ConnectException) {
      throw new FailedFetchException(e);
    }
 else {
      throw new RuntimeException(e);
    }
  }
  long endoffset=offset;
  for (  MessageAndOffset msg : msgs) {
    emit(config,collector,msg.message());
    endoffset=msg.offset();
  }
  Map newMeta=new HashMap();
  newMeta.put("offset",offset);
  newMeta.put("nextOffset",endoffset);
  newMeta.put("instanceId",topologyInstanceId);
  newMeta.put("partition",partition.partition);
  newMeta.put("broker",ImmutableMap.of("host",partition.host.host,"port",partition.host.port));
  newMeta.put("topic",config.topic);
  newMeta.put("topology",ImmutableMap.of("name",topologyName,"id",topologyInstanceId));
  return newMeta;
}
