{
  for (long curr=_consumer.get() + 1; curr <= cursor; curr++) {
    try {
      AtomicReference<Object> mo=_buffer.get(curr);
      Object o=mo.getAndSet(null);
      if (o == null) {
        LOG.error("NULL found in {}:{}",this.getName(),cursor);
      }
 else       if (o == FLUSH_CACHE) {
        Object c=null;
        while (true) {
          c=_cache.poll();
          if (c == null)           break;
 else           handler.onEvent(c,curr,true);
        }
      }
 else       if (o == INTERRUPT) {
        throw new InterruptedException("Disruptor processing interrupted");
      }
 else {
        handler.onEvent(o,curr,curr == cursor);
        if (_enableBackpressure && _cb != null && _metrics.writePos() - curr <= _lowWaterMark) {
          try {
            if (_throttleOn) {
              _throttleOn=false;
              _cb.lowWaterMark();
            }
          }
 catch (          Exception e) {
            throw new RuntimeException("Exception during calling lowWaterMark callback!");
          }
        }
      }
    }
 catch (    Exception e) {
      throw new RuntimeException(e);
    }
  }
  _consumer.set(cursor);
}
