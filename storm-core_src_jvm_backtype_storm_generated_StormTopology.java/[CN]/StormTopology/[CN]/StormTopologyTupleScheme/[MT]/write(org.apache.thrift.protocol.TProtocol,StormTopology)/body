{
  TTupleProtocol oprot=(TTupleProtocol)prot;
{
    oprot.writeI32(struct.spouts.size());
    for (    Map.Entry<String,SpoutSpec> _iter63 : struct.spouts.entrySet()) {
      oprot.writeString(_iter63.getKey());
      _iter63.getValue().write(oprot);
    }
  }
{
    oprot.writeI32(struct.bolts.size());
    for (    Map.Entry<String,Bolt> _iter64 : struct.bolts.entrySet()) {
      oprot.writeString(_iter64.getKey());
      _iter64.getValue().write(oprot);
    }
  }
{
    oprot.writeI32(struct.state_spouts.size());
    for (    Map.Entry<String,StateSpoutSpec> _iter65 : struct.state_spouts.entrySet()) {
      oprot.writeString(_iter65.getKey());
      _iter65.getValue().write(oprot);
    }
  }
  BitSet optionals=new BitSet();
  if (struct.is_set_worker_hooks()) {
    optionals.set(0);
  }
  oprot.writeBitSet(optionals,1);
  if (struct.is_set_worker_hooks()) {
{
      oprot.writeI32(struct.worker_hooks.size());
      for (      ByteBuffer _iter66 : struct.worker_hooks) {
        oprot.writeBinary(_iter66);
      }
    }
  }
}
