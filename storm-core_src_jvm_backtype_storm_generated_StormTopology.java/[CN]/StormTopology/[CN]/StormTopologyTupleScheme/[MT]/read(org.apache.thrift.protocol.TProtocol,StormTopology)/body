{
  TTupleProtocol iprot=(TTupleProtocol)prot;
{
    org.apache.thrift.protocol.TMap _map62=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.STRUCT,iprot.readI32());
    struct.spouts=new HashMap<String,SpoutSpec>(2 * _map62.size);
    String _key63;
    SpoutSpec _val64;
    for (int _i65=0; _i65 < _map62.size; ++_i65) {
      _key63=iprot.readString();
      _val64=new SpoutSpec();
      _val64.read(iprot);
      struct.spouts.put(_key63,_val64);
    }
  }
  struct.set_spouts_isSet(true);
{
    org.apache.thrift.protocol.TMap _map66=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.STRUCT,iprot.readI32());
    struct.bolts=new HashMap<String,Bolt>(2 * _map66.size);
    String _key67;
    Bolt _val68;
    for (int _i69=0; _i69 < _map66.size; ++_i69) {
      _key67=iprot.readString();
      _val68=new Bolt();
      _val68.read(iprot);
      struct.bolts.put(_key67,_val68);
    }
  }
  struct.set_bolts_isSet(true);
{
    org.apache.thrift.protocol.TMap _map70=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.STRUCT,iprot.readI32());
    struct.state_spouts=new HashMap<String,StateSpoutSpec>(2 * _map70.size);
    String _key71;
    StateSpoutSpec _val72;
    for (int _i73=0; _i73 < _map70.size; ++_i73) {
      _key71=iprot.readString();
      _val72=new StateSpoutSpec();
      _val72.read(iprot);
      struct.state_spouts.put(_key71,_val72);
    }
  }
  struct.set_state_spouts_isSet(true);
}
