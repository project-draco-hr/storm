def read(self, iprot):
    if ((iprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and isinstance(iprot.trans, TTransport.CReadableTransport) and (self.thrift_spec is not None) and (fastbinary is not None)):
        fastbinary.decode_binary(self, iprot.trans, (self.__class__, self.thrift_spec))
        return
    iprot.readStructBegin()
    while True:
        (fname, ftype, fid) = iprot.readFieldBegin()
        if (ftype == TType.STOP):
            break
        if (fid == 1):
            if (ftype == TType.MAP):
                self.acked = {}
                (_ktype118, _vtype119, _size117) = iprot.readMapBegin()
                for _i121 in xrange(_size117):
                    _key122 = iprot.readString().decode('utf-8')
                    _val123 = {}
                    (_ktype125, _vtype126, _size124) = iprot.readMapBegin()
                    for _i128 in xrange(_size124):
                        _key129 = GlobalStreamId()
                        _key129.read(iprot)
                        _val130 = iprot.readI64()
                        _val123[_key129] = _val130
                    iprot.readMapEnd()
                    self.acked[_key122] = _val123
                iprot.readMapEnd()
            else:
                iprot.skip(ftype)
        elif (fid == 2):
            if (ftype == TType.MAP):
                self.failed = {}
                (_ktype132, _vtype133, _size131) = iprot.readMapBegin()
                for _i135 in xrange(_size131):
                    _key136 = iprot.readString().decode('utf-8')
                    _val137 = {}
                    (_ktype139, _vtype140, _size138) = iprot.readMapBegin()
                    for _i142 in xrange(_size138):
                        _key143 = GlobalStreamId()
                        _key143.read(iprot)
                        _val144 = iprot.readI64()
                        _val137[_key143] = _val144
                    iprot.readMapEnd()
                    self.failed[_key136] = _val137
                iprot.readMapEnd()
            else:
                iprot.skip(ftype)
        elif (fid == 3):
            if (ftype == TType.MAP):
                self.process_ms_avg = {}
                (_ktype146, _vtype147, _size145) = iprot.readMapBegin()
                for _i149 in xrange(_size145):
                    _key150 = iprot.readString().decode('utf-8')
                    _val151 = {}
                    (_ktype153, _vtype154, _size152) = iprot.readMapBegin()
                    for _i156 in xrange(_size152):
                        _key157 = GlobalStreamId()
                        _key157.read(iprot)
                        _val158 = iprot.readDouble()
                        _val151[_key157] = _val158
                    iprot.readMapEnd()
                    self.process_ms_avg[_key150] = _val151
                iprot.readMapEnd()
            else:
                iprot.skip(ftype)
        elif (fid == 4):
            if (ftype == TType.MAP):
                self.executed = {}
                (_ktype160, _vtype161, _size159) = iprot.readMapBegin()
                for _i163 in xrange(_size159):
                    _key164 = iprot.readString().decode('utf-8')
                    _val165 = {}
                    (_ktype167, _vtype168, _size166) = iprot.readMapBegin()
                    for _i170 in xrange(_size166):
                        _key171 = GlobalStreamId()
                        _key171.read(iprot)
                        _val172 = iprot.readI64()
                        _val165[_key171] = _val172
                    iprot.readMapEnd()
                    self.executed[_key164] = _val165
                iprot.readMapEnd()
            else:
                iprot.skip(ftype)
        elif (fid == 5):
            if (ftype == TType.MAP):
                self.execute_ms_avg = {}
                (_ktype174, _vtype175, _size173) = iprot.readMapBegin()
                for _i177 in xrange(_size173):
                    _key178 = iprot.readString().decode('utf-8')
                    _val179 = {}
                    (_ktype181, _vtype182, _size180) = iprot.readMapBegin()
                    for _i184 in xrange(_size180):
                        _key185 = GlobalStreamId()
                        _key185.read(iprot)
                        _val186 = iprot.readDouble()
                        _val179[_key185] = _val186
                    iprot.readMapEnd()
                    self.execute_ms_avg[_key178] = _val179
                iprot.readMapEnd()
            else:
                iprot.skip(ftype)
        else:
            iprot.skip(ftype)
        iprot.readFieldEnd()
    iprot.readStructEnd()
