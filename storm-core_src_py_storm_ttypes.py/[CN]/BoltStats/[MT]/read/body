def read(self, iprot):
    if ((iprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and isinstance(iprot.trans, TTransport.CReadableTransport) and (self.thrift_spec is not None) and (fastbinary is not None)):
        fastbinary.decode_binary(self, iprot.trans, (self.__class__, self.thrift_spec))
        return
    iprot.readStructBegin()
    while True:
        (fname, ftype, fid) = iprot.readFieldBegin()
        if (ftype == TType.STOP):
            break
        if (fid == 1):
            if (ftype == TType.MAP):
                self.acked = {}
                (_ktype97, _vtype98, _size96) = iprot.readMapBegin()
                for _i100 in xrange(_size96):
                    _key101 = iprot.readString().decode('utf-8')
                    _val102 = {}
                    (_ktype104, _vtype105, _size103) = iprot.readMapBegin()
                    for _i107 in xrange(_size103):
                        _key108 = GlobalStreamId()
                        _key108.read(iprot)
                        _val109 = iprot.readI64()
                        _val102[_key108] = _val109
                    iprot.readMapEnd()
                    self.acked[_key101] = _val102
                iprot.readMapEnd()
            else:
                iprot.skip(ftype)
        elif (fid == 2):
            if (ftype == TType.MAP):
                self.failed = {}
                (_ktype111, _vtype112, _size110) = iprot.readMapBegin()
                for _i114 in xrange(_size110):
                    _key115 = iprot.readString().decode('utf-8')
                    _val116 = {}
                    (_ktype118, _vtype119, _size117) = iprot.readMapBegin()
                    for _i121 in xrange(_size117):
                        _key122 = GlobalStreamId()
                        _key122.read(iprot)
                        _val123 = iprot.readI64()
                        _val116[_key122] = _val123
                    iprot.readMapEnd()
                    self.failed[_key115] = _val116
                iprot.readMapEnd()
            else:
                iprot.skip(ftype)
        elif (fid == 3):
            if (ftype == TType.MAP):
                self.process_ms_avg = {}
                (_ktype125, _vtype126, _size124) = iprot.readMapBegin()
                for _i128 in xrange(_size124):
                    _key129 = iprot.readString().decode('utf-8')
                    _val130 = {}
                    (_ktype132, _vtype133, _size131) = iprot.readMapBegin()
                    for _i135 in xrange(_size131):
                        _key136 = GlobalStreamId()
                        _key136.read(iprot)
                        _val137 = iprot.readDouble()
                        _val130[_key136] = _val137
                    iprot.readMapEnd()
                    self.process_ms_avg[_key129] = _val130
                iprot.readMapEnd()
            else:
                iprot.skip(ftype)
        elif (fid == 4):
            if (ftype == TType.MAP):
                self.executed = {}
                (_ktype139, _vtype140, _size138) = iprot.readMapBegin()
                for _i142 in xrange(_size138):
                    _key143 = iprot.readString().decode('utf-8')
                    _val144 = {}
                    (_ktype146, _vtype147, _size145) = iprot.readMapBegin()
                    for _i149 in xrange(_size145):
                        _key150 = GlobalStreamId()
                        _key150.read(iprot)
                        _val151 = iprot.readI64()
                        _val144[_key150] = _val151
                    iprot.readMapEnd()
                    self.executed[_key143] = _val144
                iprot.readMapEnd()
            else:
                iprot.skip(ftype)
        elif (fid == 5):
            if (ftype == TType.MAP):
                self.execute_ms_avg = {}
                (_ktype153, _vtype154, _size152) = iprot.readMapBegin()
                for _i156 in xrange(_size152):
                    _key157 = iprot.readString().decode('utf-8')
                    _val158 = {}
                    (_ktype160, _vtype161, _size159) = iprot.readMapBegin()
                    for _i163 in xrange(_size159):
                        _key164 = GlobalStreamId()
                        _key164.read(iprot)
                        _val165 = iprot.readDouble()
                        _val158[_key164] = _val165
                    iprot.readMapEnd()
                    self.execute_ms_avg[_key157] = _val158
                iprot.readMapEnd()
            else:
                iprot.skip(ftype)
        else:
            iprot.skip(ftype)
        iprot.readFieldEnd()
    iprot.readStructEnd()
