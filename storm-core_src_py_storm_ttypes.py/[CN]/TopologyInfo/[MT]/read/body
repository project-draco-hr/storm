def read(self, iprot):
    if ((iprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and isinstance(iprot.trans, TTransport.CReadableTransport) and (self.thrift_spec is not None) and (fastbinary is not None)):
        fastbinary.decode_binary(self, iprot.trans, (self.__class__, self.thrift_spec))
        return
    iprot.readStructBegin()
    while True:
        (fname, ftype, fid) = iprot.readFieldBegin()
        if (ftype == TType.STOP):
            break
        if (fid == 1):
            if (ftype == TType.STRING):
                self.id = iprot.readString().decode('utf-8')
            else:
                iprot.skip(ftype)
        elif (fid == 2):
            if (ftype == TType.STRING):
                self.name = iprot.readString().decode('utf-8')
            else:
                iprot.skip(ftype)
        elif (fid == 3):
            if (ftype == TType.I32):
                self.uptime_secs = iprot.readI32()
            else:
                iprot.skip(ftype)
        elif (fid == 4):
            if (ftype == TType.LIST):
                self.executors = []
                (_etype279, _size276) = iprot.readListBegin()
                for _i280 in xrange(_size276):
                    _elem281 = ExecutorSummary()
                    _elem281.read(iprot)
                    self.executors.append(_elem281)
                iprot.readListEnd()
            else:
                iprot.skip(ftype)
        elif (fid == 5):
            if (ftype == TType.STRING):
                self.status = iprot.readString().decode('utf-8')
            else:
                iprot.skip(ftype)
        elif (fid == 6):
            if (ftype == TType.MAP):
                self.errors = {}
                (_ktype283, _vtype284, _size282) = iprot.readMapBegin()
                for _i286 in xrange(_size282):
                    _key287 = iprot.readString().decode('utf-8')
                    _val288 = []
                    (_etype292, _size289) = iprot.readListBegin()
                    for _i293 in xrange(_size289):
                        _elem294 = ErrorInfo()
                        _elem294.read(iprot)
                        _val288.append(_elem294)
                    iprot.readListEnd()
                    self.errors[_key287] = _val288
                iprot.readMapEnd()
            else:
                iprot.skip(ftype)
        elif (fid == 7):
            if (ftype == TType.MAP):
                self.component_debug = {}
                (_ktype296, _vtype297, _size295) = iprot.readMapBegin()
                for _i299 in xrange(_size295):
                    _key300 = iprot.readString().decode('utf-8')
                    _val301 = DebugOptions()
                    _val301.read(iprot)
                    self.component_debug[_key300] = _val301
                iprot.readMapEnd()
            else:
                iprot.skip(ftype)
        elif (fid == 513):
            if (ftype == TType.STRING):
                self.sched_status = iprot.readString().decode('utf-8')
            else:
                iprot.skip(ftype)
        elif (fid == 514):
            if (ftype == TType.STRING):
                self.owner = iprot.readString().decode('utf-8')
            else:
                iprot.skip(ftype)
        elif (fid == 515):
            if (ftype == TType.I32):
                self.replication_count = iprot.readI32()
            else:
                iprot.skip(ftype)
        else:
            iprot.skip(ftype)
        iprot.readFieldEnd()
    iprot.readStructEnd()
