def read(self, iprot):
    if ((iprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and isinstance(iprot.trans, TTransport.CReadableTransport) and (self.thrift_spec is not None) and (fastbinary is not None)):
        fastbinary.decode_binary(self, iprot.trans, (self.__class__, self.thrift_spec))
        return
    iprot.readStructBegin()
    while True:
        (fname, ftype, fid) = iprot.readFieldBegin()
        if (ftype == TType.STOP):
            break
        if (fid == 1):
            if (ftype == TType.STRING):
                self.id = iprot.readString().decode('utf-8')
            else:
                iprot.skip(ftype)
        elif (fid == 2):
            if (ftype == TType.STRING):
                self.name = iprot.readString().decode('utf-8')
            else:
                iprot.skip(ftype)
        elif (fid == 3):
            if (ftype == TType.I32):
                self.uptime_secs = iprot.readI32()
            else:
                iprot.skip(ftype)
        elif (fid == 4):
            if (ftype == TType.LIST):
                self.executors = []
                (_etype263, _size260) = iprot.readListBegin()
                for _i264 in xrange(_size260):
                    _elem265 = ExecutorSummary()
                    _elem265.read(iprot)
                    self.executors.append(_elem265)
                iprot.readListEnd()
            else:
                iprot.skip(ftype)
        elif (fid == 5):
            if (ftype == TType.STRING):
                self.status = iprot.readString().decode('utf-8')
            else:
                iprot.skip(ftype)
        elif (fid == 6):
            if (ftype == TType.MAP):
                self.errors = {}
                (_ktype267, _vtype268, _size266) = iprot.readMapBegin()
                for _i270 in xrange(_size266):
                    _key271 = iprot.readString().decode('utf-8')
                    _val272 = []
                    (_etype276, _size273) = iprot.readListBegin()
                    for _i277 in xrange(_size273):
                        _elem278 = ErrorInfo()
                        _elem278.read(iprot)
                        _val272.append(_elem278)
                    iprot.readListEnd()
                    self.errors[_key271] = _val272
                iprot.readMapEnd()
            else:
                iprot.skip(ftype)
        elif (fid == 7):
            if (ftype == TType.MAP):
                self.component_debug = {}
                (_ktype280, _vtype281, _size279) = iprot.readMapBegin()
                for _i283 in xrange(_size279):
                    _key284 = iprot.readString().decode('utf-8')
                    _val285 = DebugOptions()
                    _val285.read(iprot)
                    self.component_debug[_key284] = _val285
                iprot.readMapEnd()
            else:
                iprot.skip(ftype)
        elif (fid == 513):
            if (ftype == TType.STRING):
                self.sched_status = iprot.readString().decode('utf-8')
            else:
                iprot.skip(ftype)
        elif (fid == 514):
            if (ftype == TType.STRING):
                self.owner = iprot.readString().decode('utf-8')
            else:
                iprot.skip(ftype)
        else:
            iprot.skip(ftype)
        iprot.readFieldEnd()
    iprot.readStructEnd()
