def read(self, iprot):
    if ((iprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and isinstance(iprot.trans, TTransport.CReadableTransport) and (self.thrift_spec is not None) and (fastbinary is not None)):
        fastbinary.decode_binary(self, iprot.trans, (self.__class__, self.thrift_spec))
        return
    iprot.readStructBegin()
    while True:
        (fname, ftype, fid) = iprot.readFieldBegin()
        if (ftype == TType.STOP):
            break
        if (fid == 1):
            if (ftype == TType.STRING):
                self.id = iprot.readString().decode('utf-8')
            else:
                iprot.skip(ftype)
        elif (fid == 2):
            if (ftype == TType.STRING):
                self.name = iprot.readString().decode('utf-8')
            else:
                iprot.skip(ftype)
        elif (fid == 3):
            if (ftype == TType.I32):
                self.uptime_secs = iprot.readI32()
            else:
                iprot.skip(ftype)
        elif (fid == 4):
            if (ftype == TType.LIST):
                self.executors = []
                (_etype270, _size267) = iprot.readListBegin()
                for _i271 in xrange(_size267):
                    _elem272 = ExecutorSummary()
                    _elem272.read(iprot)
                    self.executors.append(_elem272)
                iprot.readListEnd()
            else:
                iprot.skip(ftype)
        elif (fid == 5):
            if (ftype == TType.STRING):
                self.status = iprot.readString().decode('utf-8')
            else:
                iprot.skip(ftype)
        elif (fid == 6):
            if (ftype == TType.MAP):
                self.errors = {}
                (_ktype274, _vtype275, _size273) = iprot.readMapBegin()
                for _i277 in xrange(_size273):
                    _key278 = iprot.readString().decode('utf-8')
                    _val279 = []
                    (_etype283, _size280) = iprot.readListBegin()
                    for _i284 in xrange(_size280):
                        _elem285 = ErrorInfo()
                        _elem285.read(iprot)
                        _val279.append(_elem285)
                    iprot.readListEnd()
                    self.errors[_key278] = _val279
                iprot.readMapEnd()
            else:
                iprot.skip(ftype)
        elif (fid == 513):
            if (ftype == TType.STRING):
                self.sched_status = iprot.readString().decode('utf-8')
            else:
                iprot.skip(ftype)
        elif (fid == 514):
            if (ftype == TType.STRING):
                self.owner = iprot.readString().decode('utf-8')
            else:
                iprot.skip(ftype)
        elif (fid == 515):
            if (ftype == TType.I32):
                self.replication_count = iprot.readI32()
            else:
                iprot.skip(ftype)
        else:
            iprot.skip(ftype)
        iprot.readFieldEnd()
    iprot.readStructEnd()
