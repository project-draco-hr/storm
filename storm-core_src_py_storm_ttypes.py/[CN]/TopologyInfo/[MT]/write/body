def write(self, oprot):
    if ((oprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and (self.thrift_spec is not None) and (fastbinary is not None)):
        oprot.trans.write(fastbinary.encode_binary(self, (self.__class__, self.thrift_spec)))
        return
    oprot.writeStructBegin('TopologyInfo')
    if (self.id is not None):
        oprot.writeFieldBegin('id', TType.STRING, 1)
        oprot.writeString(self.id.encode('utf-8'))
        oprot.writeFieldEnd()
    if (self.name is not None):
        oprot.writeFieldBegin('name', TType.STRING, 2)
        oprot.writeString(self.name.encode('utf-8'))
        oprot.writeFieldEnd()
    if (self.uptime_secs is not None):
        oprot.writeFieldBegin('uptime_secs', TType.I32, 3)
        oprot.writeI32(self.uptime_secs)
        oprot.writeFieldEnd()
    if (self.executors is not None):
        oprot.writeFieldBegin('executors', TType.LIST, 4)
        oprot.writeListBegin(TType.STRUCT, len(self.executors))
        for iter323 in self.executors:
            iter323.write(oprot)
        oprot.writeListEnd()
        oprot.writeFieldEnd()
    if (self.status is not None):
        oprot.writeFieldBegin('status', TType.STRING, 5)
        oprot.writeString(self.status.encode('utf-8'))
        oprot.writeFieldEnd()
    if (self.errors is not None):
        oprot.writeFieldBegin('errors', TType.MAP, 6)
        oprot.writeMapBegin(TType.STRING, TType.LIST, len(self.errors))
        for (kiter324, viter325) in self.errors.items():
            oprot.writeString(kiter324.encode('utf-8'))
            oprot.writeListBegin(TType.STRUCT, len(viter325))
            for iter326 in viter325:
                iter326.write(oprot)
            oprot.writeListEnd()
        oprot.writeMapEnd()
        oprot.writeFieldEnd()
    if (self.component_debug is not None):
        oprot.writeFieldBegin('component_debug', TType.MAP, 7)
        oprot.writeMapBegin(TType.STRING, TType.STRUCT, len(self.component_debug))
        for (kiter327, viter328) in self.component_debug.items():
            oprot.writeString(kiter327.encode('utf-8'))
            viter328.write(oprot)
        oprot.writeMapEnd()
        oprot.writeFieldEnd()
    if (self.sched_status is not None):
        oprot.writeFieldBegin('sched_status', TType.STRING, 513)
        oprot.writeString(self.sched_status.encode('utf-8'))
        oprot.writeFieldEnd()
    if (self.owner is not None):
        oprot.writeFieldBegin('owner', TType.STRING, 514)
        oprot.writeString(self.owner.encode('utf-8'))
        oprot.writeFieldEnd()
    if (self.replication_count is not None):
        oprot.writeFieldBegin('replication_count', TType.I32, 515)
        oprot.writeI32(self.replication_count)
        oprot.writeFieldEnd()
    if (self.requested_memonheap is not None):
        oprot.writeFieldBegin('requested_memonheap', TType.DOUBLE, 521)
        oprot.writeDouble(self.requested_memonheap)
        oprot.writeFieldEnd()
    if (self.requested_memoffheap is not None):
        oprot.writeFieldBegin('requested_memoffheap', TType.DOUBLE, 522)
        oprot.writeDouble(self.requested_memoffheap)
        oprot.writeFieldEnd()
    if (self.requested_cpu is not None):
        oprot.writeFieldBegin('requested_cpu', TType.DOUBLE, 523)
        oprot.writeDouble(self.requested_cpu)
        oprot.writeFieldEnd()
    if (self.assigned_memonheap is not None):
        oprot.writeFieldBegin('assigned_memonheap', TType.DOUBLE, 524)
        oprot.writeDouble(self.assigned_memonheap)
        oprot.writeFieldEnd()
    if (self.assigned_memoffheap is not None):
        oprot.writeFieldBegin('assigned_memoffheap', TType.DOUBLE, 525)
        oprot.writeDouble(self.assigned_memoffheap)
        oprot.writeFieldEnd()
    if (self.assigned_cpu is not None):
        oprot.writeFieldBegin('assigned_cpu', TType.DOUBLE, 526)
        oprot.writeDouble(self.assigned_cpu)
        oprot.writeFieldEnd()
    oprot.writeFieldStop()
    oprot.writeStructEnd()
