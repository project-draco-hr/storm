def read(self, iprot):
    if ((iprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and isinstance(iprot.trans, TTransport.CReadableTransport) and (self.thrift_spec is not None) and (fastbinary is not None)):
        fastbinary.decode_binary(self, iprot.trans, (self.__class__, self.thrift_spec))
        return
    iprot.readStructBegin()
    while True:
        (fname, ftype, fid) = iprot.readFieldBegin()
        if (ftype == TType.STOP):
            break
        if (fid == 1):
            if (ftype == TType.STRING):
                self.name = iprot.readString().decode('utf-8')
            else:
                iprot.skip(ftype)
        elif (fid == 2):
            if (ftype == TType.I32):
                self.status = iprot.readI32()
            else:
                iprot.skip(ftype)
        elif (fid == 3):
            if (ftype == TType.I32):
                self.num_workers = iprot.readI32()
            else:
                iprot.skip(ftype)
        elif (fid == 4):
            if (ftype == TType.MAP):
                self.component_executors = {}
                (_ktype382, _vtype383, _size381) = iprot.readMapBegin()
                for _i385 in xrange(_size381):
                    _key386 = iprot.readString().decode('utf-8')
                    _val387 = iprot.readI32()
                    self.component_executors[_key386] = _val387
                iprot.readMapEnd()
            else:
                iprot.skip(ftype)
        elif (fid == 5):
            if (ftype == TType.I32):
                self.launch_time_secs = iprot.readI32()
            else:
                iprot.skip(ftype)
        elif (fid == 6):
            if (ftype == TType.STRING):
                self.owner = iprot.readString().decode('utf-8')
            else:
                iprot.skip(ftype)
        elif (fid == 7):
            if (ftype == TType.STRUCT):
                self.topology_action_options = TopologyActionOptions()
                self.topology_action_options.read(iprot)
            else:
                iprot.skip(ftype)
        elif (fid == 8):
            if (ftype == TType.I32):
                self.prev_status = iprot.readI32()
            else:
                iprot.skip(ftype)
        elif (fid == 9):
            if (ftype == TType.MAP):
                self.component_debug = {}
                (_ktype389, _vtype390, _size388) = iprot.readMapBegin()
                for _i392 in xrange(_size388):
                    _key393 = iprot.readString().decode('utf-8')
                    _val394 = DebugOptions()
                    _val394.read(iprot)
                    self.component_debug[_key393] = _val394
                iprot.readMapEnd()
            else:
                iprot.skip(ftype)
        else:
            iprot.skip(ftype)
        iprot.readFieldEnd()
    iprot.readStructEnd()
