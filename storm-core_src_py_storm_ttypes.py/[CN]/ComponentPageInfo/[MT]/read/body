def read(self, iprot):
    if ((iprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and isinstance(iprot.trans, TTransport.CReadableTransport) and (self.thrift_spec is not None) and (fastbinary is not None)):
        fastbinary.decode_binary(self, iprot.trans, (self.__class__, self.thrift_spec))
        return
    iprot.readStructBegin()
    while True:
        (fname, ftype, fid) = iprot.readFieldBegin()
        if (ftype == TType.STOP):
            break
        if (fid == 1):
            if (ftype == TType.STRING):
                self.component_id = iprot.readString().decode('utf-8')
            else:
                iprot.skip(ftype)
        elif (fid == 2):
            if (ftype == TType.I32):
                self.component_type = iprot.readI32()
            else:
                iprot.skip(ftype)
        elif (fid == 3):
            if (ftype == TType.STRING):
                self.topology_id = iprot.readString().decode('utf-8')
            else:
                iprot.skip(ftype)
        elif (fid == 4):
            if (ftype == TType.STRING):
                self.topology_name = iprot.readString().decode('utf-8')
            else:
                iprot.skip(ftype)
        elif (fid == 5):
            if (ftype == TType.I32):
                self.num_executors = iprot.readI32()
            else:
                iprot.skip(ftype)
        elif (fid == 6):
            if (ftype == TType.I32):
                self.num_tasks = iprot.readI32()
            else:
                iprot.skip(ftype)
        elif (fid == 7):
            if (ftype == TType.MAP):
                self.window_to_stats = {}
                (_ktype432, _vtype433, _size431) = iprot.readMapBegin()
                for _i435 in xrange(_size431):
                    _key436 = iprot.readString().decode('utf-8')
                    _val437 = ComponentAggregateStats()
                    _val437.read(iprot)
                    self.window_to_stats[_key436] = _val437
                iprot.readMapEnd()
            else:
                iprot.skip(ftype)
        elif (fid == 8):
            if (ftype == TType.MAP):
                self.gsid_to_input_stats = {}
                (_ktype439, _vtype440, _size438) = iprot.readMapBegin()
                for _i442 in xrange(_size438):
                    _key443 = GlobalStreamId()
                    _key443.read(iprot)
                    _val444 = ComponentAggregateStats()
                    _val444.read(iprot)
                    self.gsid_to_input_stats[_key443] = _val444
                iprot.readMapEnd()
            else:
                iprot.skip(ftype)
        elif (fid == 9):
            if (ftype == TType.MAP):
                self.sid_to_output_stats = {}
                (_ktype446, _vtype447, _size445) = iprot.readMapBegin()
                for _i449 in xrange(_size445):
                    _key450 = iprot.readString().decode('utf-8')
                    _val451 = ComponentAggregateStats()
                    _val451.read(iprot)
                    self.sid_to_output_stats[_key450] = _val451
                iprot.readMapEnd()
            else:
                iprot.skip(ftype)
        elif (fid == 10):
            if (ftype == TType.LIST):
                self.exec_stats = []
                (_etype455, _size452) = iprot.readListBegin()
                for _i456 in xrange(_size452):
                    _elem457 = ExecutorAggregateStats()
                    _elem457.read(iprot)
                    self.exec_stats.append(_elem457)
                iprot.readListEnd()
            else:
                iprot.skip(ftype)
        elif (fid == 11):
            if (ftype == TType.LIST):
                self.errors = []
                (_etype461, _size458) = iprot.readListBegin()
                for _i462 in xrange(_size458):
                    _elem463 = ErrorInfo()
                    _elem463.read(iprot)
                    self.errors.append(_elem463)
                iprot.readListEnd()
            else:
                iprot.skip(ftype)
        elif (fid == 12):
            if (ftype == TType.STRING):
                self.eventlog_host = iprot.readString().decode('utf-8')
            else:
                iprot.skip(ftype)
        elif (fid == 13):
            if (ftype == TType.I32):
                self.eventlog_port = iprot.readI32()
            else:
                iprot.skip(ftype)
        elif (fid == 14):
            if (ftype == TType.STRUCT):
                self.debug_options = DebugOptions()
                self.debug_options.read(iprot)
            else:
                iprot.skip(ftype)
        elif (fid == 15):
            if (ftype == TType.STRING):
                self.topology_status = iprot.readString().decode('utf-8')
            else:
                iprot.skip(ftype)
        elif (fid == 16):
            if (ftype == TType.MAP):
                self.resources_map = {}
                (_ktype465, _vtype466, _size464) = iprot.readMapBegin()
                for _i468 in xrange(_size464):
                    _key469 = iprot.readString().decode('utf-8')
                    _val470 = iprot.readDouble()
                    self.resources_map[_key469] = _val470
                iprot.readMapEnd()
            else:
                iprot.skip(ftype)
        else:
            iprot.skip(ftype)
        iprot.readFieldEnd()
    iprot.readStructEnd()
