def read(self, iprot):
    if ((iprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and isinstance(iprot.trans, TTransport.CReadableTransport) and (self.thrift_spec is not None) and (fastbinary is not None)):
        fastbinary.decode_binary(self, iprot.trans, (self.__class__, self.thrift_spec))
        return
    iprot.readStructBegin()
    while True:
        (fname, ftype, fid) = iprot.readFieldBegin()
        if (ftype == TType.STOP):
            break
        if (fid == 1):
            if (ftype == TType.STRING):
                self.component_id = iprot.readString().decode('utf-8')
            else:
                iprot.skip(ftype)
        elif (fid == 2):
            if (ftype == TType.I32):
                self.component_type = iprot.readI32()
            else:
                iprot.skip(ftype)
        elif (fid == 3):
            if (ftype == TType.STRING):
                self.topology_id = iprot.readString().decode('utf-8')
            else:
                iprot.skip(ftype)
        elif (fid == 4):
            if (ftype == TType.STRING):
                self.topology_name = iprot.readString().decode('utf-8')
            else:
                iprot.skip(ftype)
        elif (fid == 5):
            if (ftype == TType.I32):
                self.num_executors = iprot.readI32()
            else:
                iprot.skip(ftype)
        elif (fid == 6):
            if (ftype == TType.I32):
                self.num_tasks = iprot.readI32()
            else:
                iprot.skip(ftype)
        elif (fid == 7):
            if (ftype == TType.MAP):
                self.window_to_stats = {}
                (_ktype363, _vtype364, _size362) = iprot.readMapBegin()
                for _i366 in xrange(_size362):
                    _key367 = iprot.readString().decode('utf-8')
                    _val368 = ComponentAggregateStats()
                    _val368.read(iprot)
                    self.window_to_stats[_key367] = _val368
                iprot.readMapEnd()
            else:
                iprot.skip(ftype)
        elif (fid == 8):
            if (ftype == TType.MAP):
                self.gsid_to_input_stats = {}
                (_ktype370, _vtype371, _size369) = iprot.readMapBegin()
                for _i373 in xrange(_size369):
                    _key374 = GlobalStreamId()
                    _key374.read(iprot)
                    _val375 = ComponentAggregateStats()
                    _val375.read(iprot)
                    self.gsid_to_input_stats[_key374] = _val375
                iprot.readMapEnd()
            else:
                iprot.skip(ftype)
        elif (fid == 9):
            if (ftype == TType.MAP):
                self.sid_to_output_stats = {}
                (_ktype377, _vtype378, _size376) = iprot.readMapBegin()
                for _i380 in xrange(_size376):
                    _key381 = iprot.readString().decode('utf-8')
                    _val382 = ComponentAggregateStats()
                    _val382.read(iprot)
                    self.sid_to_output_stats[_key381] = _val382
                iprot.readMapEnd()
            else:
                iprot.skip(ftype)
        elif (fid == 10):
            if (ftype == TType.LIST):
                self.exec_stats = []
                (_etype386, _size383) = iprot.readListBegin()
                for _i387 in xrange(_size383):
                    _elem388 = ExecutorAggregateStats()
                    _elem388.read(iprot)
                    self.exec_stats.append(_elem388)
                iprot.readListEnd()
            else:
                iprot.skip(ftype)
        elif (fid == 11):
            if (ftype == TType.LIST):
                self.errors = []
                (_etype392, _size389) = iprot.readListBegin()
                for _i393 in xrange(_size389):
                    _elem394 = ErrorInfo()
                    _elem394.read(iprot)
                    self.errors.append(_elem394)
                iprot.readListEnd()
            else:
                iprot.skip(ftype)
        elif (fid == 12):
            if (ftype == TType.STRING):
                self.eventlog_host = iprot.readString().decode('utf-8')
            else:
                iprot.skip(ftype)
        elif (fid == 13):
            if (ftype == TType.I32):
                self.eventlog_port = iprot.readI32()
            else:
                iprot.skip(ftype)
        elif (fid == 14):
            if (ftype == TType.STRUCT):
                self.debug_options = DebugOptions()
                self.debug_options.read(iprot)
            else:
                iprot.skip(ftype)
        elif (fid == 15):
            if (ftype == TType.STRING):
                self.topology_status = iprot.readString().decode('utf-8')
            else:
                iprot.skip(ftype)
        else:
            iprot.skip(ftype)
        iprot.readFieldEnd()
    iprot.readStructEnd()
