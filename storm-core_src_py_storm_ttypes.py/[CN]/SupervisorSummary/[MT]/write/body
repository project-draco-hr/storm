def write(self, oprot):
    if ((oprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and (self.thrift_spec is not None) and (fastbinary is not None)):
        oprot.trans.write(fastbinary.encode_binary(self, (self.__class__, self.thrift_spec)))
        return
    oprot.writeStructBegin('SupervisorSummary')
    if (self.host is not None):
        oprot.writeFieldBegin('host', TType.STRING, 1)
        oprot.writeString(self.host.encode('utf-8'))
        oprot.writeFieldEnd()
    if (self.uptime_secs is not None):
        oprot.writeFieldBegin('uptime_secs', TType.I32, 2)
        oprot.writeI32(self.uptime_secs)
        oprot.writeFieldEnd()
    if (self.num_workers is not None):
        oprot.writeFieldBegin('num_workers', TType.I32, 3)
        oprot.writeI32(self.num_workers)
        oprot.writeFieldEnd()
    if (self.num_used_workers is not None):
        oprot.writeFieldBegin('num_used_workers', TType.I32, 4)
        oprot.writeI32(self.num_used_workers)
        oprot.writeFieldEnd()
    if (self.supervisor_id is not None):
        oprot.writeFieldBegin('supervisor_id', TType.STRING, 5)
        oprot.writeString(self.supervisor_id.encode('utf-8'))
        oprot.writeFieldEnd()
    if (self.version is not None):
        oprot.writeFieldBegin('version', TType.STRING, 6)
        oprot.writeString(self.version.encode('utf-8'))
        oprot.writeFieldEnd()
    if (self.total_resources is not None):
        oprot.writeFieldBegin('total_resources', TType.MAP, 7)
        oprot.writeMapBegin(TType.STRING, TType.DOUBLE, len(self.total_resources))
        for (kiter73, viter74) in self.total_resources.items():
            oprot.writeString(kiter73.encode('utf-8'))
            oprot.writeDouble(viter74)
        oprot.writeMapEnd()
        oprot.writeFieldEnd()
    if (self.used_mem is not None):
        oprot.writeFieldBegin('used_mem', TType.DOUBLE, 8)
        oprot.writeDouble(self.used_mem)
        oprot.writeFieldEnd()
    if (self.used_cpu is not None):
        oprot.writeFieldBegin('used_cpu', TType.DOUBLE, 9)
        oprot.writeDouble(self.used_cpu)
        oprot.writeFieldEnd()
    oprot.writeFieldStop()
    oprot.writeStructEnd()
