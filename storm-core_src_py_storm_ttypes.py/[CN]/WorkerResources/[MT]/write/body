def write(self, oprot):
    if ((oprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and (self.thrift_spec is not None) and (fastbinary is not None)):
        oprot.trans.write(fastbinary.encode_binary(self, (self.__class__, self.thrift_spec)))
        return
    oprot.writeStructBegin('WorkerResources')
    if (self.mem_on_heap is not None):
        oprot.writeFieldBegin('mem_on_heap', TType.DOUBLE, 1)
        oprot.writeDouble(self.mem_on_heap)
        oprot.writeFieldEnd()
    if (self.mem_off_heap is not None):
        oprot.writeFieldBegin('mem_off_heap', TType.DOUBLE, 2)
        oprot.writeDouble(self.mem_off_heap)
        oprot.writeFieldEnd()
    if (self.cpu is not None):
        oprot.writeFieldBegin('cpu', TType.DOUBLE, 3)
        oprot.writeDouble(self.cpu)
        oprot.writeFieldEnd()
    oprot.writeFieldStop()
    oprot.writeStructEnd()
