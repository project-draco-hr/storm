def write(self, oprot):
    if ((oprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and (self.thrift_spec is not None) and (fastbinary is not None)):
        oprot.trans.write(fastbinary.encode_binary(self, (self.__class__, self.thrift_spec)))
        return
    oprot.writeStructBegin('ListBlobsResult')
    if (self.keys is not None):
        oprot.writeFieldBegin('keys', TType.LIST, 1)
        oprot.writeListBegin(TType.STRING, len(self.keys))
        for iter494 in self.keys:
            oprot.writeString(iter494.encode('utf-8'))
        oprot.writeListEnd()
        oprot.writeFieldEnd()
    if (self.session is not None):
        oprot.writeFieldBegin('session', TType.STRING, 2)
        oprot.writeString(self.session.encode('utf-8'))
        oprot.writeFieldEnd()
    oprot.writeFieldStop()
    oprot.writeStructEnd()
