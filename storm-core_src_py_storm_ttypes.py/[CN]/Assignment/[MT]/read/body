def read(self, iprot):
    if ((iprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and isinstance(iprot.trans, TTransport.CReadableTransport) and (self.thrift_spec is not None) and (fastbinary is not None)):
        fastbinary.decode_binary(self, iprot.trans, (self.__class__, self.thrift_spec))
        return
    iprot.readStructBegin()
    while True:
        (fname, ftype, fid) = iprot.readFieldBegin()
        if (ftype == TType.STOP):
            break
        if (fid == 1):
            if (ftype == TType.STRING):
                self.master_code_dir = iprot.readString().decode('utf-8')
            else:
                iprot.skip(ftype)
        elif (fid == 2):
            if (ftype == TType.MAP):
                self.node_host = {}
                (_ktype477, _vtype478, _size476) = iprot.readMapBegin()
                for _i480 in xrange(_size476):
                    _key481 = iprot.readString().decode('utf-8')
                    _val482 = iprot.readString().decode('utf-8')
                    self.node_host[_key481] = _val482
                iprot.readMapEnd()
            else:
                iprot.skip(ftype)
        elif (fid == 3):
            if (ftype == TType.MAP):
                self.executor_node_port = {}
                (_ktype484, _vtype485, _size483) = iprot.readMapBegin()
                for _i487 in xrange(_size483):
                    _key488 = []
                    (_etype493, _size490) = iprot.readListBegin()
                    for _i494 in xrange(_size490):
                        _elem495 = iprot.readI64()
                        _key488.append(_elem495)
                    iprot.readListEnd()
                    _val489 = NodeInfo()
                    _val489.read(iprot)
                    self.executor_node_port[_key488] = _val489
                iprot.readMapEnd()
            else:
                iprot.skip(ftype)
        elif (fid == 4):
            if (ftype == TType.MAP):
                self.executor_start_time_secs = {}
                (_ktype497, _vtype498, _size496) = iprot.readMapBegin()
                for _i500 in xrange(_size496):
                    _key501 = []
                    (_etype506, _size503) = iprot.readListBegin()
                    for _i507 in xrange(_size503):
                        _elem508 = iprot.readI64()
                        _key501.append(_elem508)
                    iprot.readListEnd()
                    _val502 = iprot.readI64()
                    self.executor_start_time_secs[_key501] = _val502
                iprot.readMapEnd()
            else:
                iprot.skip(ftype)
        elif (fid == 5):
            if (ftype == TType.MAP):
                self.worker_resources = {}
                (_ktype510, _vtype511, _size509) = iprot.readMapBegin()
                for _i513 in xrange(_size509):
                    _key514 = NodeInfo()
                    _key514.read(iprot)
                    _val515 = WorkerResources()
                    _val515.read(iprot)
                    self.worker_resources[_key514] = _val515
                iprot.readMapEnd()
            else:
                iprot.skip(ftype)
        else:
            iprot.skip(ftype)
        iprot.readFieldEnd()
    iprot.readStructEnd()
