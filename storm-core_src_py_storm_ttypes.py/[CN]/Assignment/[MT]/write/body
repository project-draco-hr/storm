def write(self, oprot):
    if ((oprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and (self.thrift_spec is not None) and (fastbinary is not None)):
        oprot.trans.write(fastbinary.encode_binary(self, (self.__class__, self.thrift_spec)))
        return
    oprot.writeStructBegin('Assignment')
    if (self.master_code_dir is not None):
        oprot.writeFieldBegin('master_code_dir', TType.STRING, 1)
        oprot.writeString(self.master_code_dir.encode('utf-8'))
        oprot.writeFieldEnd()
    if (self.node_host is not None):
        oprot.writeFieldBegin('node_host', TType.MAP, 2)
        oprot.writeMapBegin(TType.STRING, TType.STRING, len(self.node_host))
        for (kiter560, viter561) in self.node_host.items():
            oprot.writeString(kiter560.encode('utf-8'))
            oprot.writeString(viter561.encode('utf-8'))
        oprot.writeMapEnd()
        oprot.writeFieldEnd()
    if (self.executor_node_port is not None):
        oprot.writeFieldBegin('executor_node_port', TType.MAP, 3)
        oprot.writeMapBegin(TType.LIST, TType.STRUCT, len(self.executor_node_port))
        for (kiter562, viter563) in self.executor_node_port.items():
            oprot.writeListBegin(TType.I64, len(kiter562))
            for iter564 in kiter562:
                oprot.writeI64(iter564)
            oprot.writeListEnd()
            viter563.write(oprot)
        oprot.writeMapEnd()
        oprot.writeFieldEnd()
    if (self.executor_start_time_secs is not None):
        oprot.writeFieldBegin('executor_start_time_secs', TType.MAP, 4)
        oprot.writeMapBegin(TType.LIST, TType.I64, len(self.executor_start_time_secs))
        for (kiter565, viter566) in self.executor_start_time_secs.items():
            oprot.writeListBegin(TType.I64, len(kiter565))
            for iter567 in kiter565:
                oprot.writeI64(iter567)
            oprot.writeListEnd()
            oprot.writeI64(viter566)
        oprot.writeMapEnd()
        oprot.writeFieldEnd()
    if (self.worker_resources is not None):
        oprot.writeFieldBegin('worker_resources', TType.MAP, 5)
        oprot.writeMapBegin(TType.STRUCT, TType.STRUCT, len(self.worker_resources))
        for (kiter568, viter569) in self.worker_resources.items():
            kiter568.write(oprot)
            viter569.write(oprot)
        oprot.writeMapEnd()
        oprot.writeFieldEnd()
    oprot.writeFieldStop()
    oprot.writeStructEnd()
