def write(self, oprot):
    if ((oprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and (self.thrift_spec is not None) and (fastbinary is not None)):
        oprot.trans.write(fastbinary.encode_binary(self, (self.__class__, self.thrift_spec)))
        return
    oprot.writeStructBegin('NodeInfo')
    if (self.node is not None):
        oprot.writeFieldBegin('node', TType.STRING, 1)
        oprot.writeString(self.node.encode('utf-8'))
        oprot.writeFieldEnd()
    if (self.port is not None):
        oprot.writeFieldBegin('port', TType.SET, 2)
        oprot.writeSetBegin(TType.I64, len(self.port))
        for iter450 in self.port:
            oprot.writeI64(iter450)
        oprot.writeSetEnd()
        oprot.writeFieldEnd()
    oprot.writeFieldStop()
    oprot.writeStructEnd()
