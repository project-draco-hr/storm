def write(self, oprot):
    if ((oprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and (self.thrift_spec is not None) and (fastbinary is not None)):
        oprot.trans.write(fastbinary.encode_binary(self, (self.__class__, self.thrift_spec)))
        return
    oprot.writeStructBegin('ExecutorStats')
    if (self.emitted is not None):
        oprot.writeFieldBegin('emitted', TType.MAP, 1)
        oprot.writeMapBegin(TType.STRING, TType.MAP, len(self.emitted))
        for (kiter252, viter253) in self.emitted.items():
            oprot.writeString(kiter252.encode('utf-8'))
            oprot.writeMapBegin(TType.STRING, TType.I64, len(viter253))
            for (kiter254, viter255) in viter253.items():
                oprot.writeString(kiter254.encode('utf-8'))
                oprot.writeI64(viter255)
            oprot.writeMapEnd()
        oprot.writeMapEnd()
        oprot.writeFieldEnd()
    if (self.transferred is not None):
        oprot.writeFieldBegin('transferred', TType.MAP, 2)
        oprot.writeMapBegin(TType.STRING, TType.MAP, len(self.transferred))
        for (kiter256, viter257) in self.transferred.items():
            oprot.writeString(kiter256.encode('utf-8'))
            oprot.writeMapBegin(TType.STRING, TType.I64, len(viter257))
            for (kiter258, viter259) in viter257.items():
                oprot.writeString(kiter258.encode('utf-8'))
                oprot.writeI64(viter259)
            oprot.writeMapEnd()
        oprot.writeMapEnd()
        oprot.writeFieldEnd()
    if (self.specific is not None):
        oprot.writeFieldBegin('specific', TType.STRUCT, 3)
        self.specific.write(oprot)
        oprot.writeFieldEnd()
    if (self.rate is not None):
        oprot.writeFieldBegin('rate', TType.DOUBLE, 4)
        oprot.writeDouble(self.rate)
        oprot.writeFieldEnd()
    oprot.writeFieldStop()
    oprot.writeStructEnd()
