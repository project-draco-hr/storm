def read(self, iprot):
    if ((iprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and isinstance(iprot.trans, TTransport.CReadableTransport) and (self.thrift_spec is not None) and (fastbinary is not None)):
        fastbinary.decode_binary(self, iprot.trans, (self.__class__, self.thrift_spec))
        return
    iprot.readStructBegin()
    while True:
        (fname, ftype, fid) = iprot.readFieldBegin()
        if (ftype == TType.STOP):
            break
        if (fid == 1):
            if (ftype == TType.MAP):
                self.emitted = {}
                (_ktype248, _vtype249, _size247) = iprot.readMapBegin()
                for _i251 in xrange(_size247):
                    _key252 = iprot.readString().decode('utf-8')
                    _val253 = {}
                    (_ktype255, _vtype256, _size254) = iprot.readMapBegin()
                    for _i258 in xrange(_size254):
                        _key259 = iprot.readString().decode('utf-8')
                        _val260 = iprot.readI64()
                        _val253[_key259] = _val260
                    iprot.readMapEnd()
                    self.emitted[_key252] = _val253
                iprot.readMapEnd()
            else:
                iprot.skip(ftype)
        elif (fid == 2):
            if (ftype == TType.MAP):
                self.transferred = {}
                (_ktype262, _vtype263, _size261) = iprot.readMapBegin()
                for _i265 in xrange(_size261):
                    _key266 = iprot.readString().decode('utf-8')
                    _val267 = {}
                    (_ktype269, _vtype270, _size268) = iprot.readMapBegin()
                    for _i272 in xrange(_size268):
                        _key273 = iprot.readString().decode('utf-8')
                        _val274 = iprot.readI64()
                        _val267[_key273] = _val274
                    iprot.readMapEnd()
                    self.transferred[_key266] = _val267
                iprot.readMapEnd()
            else:
                iprot.skip(ftype)
        elif (fid == 3):
            if (ftype == TType.STRUCT):
                self.specific = ExecutorSpecificStats()
                self.specific.read(iprot)
            else:
                iprot.skip(ftype)
        elif (fid == 4):
            if (ftype == TType.DOUBLE):
                self.rate = iprot.readDouble()
            else:
                iprot.skip(ftype)
        else:
            iprot.skip(ftype)
        iprot.readFieldEnd()
    iprot.readStructEnd()
