def read(self, iprot):
    if ((iprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and isinstance(iprot.trans, TTransport.CReadableTransport) and (self.thrift_spec is not None) and (fastbinary is not None)):
        fastbinary.decode_binary(self, iprot.trans, (self.__class__, self.thrift_spec))
        return
    iprot.readStructBegin()
    while True:
        (fname, ftype, fid) = iprot.readFieldBegin()
        if (ftype == TType.STOP):
            break
        if (fid == 1):
            if (ftype == TType.MAP):
                self.emitted = {}
                (_ktype232, _vtype233, _size231) = iprot.readMapBegin()
                for _i235 in xrange(_size231):
                    _key236 = iprot.readString().decode('utf-8')
                    _val237 = {}
                    (_ktype239, _vtype240, _size238) = iprot.readMapBegin()
                    for _i242 in xrange(_size238):
                        _key243 = iprot.readString().decode('utf-8')
                        _val244 = iprot.readI64()
                        _val237[_key243] = _val244
                    iprot.readMapEnd()
                    self.emitted[_key236] = _val237
                iprot.readMapEnd()
            else:
                iprot.skip(ftype)
        elif (fid == 2):
            if (ftype == TType.MAP):
                self.transferred = {}
                (_ktype246, _vtype247, _size245) = iprot.readMapBegin()
                for _i249 in xrange(_size245):
                    _key250 = iprot.readString().decode('utf-8')
                    _val251 = {}
                    (_ktype253, _vtype254, _size252) = iprot.readMapBegin()
                    for _i256 in xrange(_size252):
                        _key257 = iprot.readString().decode('utf-8')
                        _val258 = iprot.readI64()
                        _val251[_key257] = _val258
                    iprot.readMapEnd()
                    self.transferred[_key250] = _val251
                iprot.readMapEnd()
            else:
                iprot.skip(ftype)
        elif (fid == 3):
            if (ftype == TType.STRUCT):
                self.specific = ExecutorSpecificStats()
                self.specific.read(iprot)
            else:
                iprot.skip(ftype)
        elif (fid == 4):
            if (ftype == TType.DOUBLE):
                self.rate = iprot.readDouble()
            else:
                iprot.skip(ftype)
        else:
            iprot.skip(ftype)
        iprot.readFieldEnd()
    iprot.readStructEnd()
