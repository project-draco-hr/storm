def write(self, oprot):
    if ((oprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and (self.thrift_spec is not None) and (fastbinary is not None)):
        oprot.trans.write(fastbinary.encode_binary(self, (self.__class__, self.thrift_spec)))
        return
    oprot.writeStructBegin('BeginDownloadResult')
    if (self.version is not None):
        oprot.writeFieldBegin('version', TType.I64, 1)
        oprot.writeI64(self.version)
        oprot.writeFieldEnd()
    if (self.session is not None):
        oprot.writeFieldBegin('session', TType.STRING, 2)
        oprot.writeString(self.session.encode('utf-8'))
        oprot.writeFieldEnd()
    if (self.data_size is not None):
        oprot.writeFieldBegin('data_size', TType.I64, 3)
        oprot.writeI64(self.data_size)
        oprot.writeFieldEnd()
    oprot.writeFieldStop()
    oprot.writeStructEnd()
