def write(self, oprot):
    if ((oprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and (self.thrift_spec is not None) and (fastbinary is not None)):
        oprot.trans.write(fastbinary.encode_binary(self, (self.__class__, self.thrift_spec)))
        return
    oprot.writeStructBegin('LocalStateData')
    if (self.serialized_parts is not None):
        oprot.writeFieldBegin('serialized_parts', TType.MAP, 1)
        oprot.writeMapBegin(TType.STRING, TType.STRUCT, len(self.serialized_parts))
        for (kiter604, viter605) in self.serialized_parts.items():
            oprot.writeString(kiter604.encode('utf-8'))
            viter605.write(oprot)
        oprot.writeMapEnd()
        oprot.writeFieldEnd()
    oprot.writeFieldStop()
    oprot.writeStructEnd()
