{
  Map conf=(Map)workerData.get(Constants.CONF);
  return new TopologyContext(topology,(Map)workerData.get(Constants.STORM_CONF),(Map<Integer,String>)workerData.get(Constants.TASK_TO_COMPONENT),(Map<String,List<Integer>>)workerData.get(Constants.COMPONENT_TO_SORTED_TASKS),(Map<String,Map<String,Fields>>)workerData.get(Constants.COMPONENT_TO_STREAM_TO_FIELDS),(String)workerData.get(Constants.STORM_ID),ConfigUtils.supervisorStormResourcesPath(ConfigUtils.supervisorStormDistRoot(conf,(String)workerData.get(Constants.STORM_ID))),ConfigUtils.workerPidsRoot(conf,(String)workerData.get(Constants.WORKER_ID)),taskId,(Integer)workerData.get(Constants.PORT),(List<Integer>)workerData.get(Constants.TASK_IDS),(Map<String,Object>)workerData.get(Constants.DEFAULT_SHARED_RESOURCES),(Map<String,Object>)workerData.get(Constants.USER_SHARED_RESOURCES),executor.getSharedExecutorData(),executor.getIntervalToTaskToMetricToRegistry(),executor.getOpenOrPrepareWasCalled());
}
