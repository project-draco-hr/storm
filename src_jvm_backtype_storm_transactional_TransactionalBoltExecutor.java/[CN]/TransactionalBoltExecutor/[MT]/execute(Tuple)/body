{
  TransactionAttempt attempt=(TransactionAttempt)input.getValue(0);
  String stream=input.getSourceStreamId();
  OpenTransaction tx=_openTransactions.get(attempt);
  if (stream.equals(TransactionalSpoutCoordinator.TRANSACTION_COMMIT_STREAM_ID)) {
    if (tx != null && tx.finished) {
      try {
        ((ICommittable)tx.bolt).commit();
        _collector.ack(input);
      }
 catch (      FailedTransactionException e) {
        LOG.warn("Failed to commit transaction",e);
        _collector.fail(input);
      }
      _openTransactions.remove(attempt);
    }
 else {
      LOG.info("Failing transaction attempt: " + attempt + " with state "+ tx);
      _collector.fail(input);
    }
  }
 else {
    if (tx == null) {
      tx=new OpenTransaction();
      tx.bolt.prepare(_conf,_context,_collector,attempt);
      _openTransactions.put(attempt,tx);
    }
    try {
      if (!stream.equals(TransactionalSpoutCoordinator.TRANSACTION_BATCH_STREAM_ID)) {
        tx.bolt.execute(input);
      }
      _collector.ack(input);
    }
 catch (    FailedTransactionException e) {
      LOG.warn("Failed to process tuple in transaction",e);
      _collector.fail(input);
    }
  }
}
