{
  try {
    String stormroot=ConfigUtils.supervisorStormDistRoot(_conf,_topologyId);
    Map<String,Object> stormConf=ConfigUtils.readSupervisorStormConf(_conf,_topologyId);
    @SuppressWarnings("unchecked") Map<String,Map<String,Object>> blobstoreMap=(Map<String,Map<String,Object>>)stormConf.get(Config.TOPOLOGY_BLOBSTORE_MAP);
    String user=(String)stormConf.get(Config.TOPOLOGY_SUBMITTER_USER);
    String topoName=(String)stormConf.get(Config.TOPOLOGY_NAME);
    List<LocalResource> localResourceList=new ArrayList<>();
    if (blobstoreMap != null) {
      List<LocalResource> tmp=SupervisorUtils.blobstoreMapToLocalresources(blobstoreMap);
      if (tmp != null) {
        localResourceList.addAll(tmp);
      }
    }
    StormTopology stormCode=ConfigUtils.readSupervisorTopology(_conf,_topologyId,_fsOps);
    List<String> dependencies=new ArrayList<>();
    if (stormCode.is_set_dependency_jars()) {
      dependencies.addAll(stormCode.get_dependency_jars());
    }
    if (stormCode.is_set_dependency_artifacts()) {
      dependencies.addAll(stormCode.get_dependency_artifacts());
    }
    for (    String dependency : dependencies) {
      localResourceList.add(new LocalResource(dependency,false));
    }
    if (!localResourceList.isEmpty()) {
      File userDir=_localizer.getLocalUserFileCacheDir(user);
      if (!_fsOps.fileExists(userDir)) {
        _fsOps.forceMkdir(userDir);
      }
      List<LocalizedResource> localizedResources=_localizer.getBlobs(localResourceList,user,topoName,userDir);
      _fsOps.setupBlobPermissions(userDir,user);
      for (      LocalizedResource localizedResource : localizedResources) {
        String keyName=localizedResource.getKey();
        File rsrcFilePath=new File(localizedResource.getCurrentSymlinkPath());
        String symlinkName=null;
        if (blobstoreMap != null) {
          Map<String,Object> blobInfo=blobstoreMap.get(keyName);
          if (blobInfo != null && blobInfo.containsKey("localname")) {
            symlinkName=(String)blobInfo.get("localname");
          }
 else {
            symlinkName=keyName;
          }
        }
 else {
          symlinkName=keyName;
        }
        _fsOps.createSymlink(new File(stormroot,symlinkName),rsrcFilePath);
      }
    }
    return null;
  }
 catch (  Exception e) {
    LOG.warn("Caught Exception While Downloading (rethrowing)... ",e);
    throw e;
  }
}
