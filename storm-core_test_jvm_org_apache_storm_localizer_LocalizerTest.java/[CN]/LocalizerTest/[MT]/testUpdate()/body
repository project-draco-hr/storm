{
  Map conf=new HashMap();
  conf.put(Config.SUPERVISOR_LOCALIZER_CACHE_CLEANUP_INTERVAL_MS,60 * 60 * 1000);
  String key1="key1";
  String topo1="topo1";
  String topo2="topo2";
  Localizer localizer=new TestLocalizer(conf,baseDir.toString());
  ReadableBlobMeta rbm=new ReadableBlobMeta();
  rbm.set_version(1);
  rbm.set_settable(new SettableBlobMeta(BlobStoreAclHandler.WORLD_EVERYTHING));
  when(mockblobstore.getBlobMeta(key1)).thenReturn(rbm);
  when(mockblobstore.getBlob(key1)).thenReturn(new TestInputStreamWithMeta());
  File user1Dir=localizer.getLocalUserFileCacheDir(user1);
  assertTrue("failed to create user dir",user1Dir.mkdirs());
  LocalizedResource lrsrc=localizer.getBlob(new LocalResource(key1,false),user1,topo1,user1Dir);
  String expectedUserDir=joinPath(baseDir.toString(),Localizer.USERCACHE,user1);
  String expectedFileDir=joinPath(expectedUserDir,Localizer.FILECACHE,Localizer.FILESDIR);
  assertTrue("user filecache dir not created",new File(expectedFileDir).exists());
  File keyFile=new File(expectedFileDir,key1);
  File keyFileCurrentSymlink=new File(expectedFileDir,key1 + Utils.DEFAULT_CURRENT_BLOB_SUFFIX);
  assertTrue("blob not created",keyFileCurrentSymlink.exists());
  File versionFile=new File(expectedFileDir,key1 + Utils.DEFAULT_BLOB_VERSION_SUFFIX);
  assertTrue("blob version file not created",versionFile.exists());
  assertEquals("blob version not correct",1,Utils.localVersionOfBlob(keyFile.toString()));
  LocalizedResourceSet lrsrcSet=localizer.getUserResources().get(user1);
  assertEquals("local resource set size wrong",1,lrsrcSet.getSize());
  rbm.set_version(2);
  localizer.getBlob(new LocalResource(key1,false),user1,topo2,user1Dir);
  assertTrue("blob version file not created",versionFile.exists());
  assertEquals("blob version not correct",2,Utils.localVersionOfBlob(keyFile.toString()));
  assertTrue("blob file with version 2 not created",new File(keyFile + ".2").exists());
  rbm.set_version(3);
  ArrayList<LocalResource> arr=new ArrayList<LocalResource>();
  arr.add(new LocalResource(key1,false));
  localizer.updateBlobs(arr,user1);
  assertTrue("blob version file not created",versionFile.exists());
  assertEquals("blob version not correct",3,Utils.localVersionOfBlob(keyFile.toString()));
  assertTrue("blob file with version 3 not created",new File(keyFile + ".3").exists());
}
