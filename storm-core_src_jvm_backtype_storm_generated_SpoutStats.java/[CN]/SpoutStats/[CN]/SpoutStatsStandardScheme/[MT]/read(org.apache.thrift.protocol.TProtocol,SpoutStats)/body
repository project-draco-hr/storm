{
  org.apache.thrift.protocol.TField schemeField;
  iprot.readStructBegin();
  while (true) {
    schemeField=iprot.readFieldBegin();
    if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
      break;
    }
switch (schemeField.id) {
case 1:
      if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
{
          org.apache.thrift.protocol.TMap _map198=iprot.readMapBegin();
          struct.acked=new HashMap<String,Map<String,Long>>(2 * _map198.size);
          String _key199;
          Map<String,Long> _val200;
          for (int _i201=0; _i201 < _map198.size; ++_i201) {
            _key199=iprot.readString();
{
              org.apache.thrift.protocol.TMap _map202=iprot.readMapBegin();
              _val200=new HashMap<String,Long>(2 * _map202.size);
              String _key203;
              long _val204;
              for (int _i205=0; _i205 < _map202.size; ++_i205) {
                _key203=iprot.readString();
                _val204=iprot.readI64();
                _val200.put(_key203,_val204);
              }
              iprot.readMapEnd();
            }
            struct.acked.put(_key199,_val200);
          }
          iprot.readMapEnd();
        }
        struct.set_acked_isSet(true);
      }
 else {
        org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
      }
    break;
case 2:
  if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
{
      org.apache.thrift.protocol.TMap _map206=iprot.readMapBegin();
      struct.failed=new HashMap<String,Map<String,Long>>(2 * _map206.size);
      String _key207;
      Map<String,Long> _val208;
      for (int _i209=0; _i209 < _map206.size; ++_i209) {
        _key207=iprot.readString();
{
          org.apache.thrift.protocol.TMap _map210=iprot.readMapBegin();
          _val208=new HashMap<String,Long>(2 * _map210.size);
          String _key211;
          long _val212;
          for (int _i213=0; _i213 < _map210.size; ++_i213) {
            _key211=iprot.readString();
            _val212=iprot.readI64();
            _val208.put(_key211,_val212);
          }
          iprot.readMapEnd();
        }
        struct.failed.put(_key207,_val208);
      }
      iprot.readMapEnd();
    }
    struct.set_failed_isSet(true);
  }
 else {
    org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
  }
break;
case 3:
if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
{
  org.apache.thrift.protocol.TMap _map214=iprot.readMapBegin();
  struct.complete_ms_avg=new HashMap<String,Map<String,Double>>(2 * _map214.size);
  String _key215;
  Map<String,Double> _val216;
  for (int _i217=0; _i217 < _map214.size; ++_i217) {
    _key215=iprot.readString();
{
      org.apache.thrift.protocol.TMap _map218=iprot.readMapBegin();
      _val216=new HashMap<String,Double>(2 * _map218.size);
      String _key219;
      double _val220;
      for (int _i221=0; _i221 < _map218.size; ++_i221) {
        _key219=iprot.readString();
        _val220=iprot.readDouble();
        _val216.put(_key219,_val220);
      }
      iprot.readMapEnd();
    }
    struct.complete_ms_avg.put(_key215,_val216);
  }
  iprot.readMapEnd();
}
struct.set_complete_ms_avg_isSet(true);
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
break;
default :
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
struct.validate();
}
