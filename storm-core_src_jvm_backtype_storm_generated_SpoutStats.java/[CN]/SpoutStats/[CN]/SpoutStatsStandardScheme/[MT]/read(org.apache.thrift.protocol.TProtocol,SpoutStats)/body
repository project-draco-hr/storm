{
  org.apache.thrift.protocol.TField schemeField;
  iprot.readStructBegin();
  while (true) {
    schemeField=iprot.readFieldBegin();
    if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
      break;
    }
switch (schemeField.id) {
case 1:
      if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
{
          org.apache.thrift.protocol.TMap _map208=iprot.readMapBegin();
          struct.acked=new HashMap<String,Map<String,Long>>(2 * _map208.size);
          String _key209;
          Map<String,Long> _val210;
          for (int _i211=0; _i211 < _map208.size; ++_i211) {
            _key209=iprot.readString();
{
              org.apache.thrift.protocol.TMap _map212=iprot.readMapBegin();
              _val210=new HashMap<String,Long>(2 * _map212.size);
              String _key213;
              long _val214;
              for (int _i215=0; _i215 < _map212.size; ++_i215) {
                _key213=iprot.readString();
                _val214=iprot.readI64();
                _val210.put(_key213,_val214);
              }
              iprot.readMapEnd();
            }
            struct.acked.put(_key209,_val210);
          }
          iprot.readMapEnd();
        }
        struct.set_acked_isSet(true);
      }
 else {
        org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
      }
    break;
case 2:
  if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
{
      org.apache.thrift.protocol.TMap _map216=iprot.readMapBegin();
      struct.failed=new HashMap<String,Map<String,Long>>(2 * _map216.size);
      String _key217;
      Map<String,Long> _val218;
      for (int _i219=0; _i219 < _map216.size; ++_i219) {
        _key217=iprot.readString();
{
          org.apache.thrift.protocol.TMap _map220=iprot.readMapBegin();
          _val218=new HashMap<String,Long>(2 * _map220.size);
          String _key221;
          long _val222;
          for (int _i223=0; _i223 < _map220.size; ++_i223) {
            _key221=iprot.readString();
            _val222=iprot.readI64();
            _val218.put(_key221,_val222);
          }
          iprot.readMapEnd();
        }
        struct.failed.put(_key217,_val218);
      }
      iprot.readMapEnd();
    }
    struct.set_failed_isSet(true);
  }
 else {
    org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
  }
break;
case 3:
if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
{
  org.apache.thrift.protocol.TMap _map224=iprot.readMapBegin();
  struct.complete_ms_avg=new HashMap<String,Map<String,Double>>(2 * _map224.size);
  String _key225;
  Map<String,Double> _val226;
  for (int _i227=0; _i227 < _map224.size; ++_i227) {
    _key225=iprot.readString();
{
      org.apache.thrift.protocol.TMap _map228=iprot.readMapBegin();
      _val226=new HashMap<String,Double>(2 * _map228.size);
      String _key229;
      double _val230;
      for (int _i231=0; _i231 < _map228.size; ++_i231) {
        _key229=iprot.readString();
        _val230=iprot.readDouble();
        _val226.put(_key229,_val230);
      }
      iprot.readMapEnd();
    }
    struct.complete_ms_avg.put(_key225,_val226);
  }
  iprot.readMapEnd();
}
struct.set_complete_ms_avg_isSet(true);
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
break;
default :
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
struct.validate();
}
