{
  org.apache.thrift7.protocol.TField field;
  iprot.readStructBegin();
  while (true) {
    field=iprot.readFieldBegin();
    if (field.type == org.apache.thrift7.protocol.TType.STOP) {
      break;
    }
switch (field.id) {
case 1:
      if (field.type == org.apache.thrift7.protocol.TType.MAP) {
{
          org.apache.thrift7.protocol.TMap _map18=iprot.readMapBegin();
          this.spouts=new HashMap<Integer,SpoutSpec>(2 * _map18.size);
          for (int _i19=0; _i19 < _map18.size; ++_i19) {
            int _key20;
            SpoutSpec _val21;
            _key20=iprot.readI32();
            _val21=new SpoutSpec();
            _val21.read(iprot);
            this.spouts.put(_key20,_val21);
          }
          iprot.readMapEnd();
        }
      }
 else {
        org.apache.thrift7.protocol.TProtocolUtil.skip(iprot,field.type);
      }
    break;
case 2:
  if (field.type == org.apache.thrift7.protocol.TType.MAP) {
{
      org.apache.thrift7.protocol.TMap _map22=iprot.readMapBegin();
      this.bolts=new HashMap<Integer,Bolt>(2 * _map22.size);
      for (int _i23=0; _i23 < _map22.size; ++_i23) {
        int _key24;
        Bolt _val25;
        _key24=iprot.readI32();
        _val25=new Bolt();
        _val25.read(iprot);
        this.bolts.put(_key24,_val25);
      }
      iprot.readMapEnd();
    }
  }
 else {
    org.apache.thrift7.protocol.TProtocolUtil.skip(iprot,field.type);
  }
break;
case 3:
if (field.type == org.apache.thrift7.protocol.TType.MAP) {
{
  org.apache.thrift7.protocol.TMap _map26=iprot.readMapBegin();
  this.state_spouts=new HashMap<Integer,StateSpoutSpec>(2 * _map26.size);
  for (int _i27=0; _i27 < _map26.size; ++_i27) {
    int _key28;
    StateSpoutSpec _val29;
    _key28=iprot.readI32();
    _val29=new StateSpoutSpec();
    _val29.read(iprot);
    this.state_spouts.put(_key28,_val29);
  }
  iprot.readMapEnd();
}
}
 else {
org.apache.thrift7.protocol.TProtocolUtil.skip(iprot,field.type);
}
break;
default :
org.apache.thrift7.protocol.TProtocolUtil.skip(iprot,field.type);
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
validate();
}
