{
  this.collector=collector;
  final Configuration hbConfig=HBaseConfiguration.create();
  Map<String,Object> conf=(Map<String,Object>)map.get(this.configKey);
  if (conf == null) {
    throw new IllegalArgumentException("HBase configuration not found using key '" + this.configKey + "'");
  }
  if (conf.get("hbase.rootdir") == null) {
    LOG.warn("No 'hbase.rootdir' value found in configuration! Using HBase defaults.");
  }
  for (  String key : conf.keySet()) {
    hbConfig.set(key,String.valueOf(conf.get(key)));
  }
  try {
    UserProvider provider=HBaseSecurityUtil.login(map,hbConfig);
    this.table=provider.getCurrent().getUGI().doAs(new PrivilegedExceptionAction<HTable>(){
      @Override public HTable run() throws IOException {
        return new HTable(hbConfig,tableName);
      }
    }
);
  }
 catch (  Exception e) {
    throw new RuntimeException("HBase bolt preparation failed: " + e.getMessage(),e);
  }
}
