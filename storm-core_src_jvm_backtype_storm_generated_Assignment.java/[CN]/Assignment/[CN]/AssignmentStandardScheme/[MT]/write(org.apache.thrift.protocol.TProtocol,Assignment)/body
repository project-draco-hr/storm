{
  struct.validate();
  oprot.writeStructBegin(STRUCT_DESC);
  if (struct.master_code_dir != null) {
    oprot.writeFieldBegin(MASTER_CODE_DIR_FIELD_DESC);
    oprot.writeString(struct.master_code_dir);
    oprot.writeFieldEnd();
  }
  if (struct.node_host != null) {
    if (struct.is_set_node_host()) {
      oprot.writeFieldBegin(NODE_HOST_FIELD_DESC);
{
        oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.STRING,struct.node_host.size()));
        for (        Map.Entry<String,String> _iter554 : struct.node_host.entrySet()) {
          oprot.writeString(_iter554.getKey());
          oprot.writeString(_iter554.getValue());
        }
        oprot.writeMapEnd();
      }
      oprot.writeFieldEnd();
    }
  }
  if (struct.executor_node_port != null) {
    if (struct.is_set_executor_node_port()) {
      oprot.writeFieldBegin(EXECUTOR_NODE_PORT_FIELD_DESC);
{
        oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.LIST,org.apache.thrift.protocol.TType.STRUCT,struct.executor_node_port.size()));
        for (        Map.Entry<List<Long>,NodeInfo> _iter555 : struct.executor_node_port.entrySet()) {
{
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I64,_iter555.getKey().size()));
            for (            long _iter556 : _iter555.getKey()) {
              oprot.writeI64(_iter556);
            }
            oprot.writeListEnd();
          }
          _iter555.getValue().write(oprot);
        }
        oprot.writeMapEnd();
      }
      oprot.writeFieldEnd();
    }
  }
  if (struct.executor_start_time_secs != null) {
    if (struct.is_set_executor_start_time_secs()) {
      oprot.writeFieldBegin(EXECUTOR_START_TIME_SECS_FIELD_DESC);
{
        oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.LIST,org.apache.thrift.protocol.TType.I64,struct.executor_start_time_secs.size()));
        for (        Map.Entry<List<Long>,Long> _iter557 : struct.executor_start_time_secs.entrySet()) {
{
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I64,_iter557.getKey().size()));
            for (            long _iter558 : _iter557.getKey()) {
              oprot.writeI64(_iter558);
            }
            oprot.writeListEnd();
          }
          oprot.writeI64(_iter557.getValue());
        }
        oprot.writeMapEnd();
      }
      oprot.writeFieldEnd();
    }
  }
  if (struct.worker_resources != null) {
    if (struct.is_set_worker_resources()) {
      oprot.writeFieldBegin(WORKER_RESOURCES_FIELD_DESC);
{
        oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRUCT,org.apache.thrift.protocol.TType.STRUCT,struct.worker_resources.size()));
        for (        Map.Entry<NodeInfo,WorkerResources> _iter559 : struct.worker_resources.entrySet()) {
          _iter559.getKey().write(oprot);
          _iter559.getValue().write(oprot);
        }
        oprot.writeMapEnd();
      }
      oprot.writeFieldEnd();
    }
  }
  oprot.writeFieldStop();
  oprot.writeStructEnd();
}
