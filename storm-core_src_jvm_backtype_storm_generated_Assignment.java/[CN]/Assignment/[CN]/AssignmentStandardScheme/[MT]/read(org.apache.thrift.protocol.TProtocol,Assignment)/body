{
  org.apache.thrift.protocol.TField schemeField;
  iprot.readStructBegin();
  while (true) {
    schemeField=iprot.readFieldBegin();
    if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
      break;
    }
switch (schemeField.id) {
case 1:
      if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
        struct.master_code_dir=iprot.readString();
        struct.set_master_code_dir_isSet(true);
      }
 else {
        org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
      }
    break;
case 2:
  if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
{
      org.apache.thrift.protocol.TMap _map486=iprot.readMapBegin();
      struct.node_host=new HashMap<String,String>(2 * _map486.size);
      String _key487;
      String _val488;
      for (int _i489=0; _i489 < _map486.size; ++_i489) {
        _key487=iprot.readString();
        _val488=iprot.readString();
        struct.node_host.put(_key487,_val488);
      }
      iprot.readMapEnd();
    }
    struct.set_node_host_isSet(true);
  }
 else {
    org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
  }
break;
case 3:
if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
{
  org.apache.thrift.protocol.TMap _map490=iprot.readMapBegin();
  struct.executor_node_port=new HashMap<List<Long>,NodeInfo>(2 * _map490.size);
  List<Long> _key491;
  NodeInfo _val492;
  for (int _i493=0; _i493 < _map490.size; ++_i493) {
{
      org.apache.thrift.protocol.TList _list494=iprot.readListBegin();
      _key491=new ArrayList<Long>(_list494.size);
      long _elem495;
      for (int _i496=0; _i496 < _list494.size; ++_i496) {
        _elem495=iprot.readI64();
        _key491.add(_elem495);
      }
      iprot.readListEnd();
    }
    _val492=new NodeInfo();
    _val492.read(iprot);
    struct.executor_node_port.put(_key491,_val492);
  }
  iprot.readMapEnd();
}
struct.set_executor_node_port_isSet(true);
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
break;
case 4:
if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
{
org.apache.thrift.protocol.TMap _map497=iprot.readMapBegin();
struct.executor_start_time_secs=new HashMap<List<Long>,Long>(2 * _map497.size);
List<Long> _key498;
long _val499;
for (int _i500=0; _i500 < _map497.size; ++_i500) {
{
  org.apache.thrift.protocol.TList _list501=iprot.readListBegin();
  _key498=new ArrayList<Long>(_list501.size);
  long _elem502;
  for (int _i503=0; _i503 < _list501.size; ++_i503) {
    _elem502=iprot.readI64();
    _key498.add(_elem502);
  }
  iprot.readListEnd();
}
_val499=iprot.readI64();
struct.executor_start_time_secs.put(_key498,_val499);
}
iprot.readMapEnd();
}
struct.set_executor_start_time_secs_isSet(true);
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
break;
default :
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
struct.validate();
}
