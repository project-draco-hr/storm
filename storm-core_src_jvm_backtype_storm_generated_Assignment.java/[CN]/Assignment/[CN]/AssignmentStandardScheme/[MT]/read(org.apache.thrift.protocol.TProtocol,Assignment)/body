{
  org.apache.thrift.protocol.TField schemeField;
  iprot.readStructBegin();
  while (true) {
    schemeField=iprot.readFieldBegin();
    if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
      break;
    }
switch (schemeField.id) {
case 1:
      if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
        struct.master_code_dir=iprot.readString();
        struct.set_master_code_dir_isSet(true);
      }
 else {
        org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
      }
    break;
case 2:
  if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
{
      org.apache.thrift.protocol.TMap _map504=iprot.readMapBegin();
      struct.node_host=new HashMap<String,String>(2 * _map504.size);
      String _key505;
      String _val506;
      for (int _i507=0; _i507 < _map504.size; ++_i507) {
        _key505=iprot.readString();
        _val506=iprot.readString();
        struct.node_host.put(_key505,_val506);
      }
      iprot.readMapEnd();
    }
    struct.set_node_host_isSet(true);
  }
 else {
    org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
  }
break;
case 3:
if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
{
  org.apache.thrift.protocol.TMap _map508=iprot.readMapBegin();
  struct.executor_node_port=new HashMap<List<Long>,NodeInfo>(2 * _map508.size);
  List<Long> _key509;
  NodeInfo _val510;
  for (int _i511=0; _i511 < _map508.size; ++_i511) {
{
      org.apache.thrift.protocol.TList _list512=iprot.readListBegin();
      _key509=new ArrayList<Long>(_list512.size);
      long _elem513;
      for (int _i514=0; _i514 < _list512.size; ++_i514) {
        _elem513=iprot.readI64();
        _key509.add(_elem513);
      }
      iprot.readListEnd();
    }
    _val510=new NodeInfo();
    _val510.read(iprot);
    struct.executor_node_port.put(_key509,_val510);
  }
  iprot.readMapEnd();
}
struct.set_executor_node_port_isSet(true);
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
break;
case 4:
if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
{
org.apache.thrift.protocol.TMap _map515=iprot.readMapBegin();
struct.executor_start_time_secs=new HashMap<List<Long>,Long>(2 * _map515.size);
List<Long> _key516;
long _val517;
for (int _i518=0; _i518 < _map515.size; ++_i518) {
{
  org.apache.thrift.protocol.TList _list519=iprot.readListBegin();
  _key516=new ArrayList<Long>(_list519.size);
  long _elem520;
  for (int _i521=0; _i521 < _list519.size; ++_i521) {
    _elem520=iprot.readI64();
    _key516.add(_elem520);
  }
  iprot.readListEnd();
}
_val517=iprot.readI64();
struct.executor_start_time_secs.put(_key516,_val517);
}
iprot.readMapEnd();
}
struct.set_executor_start_time_secs_isSet(true);
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
break;
default :
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
struct.validate();
}
