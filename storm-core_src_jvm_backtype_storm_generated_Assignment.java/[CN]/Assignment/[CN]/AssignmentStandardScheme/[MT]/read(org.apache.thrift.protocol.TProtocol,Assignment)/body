{
  org.apache.thrift.protocol.TField schemeField;
  iprot.readStructBegin();
  while (true) {
    schemeField=iprot.readFieldBegin();
    if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
      break;
    }
switch (schemeField.id) {
case 1:
      if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
        struct.master_code_dir=iprot.readString();
        struct.set_master_code_dir_isSet(true);
      }
 else {
        org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
      }
    break;
case 2:
  if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
{
      org.apache.thrift.protocol.TMap _map388=iprot.readMapBegin();
      struct.node_host=new HashMap<String,String>(2 * _map388.size);
      String _key389;
      String _val390;
      for (int _i391=0; _i391 < _map388.size; ++_i391) {
        _key389=iprot.readString();
        _val390=iprot.readString();
        struct.node_host.put(_key389,_val390);
      }
      iprot.readMapEnd();
    }
    struct.set_node_host_isSet(true);
  }
 else {
    org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
  }
break;
case 3:
if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
{
  org.apache.thrift.protocol.TMap _map392=iprot.readMapBegin();
  struct.executor_node_port=new HashMap<List<Long>,NodeInfo>(2 * _map392.size);
  List<Long> _key393;
  NodeInfo _val394;
  for (int _i395=0; _i395 < _map392.size; ++_i395) {
{
      org.apache.thrift.protocol.TList _list396=iprot.readListBegin();
      _key393=new ArrayList<Long>(_list396.size);
      long _elem397;
      for (int _i398=0; _i398 < _list396.size; ++_i398) {
        _elem397=iprot.readI64();
        _key393.add(_elem397);
      }
      iprot.readListEnd();
    }
    _val394=new NodeInfo();
    _val394.read(iprot);
    struct.executor_node_port.put(_key393,_val394);
  }
  iprot.readMapEnd();
}
struct.set_executor_node_port_isSet(true);
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
break;
case 4:
if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
{
org.apache.thrift.protocol.TMap _map399=iprot.readMapBegin();
struct.executor_start_time_secs=new HashMap<List<Long>,Long>(2 * _map399.size);
List<Long> _key400;
long _val401;
for (int _i402=0; _i402 < _map399.size; ++_i402) {
{
  org.apache.thrift.protocol.TList _list403=iprot.readListBegin();
  _key400=new ArrayList<Long>(_list403.size);
  long _elem404;
  for (int _i405=0; _i405 < _list403.size; ++_i405) {
    _elem404=iprot.readI64();
    _key400.add(_elem404);
  }
  iprot.readListEnd();
}
_val401=iprot.readI64();
struct.executor_start_time_secs.put(_key400,_val401);
}
iprot.readMapEnd();
}
struct.set_executor_start_time_secs_isSet(true);
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
break;
default :
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
struct.validate();
}
