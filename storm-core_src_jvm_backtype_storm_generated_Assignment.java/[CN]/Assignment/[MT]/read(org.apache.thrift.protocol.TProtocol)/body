{
  org.apache.thrift.protocol.TField field;
  iprot.readStructBegin();
  while (true) {
    field=iprot.readFieldBegin();
    if (field.type == org.apache.thrift.protocol.TType.STOP) {
      break;
    }
switch (field.id) {
case 1:
      if (field.type == org.apache.thrift.protocol.TType.STRING) {
        this.master_code_dir=iprot.readString();
      }
 else {
        org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
      }
    break;
case 2:
  if (field.type == org.apache.thrift.protocol.TType.MAP) {
{
      org.apache.thrift.protocol.TMap _map185=iprot.readMapBegin();
      this.node_host=new HashMap<String,String>(2 * _map185.size);
      for (int _i186=0; _i186 < _map185.size; ++_i186) {
        String _key187;
        String _val188;
        _key187=iprot.readString();
        _val188=iprot.readString();
        this.node_host.put(_key187,_val188);
      }
      iprot.readMapEnd();
    }
  }
 else {
    org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
  }
break;
case 3:
if (field.type == org.apache.thrift.protocol.TType.MAP) {
{
  org.apache.thrift.protocol.TMap _map189=iprot.readMapBegin();
  this.executor_node_port=new HashMap<List<Long>,NodeInfo>(2 * _map189.size);
  for (int _i190=0; _i190 < _map189.size; ++_i190) {
    List<Long> _key191;
    NodeInfo _val192;
{
      org.apache.thrift.protocol.TList _list193=iprot.readListBegin();
      _key191=new ArrayList<Long>(_list193.size);
      for (int _i194=0; _i194 < _list193.size; ++_i194) {
        long _elem195;
        _elem195=iprot.readI64();
        _key191.add(_elem195);
      }
      iprot.readListEnd();
    }
    _val192=new NodeInfo();
    _val192.read(iprot);
    this.executor_node_port.put(_key191,_val192);
  }
  iprot.readMapEnd();
}
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
}
break;
case 4:
if (field.type == org.apache.thrift.protocol.TType.MAP) {
{
org.apache.thrift.protocol.TMap _map196=iprot.readMapBegin();
this.executor_start_time_secs=new HashMap<List<Long>,Long>(2 * _map196.size);
for (int _i197=0; _i197 < _map196.size; ++_i197) {
List<Long> _key198;
long _val199;
{
  org.apache.thrift.protocol.TList _list200=iprot.readListBegin();
  _key198=new ArrayList<Long>(_list200.size);
  for (int _i201=0; _i201 < _list200.size; ++_i201) {
    long _elem202;
    _elem202=iprot.readI64();
    _key198.add(_elem202);
  }
  iprot.readListEnd();
}
_val199=iprot.readI64();
this.executor_start_time_secs.put(_key198,_val199);
}
iprot.readMapEnd();
}
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
}
break;
default :
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
validate();
}
