{
  List<TopologyDetails> topos=new LinkedList<TopologyDetails>();
  topos.add(TestUtilsForResourceAwareScheduler.getTopology("topo-1",config,5,15,1,1,Time.currentTimeSecs() - 2,20));
  topos.add(TestUtilsForResourceAwareScheduler.getTopology("topo-2",config,5,15,1,1,Time.currentTimeSecs() - 8,30));
  topos.add(TestUtilsForResourceAwareScheduler.getTopology("topo-3",config,5,15,1,1,Time.currentTimeSecs() - 16,30));
  topos.add(TestUtilsForResourceAwareScheduler.getTopology("topo-4",config,5,15,1,1,Time.currentTimeSecs() - 16,20));
  topos.add(TestUtilsForResourceAwareScheduler.getTopology("topo-5",config,5,15,1,1,Time.currentTimeSecs() - 24,30));
  topos.add(TestUtilsForResourceAwareScheduler.getTopology("topo-6",config,5,15,1,1,Time.currentTimeSecs() - 2,0));
  topos.add(TestUtilsForResourceAwareScheduler.getTopology("topo-7",config,5,15,1,1,Time.currentTimeSecs() - 8,0));
  topos.add(TestUtilsForResourceAwareScheduler.getTopology("topo-8",config,5,15,1,1,Time.currentTimeSecs() - 16,15));
  topos.add(TestUtilsForResourceAwareScheduler.getTopology("topo-9",config,5,15,1,1,Time.currentTimeSecs() - 16,8));
  topos.add(TestUtilsForResourceAwareScheduler.getTopology("topo-10",config,5,15,1,1,Time.currentTimeSecs() - 24,9));
  return topos;
}
