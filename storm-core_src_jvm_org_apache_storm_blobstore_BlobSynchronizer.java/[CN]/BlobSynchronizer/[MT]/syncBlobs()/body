{
  try {
    LOG.debug("Sync blobs - blobstore keys {}, zookeeper keys {}",getBlobStoreKeySet(),getZookeeperKeySet());
    zkClient=BlobStoreUtils.createZKClient(conf);
    deleteKeySetFromBlobStoreNotOnZookeeper(getBlobStoreKeySet(),getZookeeperKeySet());
    updateKeySetForBlobStore(getBlobStoreKeySet());
    Set<String> keySetToDownload=getKeySetToDownload(getBlobStoreKeySet(),getZookeeperKeySet());
    LOG.debug("Key set Blobstore-> Zookeeper-> DownloadSet {}-> {}-> {}",getBlobStoreKeySet(),getZookeeperKeySet(),keySetToDownload);
    for (    String key : keySetToDownload) {
      Set<NimbusInfo> nimbusInfoSet=BlobStoreUtils.getNimbodesWithLatestSequenceNumberOfBlob(zkClient,key);
      if (BlobStoreUtils.downloadMissingBlob(conf,blobStore,key,nimbusInfoSet)) {
        BlobStoreUtils.createStateInZookeeper(conf,key,nimbusInfo);
      }
    }
    if (zkClient != null) {
      zkClient.close();
    }
  }
 catch (  InterruptedException exp) {
    LOG.error("InterruptedException {}",exp);
  }
catch (  Exception exp) {
    throw new RuntimeException(exp);
  }
}
