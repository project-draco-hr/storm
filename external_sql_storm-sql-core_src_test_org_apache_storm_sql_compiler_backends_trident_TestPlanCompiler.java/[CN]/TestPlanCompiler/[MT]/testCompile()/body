{
  final int EXPECTED_VALUE_SIZE=2;
  String sql="SELECT ID FROM FOO WHERE ID > 2";
  TestCompilerUtils.CalciteState state=TestCompilerUtils.sqlOverDummyTable(sql);
  final Map<String,ISqlTridentDataSource> data=new HashMap<>();
  data.put("FOO",new TestUtils.MockSqlTridentDataSource());
  PlanCompiler compiler=new PlanCompiler(data,typeFactory);
  final AbstractTridentProcessor proc=compiler.compileForTest(state.tree());
  final TridentTopology topo=proc.build(data);
  Fields f=proc.outputStream().getOutputFields();
  proc.outputStream().partitionPersist(new TestUtils.MockStateFactory(),f,new TestUtils.MockStateUpdater(),new Fields());
  runTridentTopology(EXPECTED_VALUE_SIZE,proc,topo);
  Assert.assertArrayEquals(new Values[]{new Values(3),new Values(4)},getCollectedValues().toArray());
}
