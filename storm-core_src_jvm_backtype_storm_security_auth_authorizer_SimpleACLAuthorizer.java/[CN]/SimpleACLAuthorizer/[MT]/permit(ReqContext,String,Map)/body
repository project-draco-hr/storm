{
  LOG.info("[req " + context.requestID() + "] Access "+ " from: "+ (context.remoteAddress() == null ? "null" : context.remoteAddress().toString())+ (context.principal() == null ? "" : (" principal:" + context.principal()))+ " op:"+ operation+ (topology_conf == null ? "" : (" topoology:" + topology_conf.get(Config.TOPOLOGY_NAME))));
  String principal=context.principal().getName();
  String user=_ptol.toLocal(context.principal());
  if (_admins.contains(principal) || _admins.contains(user)) {
    return true;
  }
  if (_supervisors.contains(principal) || _supervisors.contains(user)) {
    return _supervisorCommands.contains(operation);
  }
  if (_userCommands.contains(operation)) {
    return true;
  }
  if (_topoCommands.contains(operation)) {
    Set topoUsers=new HashSet<String>();
    if (topology_conf.containsKey(Config.TOPOLOGY_USERS)) {
      topoUsers.addAll((Collection<String>)topology_conf.get(Config.TOPOLOGY_USERS));
    }
    if (topoUsers.contains(principal) || topoUsers.contains(user)) {
      return true;
    }
    Set<String> topoGroups=new HashSet<String>();
    if (topology_conf.containsKey(Config.TOPOLOGY_GROUPS) && topology_conf.get(Config.TOPOLOGY_GROUPS) != null) {
      topoGroups.addAll((Collection<String>)topology_conf.get(Config.TOPOLOGY_GROUPS));
    }
    if (_groupMappingProvider != null && topoGroups.size() > 0) {
      try {
        Set<String> userGroups=_groupMappingProvider.getGroups(user);
        for (        String tgroup : topoGroups) {
          if (userGroups.contains(tgroup))           return true;
        }
      }
 catch (      IOException e) {
        LOG.warn("Error while trying to fetch user groups",e);
      }
    }
  }
  return false;
}
