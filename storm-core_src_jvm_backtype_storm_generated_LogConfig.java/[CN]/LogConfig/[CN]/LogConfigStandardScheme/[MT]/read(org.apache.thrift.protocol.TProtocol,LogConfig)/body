{
  org.apache.thrift.protocol.TField schemeField;
  iprot.readStructBegin();
  while (true) {
    schemeField=iprot.readFieldBegin();
    if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
      break;
    }
switch (schemeField.id) {
case 2:
      if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
{
          org.apache.thrift.protocol.TMap _map680=iprot.readMapBegin();
          struct.named_logger_level=new HashMap<String,LogLevel>(2 * _map680.size);
          String _key681;
          LogLevel _val682;
          for (int _i683=0; _i683 < _map680.size; ++_i683) {
            _key681=iprot.readString();
            _val682=new LogLevel();
            _val682.read(iprot);
            struct.named_logger_level.put(_key681,_val682);
          }
          iprot.readMapEnd();
        }
        struct.set_named_logger_level_isSet(true);
      }
 else {
        org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
      }
    break;
default :
  org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
struct.validate();
}
