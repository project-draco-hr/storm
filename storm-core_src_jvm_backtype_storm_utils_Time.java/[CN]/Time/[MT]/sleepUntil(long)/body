{
  if (simulating.get()) {
    try {
synchronized (sleepTimesLock) {
        if (threadSleepTimes == null) {
          LOG.debug("{} is still sleeping after simulated time disabled.",Thread.currentThread(),new RuntimeException("STACK TRACE"));
          throw new InterruptedException();
        }
        threadSleepTimes.put(Thread.currentThread(),new AtomicLong(targetTimeMs));
      }
      while (simulatedCurrTimeMs.get() < targetTimeMs) {
synchronized (sleepTimesLock) {
          if (threadSleepTimes == null) {
            LOG.debug("{} is still sleeping after simulated time disabled.",Thread.currentThread(),new RuntimeException("STACK TRACE"));
            throw new InterruptedException();
          }
        }
        Thread.sleep(10);
      }
    }
  finally {
synchronized (sleepTimesLock) {
        if (simulating.get() && threadSleepTimes != null) {
          threadSleepTimes.remove(Thread.currentThread());
        }
      }
    }
  }
 else {
    long sleepTime=targetTimeMs - currentTimeMillis();
    if (sleepTime > 0)     Thread.sleep(sleepTime);
  }
}
