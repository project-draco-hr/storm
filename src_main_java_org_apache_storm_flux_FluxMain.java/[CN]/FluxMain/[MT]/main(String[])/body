{
  TopologyDef topologyDef=FluxParser.parse("src/test/resources/configs/tck.yaml");
  TopologyBuilder builder=new TopologyBuilder();
  for (  SpoutDef sd : topologyDef.getSpouts()) {
    builder.setSpout(sd.getId(),buildSpout(sd),sd.getParallelism());
  }
  Map<String,Object> boltMap=buildBoltMap(topologyDef.getBolts());
  for (  StreamDef stream : topologyDef.getStreams()) {
    Object boltObj=boltMap.get(stream.getTo());
    BoltDeclarer declarer=null;
    if (boltObj instanceof IRichBolt) {
      declarer=builder.setBolt(stream.getTo(),(IRichBolt)boltObj,topologyDef.parallelismForBolt(stream.getTo()));
    }
 else     if (boltObj instanceof IBasicBolt) {
      declarer=builder.setBolt(stream.getTo(),(IBasicBolt)boltObj,topologyDef.parallelismForBolt(stream.getTo()));
    }
 else {
      throw new IllegalArgumentException("Class does not appear to be a bolt: " + boltObj.getClass().getName());
    }
    GroupingDef grouping=stream.getGrouping();
    String streamId=(grouping.getStreamId() == null ? Utils.DEFAULT_STREAM_ID : grouping.getStreamId());
    if (grouping.getType().equals("shuffle")) {
      declarer.shuffleGrouping(stream.getFrom(),streamId);
    }
 else     if (grouping.getType().equals("fields")) {
      declarer.fieldsGrouping(stream.getFrom(),streamId,new Fields(grouping.getArgs()));
    }
 else {
      throw new UnsupportedOperationException("unsupported grouping type: " + grouping.getStreamId());
    }
  }
  builder.createTopology();
  Config conf=new Config();
  conf.putAll(topologyDef.getConfig());
  LocalCluster cluster=new LocalCluster();
  cluster.submitTopology("test",conf,builder.createTopology());
  Utils.sleep(60000);
  cluster.killTopology("test");
  cluster.shutdown();
}
