{
  TTupleProtocol iprot=(TTupleProtocol)prot;
{
    org.apache.thrift.protocol.TMap _map316=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.MAP,iprot.readI32());
    struct.emitted=new HashMap<String,Map<String,Long>>(2 * _map316.size);
    String _key317;
    Map<String,Long> _val318;
    for (int _i319=0; _i319 < _map316.size; ++_i319) {
      _key317=iprot.readString();
{
        org.apache.thrift.protocol.TMap _map320=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.I64,iprot.readI32());
        _val318=new HashMap<String,Long>(2 * _map320.size);
        String _key321;
        long _val322;
        for (int _i323=0; _i323 < _map320.size; ++_i323) {
          _key321=iprot.readString();
          _val322=iprot.readI64();
          _val318.put(_key321,_val322);
        }
      }
      struct.emitted.put(_key317,_val318);
    }
  }
  struct.set_emitted_isSet(true);
{
    org.apache.thrift.protocol.TMap _map324=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.MAP,iprot.readI32());
    struct.transferred=new HashMap<String,Map<String,Long>>(2 * _map324.size);
    String _key325;
    Map<String,Long> _val326;
    for (int _i327=0; _i327 < _map324.size; ++_i327) {
      _key325=iprot.readString();
{
        org.apache.thrift.protocol.TMap _map328=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.I64,iprot.readI32());
        _val326=new HashMap<String,Long>(2 * _map328.size);
        String _key329;
        long _val330;
        for (int _i331=0; _i331 < _map328.size; ++_i331) {
          _key329=iprot.readString();
          _val330=iprot.readI64();
          _val326.put(_key329,_val330);
        }
      }
      struct.transferred.put(_key325,_val326);
    }
  }
  struct.set_transferred_isSet(true);
  struct.specific=new ExecutorSpecificStats();
  struct.specific.read(iprot);
  struct.set_specific_isSet(true);
  struct.rate=iprot.readDouble();
  struct.set_rate_isSet(true);
}
