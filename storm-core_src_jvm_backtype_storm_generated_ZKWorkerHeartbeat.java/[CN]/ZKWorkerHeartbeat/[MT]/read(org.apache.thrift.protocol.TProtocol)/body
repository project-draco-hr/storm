{
  org.apache.thrift.protocol.TField field;
  iprot.readStructBegin();
  while (true) {
    field=iprot.readFieldBegin();
    if (field.type == org.apache.thrift.protocol.TType.STOP) {
      break;
    }
switch (field.id) {
case 1:
      if (field.type == org.apache.thrift.protocol.TType.STRING) {
        this.storm_id=iprot.readString();
      }
 else {
        org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
      }
    break;
case 2:
  if (field.type == org.apache.thrift.protocol.TType.MAP) {
{
      org.apache.thrift.protocol.TMap _map213=iprot.readMapBegin();
      this.executor_stats=new HashMap<ExecutorInfo,ExecutorStats>(2 * _map213.size);
      for (int _i214=0; _i214 < _map213.size; ++_i214) {
        ExecutorInfo _key215;
        ExecutorStats _val216;
        _key215=new ExecutorInfo();
        _key215.read(iprot);
        _val216=new ExecutorStats();
        _val216.read(iprot);
        this.executor_stats.put(_key215,_val216);
      }
      iprot.readMapEnd();
    }
  }
 else {
    org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
  }
break;
case 3:
if (field.type == org.apache.thrift.protocol.TType.I32) {
this.time_secs=iprot.readI32();
set_time_secs_isSet(true);
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
}
break;
default :
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
validate();
}
