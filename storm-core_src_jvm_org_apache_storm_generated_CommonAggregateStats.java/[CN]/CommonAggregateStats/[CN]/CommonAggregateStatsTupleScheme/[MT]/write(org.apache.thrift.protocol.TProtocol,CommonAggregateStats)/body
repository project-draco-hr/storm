{
  TTupleProtocol oprot=(TTupleProtocol)prot;
  BitSet optionals=new BitSet();
  if (struct.is_set_num_executors()) {
    optionals.set(0);
  }
  if (struct.is_set_num_tasks()) {
    optionals.set(1);
  }
  if (struct.is_set_emitted()) {
    optionals.set(2);
  }
  if (struct.is_set_transferred()) {
    optionals.set(3);
  }
  if (struct.is_set_acked()) {
    optionals.set(4);
  }
  if (struct.is_set_failed()) {
    optionals.set(5);
  }
  if (struct.is_set_resources_map()) {
    optionals.set(6);
  }
  oprot.writeBitSet(optionals,7);
  if (struct.is_set_num_executors()) {
    oprot.writeI32(struct.num_executors);
  }
  if (struct.is_set_num_tasks()) {
    oprot.writeI32(struct.num_tasks);
  }
  if (struct.is_set_emitted()) {
    oprot.writeI64(struct.emitted);
  }
  if (struct.is_set_transferred()) {
    oprot.writeI64(struct.transferred);
  }
  if (struct.is_set_acked()) {
    oprot.writeI64(struct.acked);
  }
  if (struct.is_set_failed()) {
    oprot.writeI64(struct.failed);
  }
  if (struct.is_set_resources_map()) {
{
      oprot.writeI32(struct.resources_map.size());
      for (      Map.Entry<String,Double> _iter373 : struct.resources_map.entrySet()) {
        oprot.writeString(_iter373.getKey());
        oprot.writeDouble(_iter373.getValue());
      }
    }
  }
}
