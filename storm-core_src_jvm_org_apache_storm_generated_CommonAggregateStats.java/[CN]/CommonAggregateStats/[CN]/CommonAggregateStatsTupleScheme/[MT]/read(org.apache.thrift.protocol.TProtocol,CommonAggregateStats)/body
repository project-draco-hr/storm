{
  TTupleProtocol iprot=(TTupleProtocol)prot;
  BitSet incoming=iprot.readBitSet(7);
  if (incoming.get(0)) {
    struct.num_executors=iprot.readI32();
    struct.set_num_executors_isSet(true);
  }
  if (incoming.get(1)) {
    struct.num_tasks=iprot.readI32();
    struct.set_num_tasks_isSet(true);
  }
  if (incoming.get(2)) {
    struct.emitted=iprot.readI64();
    struct.set_emitted_isSet(true);
  }
  if (incoming.get(3)) {
    struct.transferred=iprot.readI64();
    struct.set_transferred_isSet(true);
  }
  if (incoming.get(4)) {
    struct.acked=iprot.readI64();
    struct.set_acked_isSet(true);
  }
  if (incoming.get(5)) {
    struct.failed=iprot.readI64();
    struct.set_failed_isSet(true);
  }
  if (incoming.get(6)) {
{
      org.apache.thrift.protocol.TMap _map374=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.DOUBLE,iprot.readI32());
      struct.resources_map=new HashMap<String,Double>(2 * _map374.size);
      String _key375;
      double _val376;
      for (int _i377=0; _i377 < _map374.size; ++_i377) {
        _key375=iprot.readString();
        _val376=iprot.readDouble();
        struct.resources_map.put(_key375,_val376);
      }
    }
    struct.set_resources_map_isSet(true);
  }
}
