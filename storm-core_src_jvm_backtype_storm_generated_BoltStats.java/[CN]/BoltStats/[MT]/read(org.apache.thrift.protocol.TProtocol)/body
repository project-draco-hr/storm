{
  org.apache.thrift.protocol.TField field;
  iprot.readStructBegin();
  while (true) {
    field=iprot.readFieldBegin();
    if (field.type == org.apache.thrift.protocol.TType.STOP) {
      break;
    }
switch (field.id) {
case 1:
      if (field.type == org.apache.thrift.protocol.TType.MAP) {
{
          org.apache.thrift.protocol.TMap _map45=iprot.readMapBegin();
          this.acked=new HashMap<String,Map<GlobalStreamId,Long>>(2 * _map45.size);
          for (int _i46=0; _i46 < _map45.size; ++_i46) {
            String _key47;
            Map<GlobalStreamId,Long> _val48;
            _key47=iprot.readString();
{
              org.apache.thrift.protocol.TMap _map49=iprot.readMapBegin();
              _val48=new HashMap<GlobalStreamId,Long>(2 * _map49.size);
              for (int _i50=0; _i50 < _map49.size; ++_i50) {
                GlobalStreamId _key51;
                long _val52;
                _key51=new GlobalStreamId();
                _key51.read(iprot);
                _val52=iprot.readI64();
                _val48.put(_key51,_val52);
              }
              iprot.readMapEnd();
            }
            this.acked.put(_key47,_val48);
          }
          iprot.readMapEnd();
        }
      }
 else {
        org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
      }
    break;
case 2:
  if (field.type == org.apache.thrift.protocol.TType.MAP) {
{
      org.apache.thrift.protocol.TMap _map53=iprot.readMapBegin();
      this.failed=new HashMap<String,Map<GlobalStreamId,Long>>(2 * _map53.size);
      for (int _i54=0; _i54 < _map53.size; ++_i54) {
        String _key55;
        Map<GlobalStreamId,Long> _val56;
        _key55=iprot.readString();
{
          org.apache.thrift.protocol.TMap _map57=iprot.readMapBegin();
          _val56=new HashMap<GlobalStreamId,Long>(2 * _map57.size);
          for (int _i58=0; _i58 < _map57.size; ++_i58) {
            GlobalStreamId _key59;
            long _val60;
            _key59=new GlobalStreamId();
            _key59.read(iprot);
            _val60=iprot.readI64();
            _val56.put(_key59,_val60);
          }
          iprot.readMapEnd();
        }
        this.failed.put(_key55,_val56);
      }
      iprot.readMapEnd();
    }
  }
 else {
    org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
  }
break;
case 3:
if (field.type == org.apache.thrift.protocol.TType.MAP) {
{
  org.apache.thrift.protocol.TMap _map61=iprot.readMapBegin();
  this.process_ms_avg=new HashMap<String,Map<GlobalStreamId,Double>>(2 * _map61.size);
  for (int _i62=0; _i62 < _map61.size; ++_i62) {
    String _key63;
    Map<GlobalStreamId,Double> _val64;
    _key63=iprot.readString();
{
      org.apache.thrift.protocol.TMap _map65=iprot.readMapBegin();
      _val64=new HashMap<GlobalStreamId,Double>(2 * _map65.size);
      for (int _i66=0; _i66 < _map65.size; ++_i66) {
        GlobalStreamId _key67;
        double _val68;
        _key67=new GlobalStreamId();
        _key67.read(iprot);
        _val68=iprot.readDouble();
        _val64.put(_key67,_val68);
      }
      iprot.readMapEnd();
    }
    this.process_ms_avg.put(_key63,_val64);
  }
  iprot.readMapEnd();
}
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
}
break;
case 4:
if (field.type == org.apache.thrift.protocol.TType.MAP) {
{
org.apache.thrift.protocol.TMap _map69=iprot.readMapBegin();
this.executed=new HashMap<String,Map<GlobalStreamId,Long>>(2 * _map69.size);
for (int _i70=0; _i70 < _map69.size; ++_i70) {
String _key71;
Map<GlobalStreamId,Long> _val72;
_key71=iprot.readString();
{
  org.apache.thrift.protocol.TMap _map73=iprot.readMapBegin();
  _val72=new HashMap<GlobalStreamId,Long>(2 * _map73.size);
  for (int _i74=0; _i74 < _map73.size; ++_i74) {
    GlobalStreamId _key75;
    long _val76;
    _key75=new GlobalStreamId();
    _key75.read(iprot);
    _val76=iprot.readI64();
    _val72.put(_key75,_val76);
  }
  iprot.readMapEnd();
}
this.executed.put(_key71,_val72);
}
iprot.readMapEnd();
}
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
}
break;
case 5:
if (field.type == org.apache.thrift.protocol.TType.MAP) {
{
org.apache.thrift.protocol.TMap _map77=iprot.readMapBegin();
this.execute_ms_avg=new HashMap<String,Map<GlobalStreamId,Double>>(2 * _map77.size);
for (int _i78=0; _i78 < _map77.size; ++_i78) {
String _key79;
Map<GlobalStreamId,Double> _val80;
_key79=iprot.readString();
{
org.apache.thrift.protocol.TMap _map81=iprot.readMapBegin();
_val80=new HashMap<GlobalStreamId,Double>(2 * _map81.size);
for (int _i82=0; _i82 < _map81.size; ++_i82) {
GlobalStreamId _key83;
double _val84;
_key83=new GlobalStreamId();
_key83.read(iprot);
_val84=iprot.readDouble();
_val80.put(_key83,_val84);
}
iprot.readMapEnd();
}
this.execute_ms_avg.put(_key79,_val80);
}
iprot.readMapEnd();
}
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
}
break;
default :
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
validate();
}
