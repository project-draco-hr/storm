{
  TTupleProtocol iprot=(TTupleProtocol)prot;
{
    org.apache.thrift.protocol.TMap _map158=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.MAP,iprot.readI32());
    struct.acked=new HashMap<String,Map<GlobalStreamId,Long>>(2 * _map158.size);
    String _key159;
    Map<GlobalStreamId,Long> _val160;
    for (int _i161=0; _i161 < _map158.size; ++_i161) {
      _key159=iprot.readString();
{
        org.apache.thrift.protocol.TMap _map162=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRUCT,org.apache.thrift.protocol.TType.I64,iprot.readI32());
        _val160=new HashMap<GlobalStreamId,Long>(2 * _map162.size);
        GlobalStreamId _key163;
        long _val164;
        for (int _i165=0; _i165 < _map162.size; ++_i165) {
          _key163=new GlobalStreamId();
          _key163.read(iprot);
          _val164=iprot.readI64();
          _val160.put(_key163,_val164);
        }
      }
      struct.acked.put(_key159,_val160);
    }
  }
  struct.set_acked_isSet(true);
{
    org.apache.thrift.protocol.TMap _map166=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.MAP,iprot.readI32());
    struct.failed=new HashMap<String,Map<GlobalStreamId,Long>>(2 * _map166.size);
    String _key167;
    Map<GlobalStreamId,Long> _val168;
    for (int _i169=0; _i169 < _map166.size; ++_i169) {
      _key167=iprot.readString();
{
        org.apache.thrift.protocol.TMap _map170=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRUCT,org.apache.thrift.protocol.TType.I64,iprot.readI32());
        _val168=new HashMap<GlobalStreamId,Long>(2 * _map170.size);
        GlobalStreamId _key171;
        long _val172;
        for (int _i173=0; _i173 < _map170.size; ++_i173) {
          _key171=new GlobalStreamId();
          _key171.read(iprot);
          _val172=iprot.readI64();
          _val168.put(_key171,_val172);
        }
      }
      struct.failed.put(_key167,_val168);
    }
  }
  struct.set_failed_isSet(true);
{
    org.apache.thrift.protocol.TMap _map174=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.MAP,iprot.readI32());
    struct.process_ms_avg=new HashMap<String,Map<GlobalStreamId,Double>>(2 * _map174.size);
    String _key175;
    Map<GlobalStreamId,Double> _val176;
    for (int _i177=0; _i177 < _map174.size; ++_i177) {
      _key175=iprot.readString();
{
        org.apache.thrift.protocol.TMap _map178=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRUCT,org.apache.thrift.protocol.TType.DOUBLE,iprot.readI32());
        _val176=new HashMap<GlobalStreamId,Double>(2 * _map178.size);
        GlobalStreamId _key179;
        double _val180;
        for (int _i181=0; _i181 < _map178.size; ++_i181) {
          _key179=new GlobalStreamId();
          _key179.read(iprot);
          _val180=iprot.readDouble();
          _val176.put(_key179,_val180);
        }
      }
      struct.process_ms_avg.put(_key175,_val176);
    }
  }
  struct.set_process_ms_avg_isSet(true);
{
    org.apache.thrift.protocol.TMap _map182=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.MAP,iprot.readI32());
    struct.executed=new HashMap<String,Map<GlobalStreamId,Long>>(2 * _map182.size);
    String _key183;
    Map<GlobalStreamId,Long> _val184;
    for (int _i185=0; _i185 < _map182.size; ++_i185) {
      _key183=iprot.readString();
{
        org.apache.thrift.protocol.TMap _map186=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRUCT,org.apache.thrift.protocol.TType.I64,iprot.readI32());
        _val184=new HashMap<GlobalStreamId,Long>(2 * _map186.size);
        GlobalStreamId _key187;
        long _val188;
        for (int _i189=0; _i189 < _map186.size; ++_i189) {
          _key187=new GlobalStreamId();
          _key187.read(iprot);
          _val188=iprot.readI64();
          _val184.put(_key187,_val188);
        }
      }
      struct.executed.put(_key183,_val184);
    }
  }
  struct.set_executed_isSet(true);
{
    org.apache.thrift.protocol.TMap _map190=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.MAP,iprot.readI32());
    struct.execute_ms_avg=new HashMap<String,Map<GlobalStreamId,Double>>(2 * _map190.size);
    String _key191;
    Map<GlobalStreamId,Double> _val192;
    for (int _i193=0; _i193 < _map190.size; ++_i193) {
      _key191=iprot.readString();
{
        org.apache.thrift.protocol.TMap _map194=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRUCT,org.apache.thrift.protocol.TType.DOUBLE,iprot.readI32());
        _val192=new HashMap<GlobalStreamId,Double>(2 * _map194.size);
        GlobalStreamId _key195;
        double _val196;
        for (int _i197=0; _i197 < _map194.size; ++_i197) {
          _key195=new GlobalStreamId();
          _key195.read(iprot);
          _val196=iprot.readDouble();
          _val192.put(_key195,_val196);
        }
      }
      struct.execute_ms_avg.put(_key191,_val192);
    }
  }
  struct.set_execute_ms_avg_isSet(true);
}
