{
  struct.validate();
  oprot.writeStructBegin(STRUCT_DESC);
  if (struct.acked != null) {
    oprot.writeFieldBegin(ACKED_FIELD_DESC);
{
      oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.MAP,struct.acked.size()));
      for (      Map.Entry<String,Map<GlobalStreamId,Long>> _iter148 : struct.acked.entrySet()) {
        oprot.writeString(_iter148.getKey());
{
          oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRUCT,org.apache.thrift.protocol.TType.I64,_iter148.getValue().size()));
          for (          Map.Entry<GlobalStreamId,Long> _iter149 : _iter148.getValue().entrySet()) {
            _iter149.getKey().write(oprot);
            oprot.writeI64(_iter149.getValue());
          }
          oprot.writeMapEnd();
        }
      }
      oprot.writeMapEnd();
    }
    oprot.writeFieldEnd();
  }
  if (struct.failed != null) {
    oprot.writeFieldBegin(FAILED_FIELD_DESC);
{
      oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.MAP,struct.failed.size()));
      for (      Map.Entry<String,Map<GlobalStreamId,Long>> _iter150 : struct.failed.entrySet()) {
        oprot.writeString(_iter150.getKey());
{
          oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRUCT,org.apache.thrift.protocol.TType.I64,_iter150.getValue().size()));
          for (          Map.Entry<GlobalStreamId,Long> _iter151 : _iter150.getValue().entrySet()) {
            _iter151.getKey().write(oprot);
            oprot.writeI64(_iter151.getValue());
          }
          oprot.writeMapEnd();
        }
      }
      oprot.writeMapEnd();
    }
    oprot.writeFieldEnd();
  }
  if (struct.process_ms_avg != null) {
    oprot.writeFieldBegin(PROCESS_MS_AVG_FIELD_DESC);
{
      oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.MAP,struct.process_ms_avg.size()));
      for (      Map.Entry<String,Map<GlobalStreamId,Double>> _iter152 : struct.process_ms_avg.entrySet()) {
        oprot.writeString(_iter152.getKey());
{
          oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRUCT,org.apache.thrift.protocol.TType.DOUBLE,_iter152.getValue().size()));
          for (          Map.Entry<GlobalStreamId,Double> _iter153 : _iter152.getValue().entrySet()) {
            _iter153.getKey().write(oprot);
            oprot.writeDouble(_iter153.getValue());
          }
          oprot.writeMapEnd();
        }
      }
      oprot.writeMapEnd();
    }
    oprot.writeFieldEnd();
  }
  if (struct.executed != null) {
    oprot.writeFieldBegin(EXECUTED_FIELD_DESC);
{
      oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.MAP,struct.executed.size()));
      for (      Map.Entry<String,Map<GlobalStreamId,Long>> _iter154 : struct.executed.entrySet()) {
        oprot.writeString(_iter154.getKey());
{
          oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRUCT,org.apache.thrift.protocol.TType.I64,_iter154.getValue().size()));
          for (          Map.Entry<GlobalStreamId,Long> _iter155 : _iter154.getValue().entrySet()) {
            _iter155.getKey().write(oprot);
            oprot.writeI64(_iter155.getValue());
          }
          oprot.writeMapEnd();
        }
      }
      oprot.writeMapEnd();
    }
    oprot.writeFieldEnd();
  }
  if (struct.execute_ms_avg != null) {
    oprot.writeFieldBegin(EXECUTE_MS_AVG_FIELD_DESC);
{
      oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.MAP,struct.execute_ms_avg.size()));
      for (      Map.Entry<String,Map<GlobalStreamId,Double>> _iter156 : struct.execute_ms_avg.entrySet()) {
        oprot.writeString(_iter156.getKey());
{
          oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRUCT,org.apache.thrift.protocol.TType.DOUBLE,_iter156.getValue().size()));
          for (          Map.Entry<GlobalStreamId,Double> _iter157 : _iter156.getValue().entrySet()) {
            _iter157.getKey().write(oprot);
            oprot.writeDouble(_iter157.getValue());
          }
          oprot.writeMapEnd();
        }
      }
      oprot.writeMapEnd();
    }
    oprot.writeFieldEnd();
  }
  oprot.writeFieldStop();
  oprot.writeStructEnd();
}
