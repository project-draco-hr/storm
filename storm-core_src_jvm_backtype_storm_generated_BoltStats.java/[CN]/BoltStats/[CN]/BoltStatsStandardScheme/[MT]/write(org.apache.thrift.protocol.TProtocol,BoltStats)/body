{
  struct.validate();
  oprot.writeStructBegin(STRUCT_DESC);
  if (struct.acked != null) {
    oprot.writeFieldBegin(ACKED_FIELD_DESC);
{
      oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.MAP,struct.acked.size()));
      for (      Map.Entry<String,Map<GlobalStreamId,Long>> _iter130 : struct.acked.entrySet()) {
        oprot.writeString(_iter130.getKey());
{
          oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRUCT,org.apache.thrift.protocol.TType.I64,_iter130.getValue().size()));
          for (          Map.Entry<GlobalStreamId,Long> _iter131 : _iter130.getValue().entrySet()) {
            _iter131.getKey().write(oprot);
            oprot.writeI64(_iter131.getValue());
          }
          oprot.writeMapEnd();
        }
      }
      oprot.writeMapEnd();
    }
    oprot.writeFieldEnd();
  }
  if (struct.failed != null) {
    oprot.writeFieldBegin(FAILED_FIELD_DESC);
{
      oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.MAP,struct.failed.size()));
      for (      Map.Entry<String,Map<GlobalStreamId,Long>> _iter132 : struct.failed.entrySet()) {
        oprot.writeString(_iter132.getKey());
{
          oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRUCT,org.apache.thrift.protocol.TType.I64,_iter132.getValue().size()));
          for (          Map.Entry<GlobalStreamId,Long> _iter133 : _iter132.getValue().entrySet()) {
            _iter133.getKey().write(oprot);
            oprot.writeI64(_iter133.getValue());
          }
          oprot.writeMapEnd();
        }
      }
      oprot.writeMapEnd();
    }
    oprot.writeFieldEnd();
  }
  if (struct.process_ms_avg != null) {
    oprot.writeFieldBegin(PROCESS_MS_AVG_FIELD_DESC);
{
      oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.MAP,struct.process_ms_avg.size()));
      for (      Map.Entry<String,Map<GlobalStreamId,Double>> _iter134 : struct.process_ms_avg.entrySet()) {
        oprot.writeString(_iter134.getKey());
{
          oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRUCT,org.apache.thrift.protocol.TType.DOUBLE,_iter134.getValue().size()));
          for (          Map.Entry<GlobalStreamId,Double> _iter135 : _iter134.getValue().entrySet()) {
            _iter135.getKey().write(oprot);
            oprot.writeDouble(_iter135.getValue());
          }
          oprot.writeMapEnd();
        }
      }
      oprot.writeMapEnd();
    }
    oprot.writeFieldEnd();
  }
  if (struct.executed != null) {
    oprot.writeFieldBegin(EXECUTED_FIELD_DESC);
{
      oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.MAP,struct.executed.size()));
      for (      Map.Entry<String,Map<GlobalStreamId,Long>> _iter136 : struct.executed.entrySet()) {
        oprot.writeString(_iter136.getKey());
{
          oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRUCT,org.apache.thrift.protocol.TType.I64,_iter136.getValue().size()));
          for (          Map.Entry<GlobalStreamId,Long> _iter137 : _iter136.getValue().entrySet()) {
            _iter137.getKey().write(oprot);
            oprot.writeI64(_iter137.getValue());
          }
          oprot.writeMapEnd();
        }
      }
      oprot.writeMapEnd();
    }
    oprot.writeFieldEnd();
  }
  if (struct.execute_ms_avg != null) {
    oprot.writeFieldBegin(EXECUTE_MS_AVG_FIELD_DESC);
{
      oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.MAP,struct.execute_ms_avg.size()));
      for (      Map.Entry<String,Map<GlobalStreamId,Double>> _iter138 : struct.execute_ms_avg.entrySet()) {
        oprot.writeString(_iter138.getKey());
{
          oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRUCT,org.apache.thrift.protocol.TType.DOUBLE,_iter138.getValue().size()));
          for (          Map.Entry<GlobalStreamId,Double> _iter139 : _iter138.getValue().entrySet()) {
            _iter139.getKey().write(oprot);
            oprot.writeDouble(_iter139.getValue());
          }
          oprot.writeMapEnd();
        }
      }
      oprot.writeMapEnd();
    }
    oprot.writeFieldEnd();
  }
  oprot.writeFieldStop();
  oprot.writeStructEnd();
}
