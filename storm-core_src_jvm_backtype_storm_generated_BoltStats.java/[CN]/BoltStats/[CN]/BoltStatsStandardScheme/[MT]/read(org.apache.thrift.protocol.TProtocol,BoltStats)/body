{
  org.apache.thrift.protocol.TField schemeField;
  iprot.readStructBegin();
  while (true) {
    schemeField=iprot.readFieldBegin();
    if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
      break;
    }
switch (schemeField.id) {
case 1:
      if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
{
          org.apache.thrift.protocol.TMap _map116=iprot.readMapBegin();
          struct.acked=new HashMap<String,Map<GlobalStreamId,Long>>(2 * _map116.size);
          String _key117;
          Map<GlobalStreamId,Long> _val118;
          for (int _i119=0; _i119 < _map116.size; ++_i119) {
            _key117=iprot.readString();
{
              org.apache.thrift.protocol.TMap _map120=iprot.readMapBegin();
              _val118=new HashMap<GlobalStreamId,Long>(2 * _map120.size);
              GlobalStreamId _key121;
              long _val122;
              for (int _i123=0; _i123 < _map120.size; ++_i123) {
                _key121=new GlobalStreamId();
                _key121.read(iprot);
                _val122=iprot.readI64();
                _val118.put(_key121,_val122);
              }
              iprot.readMapEnd();
            }
            struct.acked.put(_key117,_val118);
          }
          iprot.readMapEnd();
        }
        struct.set_acked_isSet(true);
      }
 else {
        org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
      }
    break;
case 2:
  if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
{
      org.apache.thrift.protocol.TMap _map124=iprot.readMapBegin();
      struct.failed=new HashMap<String,Map<GlobalStreamId,Long>>(2 * _map124.size);
      String _key125;
      Map<GlobalStreamId,Long> _val126;
      for (int _i127=0; _i127 < _map124.size; ++_i127) {
        _key125=iprot.readString();
{
          org.apache.thrift.protocol.TMap _map128=iprot.readMapBegin();
          _val126=new HashMap<GlobalStreamId,Long>(2 * _map128.size);
          GlobalStreamId _key129;
          long _val130;
          for (int _i131=0; _i131 < _map128.size; ++_i131) {
            _key129=new GlobalStreamId();
            _key129.read(iprot);
            _val130=iprot.readI64();
            _val126.put(_key129,_val130);
          }
          iprot.readMapEnd();
        }
        struct.failed.put(_key125,_val126);
      }
      iprot.readMapEnd();
    }
    struct.set_failed_isSet(true);
  }
 else {
    org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
  }
break;
case 3:
if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
{
  org.apache.thrift.protocol.TMap _map132=iprot.readMapBegin();
  struct.process_ms_avg=new HashMap<String,Map<GlobalStreamId,Double>>(2 * _map132.size);
  String _key133;
  Map<GlobalStreamId,Double> _val134;
  for (int _i135=0; _i135 < _map132.size; ++_i135) {
    _key133=iprot.readString();
{
      org.apache.thrift.protocol.TMap _map136=iprot.readMapBegin();
      _val134=new HashMap<GlobalStreamId,Double>(2 * _map136.size);
      GlobalStreamId _key137;
      double _val138;
      for (int _i139=0; _i139 < _map136.size; ++_i139) {
        _key137=new GlobalStreamId();
        _key137.read(iprot);
        _val138=iprot.readDouble();
        _val134.put(_key137,_val138);
      }
      iprot.readMapEnd();
    }
    struct.process_ms_avg.put(_key133,_val134);
  }
  iprot.readMapEnd();
}
struct.set_process_ms_avg_isSet(true);
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
break;
case 4:
if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
{
org.apache.thrift.protocol.TMap _map140=iprot.readMapBegin();
struct.executed=new HashMap<String,Map<GlobalStreamId,Long>>(2 * _map140.size);
String _key141;
Map<GlobalStreamId,Long> _val142;
for (int _i143=0; _i143 < _map140.size; ++_i143) {
_key141=iprot.readString();
{
  org.apache.thrift.protocol.TMap _map144=iprot.readMapBegin();
  _val142=new HashMap<GlobalStreamId,Long>(2 * _map144.size);
  GlobalStreamId _key145;
  long _val146;
  for (int _i147=0; _i147 < _map144.size; ++_i147) {
    _key145=new GlobalStreamId();
    _key145.read(iprot);
    _val146=iprot.readI64();
    _val142.put(_key145,_val146);
  }
  iprot.readMapEnd();
}
struct.executed.put(_key141,_val142);
}
iprot.readMapEnd();
}
struct.set_executed_isSet(true);
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
break;
case 5:
if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
{
org.apache.thrift.protocol.TMap _map148=iprot.readMapBegin();
struct.execute_ms_avg=new HashMap<String,Map<GlobalStreamId,Double>>(2 * _map148.size);
String _key149;
Map<GlobalStreamId,Double> _val150;
for (int _i151=0; _i151 < _map148.size; ++_i151) {
_key149=iprot.readString();
{
org.apache.thrift.protocol.TMap _map152=iprot.readMapBegin();
_val150=new HashMap<GlobalStreamId,Double>(2 * _map152.size);
GlobalStreamId _key153;
double _val154;
for (int _i155=0; _i155 < _map152.size; ++_i155) {
_key153=new GlobalStreamId();
_key153.read(iprot);
_val154=iprot.readDouble();
_val150.put(_key153,_val154);
}
iprot.readMapEnd();
}
struct.execute_ms_avg.put(_key149,_val150);
}
iprot.readMapEnd();
}
struct.set_execute_ms_avg_isSet(true);
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
break;
default :
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
struct.validate();
}
