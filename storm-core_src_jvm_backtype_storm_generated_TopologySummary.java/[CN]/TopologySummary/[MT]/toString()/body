{
  StringBuilder sb=new StringBuilder("TopologySummary(");
  boolean first=true;
  sb.append("id:");
  if (this.id == null) {
    sb.append("null");
  }
 else {
    sb.append(this.id);
  }
  first=false;
  if (!first)   sb.append(", ");
  sb.append("name:");
  if (this.name == null) {
    sb.append("null");
  }
 else {
    sb.append(this.name);
  }
  first=false;
  if (!first)   sb.append(", ");
  sb.append("num_tasks:");
  sb.append(this.num_tasks);
  first=false;
  if (!first)   sb.append(", ");
  sb.append("num_executors:");
  sb.append(this.num_executors);
  first=false;
  if (!first)   sb.append(", ");
  sb.append("num_workers:");
  sb.append(this.num_workers);
  first=false;
  if (!first)   sb.append(", ");
  sb.append("uptime_secs:");
  sb.append(this.uptime_secs);
  first=false;
  if (!first)   sb.append(", ");
  sb.append("status:");
  if (this.status == null) {
    sb.append("null");
  }
 else {
    sb.append(this.status);
  }
  first=false;
  if (is_set_sched_status()) {
    if (!first)     sb.append(", ");
    sb.append("sched_status:");
    if (this.sched_status == null) {
      sb.append("null");
    }
 else {
      sb.append(this.sched_status);
    }
    first=false;
  }
  if (is_set_owner()) {
    if (!first)     sb.append(", ");
    sb.append("owner:");
    if (this.owner == null) {
      sb.append("null");
    }
 else {
      sb.append(this.owner);
    }
    first=false;
  }
  if (is_set_replication_count()) {
    if (!first)     sb.append(", ");
    sb.append("replication_count:");
    sb.append(this.replication_count);
    first=false;
  }
  if (is_set_requested_memonheap()) {
    if (!first)     sb.append(", ");
    sb.append("requested_memonheap:");
    sb.append(this.requested_memonheap);
    first=false;
  }
  if (is_set_requested_memoffheap()) {
    if (!first)     sb.append(", ");
    sb.append("requested_memoffheap:");
    sb.append(this.requested_memoffheap);
    first=false;
  }
  if (is_set_requested_cpu()) {
    if (!first)     sb.append(", ");
    sb.append("requested_cpu:");
    sb.append(this.requested_cpu);
    first=false;
  }
  if (is_set_assigned_memonheap()) {
    if (!first)     sb.append(", ");
    sb.append("assigned_memonheap:");
    sb.append(this.assigned_memonheap);
    first=false;
  }
  if (is_set_assigned_memoffheap()) {
    if (!first)     sb.append(", ");
    sb.append("assigned_memoffheap:");
    sb.append(this.assigned_memoffheap);
    first=false;
  }
  if (is_set_assigned_cpu()) {
    if (!first)     sb.append(", ");
    sb.append("assigned_cpu:");
    sb.append(this.assigned_cpu);
    first=false;
  }
  sb.append(")");
  return sb.toString();
}
